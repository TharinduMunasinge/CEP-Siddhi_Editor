// Generated from /Development/Projects/Gsoc/CEP-Siddhi_Editor/client_side_Siddhi_parser/SiddhiQL.g4 by ANTLR 4.5
// jshint ignore: start
var antlr4 = require('antlr4/index');
var SiddhiQLListener = require('./SiddhiQLListener').SiddhiQLListener;
var SiddhiQLVisitor = require('./SiddhiQLVisitor').SiddhiQLVisitor;


	//import org.wso2.siddhi.query.compiler.exception.SiddhiParserException;

var grammarFileName = "SiddhiQL.g4";

var serializedATN = ["\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd",
    "\3g\u0499\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4",
    "\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t",
    "\20\4\21\t\21\4\22\t\22\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27",
    "\t\27\4\30\t\30\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4",
    "\36\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t",
    "\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t",
    "\61\4\62\t\62\4\63\t\63\4\64\t\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t",
    "8\49\t9\4:\t:\4;\t;\4<\t<\4=\t=\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\4C\tC",
    "\4D\tD\4E\tE\4F\tF\4G\tG\4H\tH\4I\tI\4J\tJ\4K\tK\4L\tL\4M\tM\4N\tN\4",
    "O\tO\4P\tP\4Q\tQ\4R\tR\4S\tS\4T\tT\4U\tU\4V\tV\4W\tW\4X\tX\4Y\tY\4Z",
    "\tZ\4[\t[\4\\\t\\\4]\t]\4^\t^\4_\t_\4`\t`\3\2\3\2\3\2\3\3\3\3\3\4\3",
    "\4\7\4\u00c8\n\4\f\4\16\4\u00cb\13\4\3\4\3\4\3\4\3\4\5\4\u00d1\n\4\3",
    "\4\3\4\3\4\3\4\3\4\5\4\u00d8\n\4\7\4\u00da\n\4\f\4\16\4\u00dd\13\4\3",
    "\4\5\4\u00e0\n\4\3\4\3\4\3\4\5\4\u00e5\n\4\3\4\3\4\3\4\5\4\u00ea\n\4",
    "\7\4\u00ec\n\4\f\4\16\4\u00ef\13\4\3\4\5\4\u00f2\n\4\3\4\3\4\3\4\3\4",
    "\3\4\5\4\u00f9\n\4\3\4\3\4\3\4\3\4\3\4\5\4\u0100\n\4\7\4\u0102\n\4\f",
    "\4\16\4\u0105\13\4\3\4\3\4\3\4\5\4\u010a\n\4\7\4\u010c\n\4\f\4\16\4",
    "\u010f\13\4\3\4\5\4\u0112\n\4\5\4\u0114\n\4\3\5\3\5\5\5\u0118\n\5\3",
    "\6\3\6\5\6\u011c\n\6\3\6\3\6\3\7\7\7\u0121\n\7\f\7\16\7\u0124\13\7\3",
    "\7\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\7\7\7\u0130\n\7\f\7\16\7\u0133",
    "\13\7\3\7\3\7\3\b\3\b\5\b\u0139\n\b\3\b\3\b\3\t\7\t\u013e\n\t\f\t\16",
    "\t\u0141\13\t\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\t\7\t\u014d\n\t",
    "\f\t\16\t\u0150\13\t\3\t\3\t\3\n\3\n\5\n\u0156\n\n\3\n\3\n\3\13\3\13",
    "\3\13\3\13\3\13\3\13\3\13\3\13\3\13\3\13\3\f\3\f\3\r\3\r\3\16\3\16\3",
    "\17\3\17\3\17\3\17\3\17\3\17\7\17\u0170\n\17\f\17\16\17\u0173\13\17",
    "\3\17\3\17\5\17\u0177\n\17\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3\20\7",
    "\20\u0181\n\20\f\20\16\20\u0184\13\20\3\20\3\20\5\20\u0188\n\20\3\21",
    "\3\21\3\21\5\21\u018d\n\21\3\21\3\21\3\22\7\22\u0192\n\22\f\22\16\22",
    "\u0195\13\22\3\22\3\22\3\22\3\22\3\22\3\22\7\22\u019d\n\22\f\22\16\22",
    "\u01a0\13\22\3\22\3\22\3\22\3\22\5\22\u01a6\n\22\3\22\3\22\3\22\5\22",
    "\u01ab\n\22\7\22\u01ad\n\22\f\22\16\22\u01b0\13\22\3\22\5\22\u01b3\n",
    "\22\3\22\3\22\3\23\3\23\5\23\u01b9\n\23\3\23\3\23\3\24\3\24\3\24\3\24",
    "\3\24\3\24\3\24\3\24\5\24\u01c5\n\24\3\25\3\25\3\25\7\25\u01ca\n\25",
    "\f\25\16\25\u01cd\13\25\3\26\3\26\3\26\3\26\3\27\3\27\5\27\u01d5\n\27",
    "\3\27\3\27\3\30\7\30\u01da\n\30\f\30\16\30\u01dd\13\30\3\30\3\30\3\30",
    "\5\30\u01e2\n\30\3\30\5\30\u01e5\n\30\3\30\3\30\3\31\3\31\3\31\3\31",
    "\3\31\5\31\u01ee\n\31\3\32\3\32\5\32\u01f2\n\32\3\32\5\32\u01f5\n\32",
    "\3\32\5\32\u01f8\n\32\3\33\3\33\3\33\3\33\3\33\3\33\5\33\u0200\n\33",
    "\3\33\5\33\u0203\n\33\3\33\3\33\3\33\3\33\3\33\5\33\u020a\n\33\3\33",
    "\5\33\u020d\n\33\3\33\3\33\3\33\3\33\3\33\3\33\5\33\u0215\n\33\3\33",
    "\5\33\u0218\n\33\5\33\u021a\n\33\3\34\3\34\5\34\u021e\n\34\3\34\5\34",
    "\u0221\n\34\3\34\3\34\5\34\u0225\n\34\3\35\3\35\3\36\3\36\3\36\3\36",
    "\3\36\5\36\u022e\n\36\3\36\3\36\3\36\3\36\3\36\5\36\u0235\n\36\3\36",
    "\3\36\3\36\3\36\5\36\u023b\n\36\5\36\u023d\n\36\3\36\3\36\3\36\7\36",
    "\u0242\n\36\f\36\16\36\u0245\13\36\3\37\3\37\3\37\3\37\3\37\5\37\u024c",
    "\n\37\3\37\3\37\5\37\u0250\n\37\5\37\u0252\n\37\3\37\3\37\3\37\7\37",
    "\u0257\n\37\f\37\16\37\u025a\13\37\3 \3 \3 \5 \u025f\n \3!\3!\3!\3!",
    "\5!\u0265\n!\3!\3!\3!\3!\3!\3!\3!\3!\5!\u026f\n!\3\"\3\"\3\"\3\"\3\"",
    "\3#\3#\3#\5#\u0279\n#\3#\3#\3$\3$\5$\u027f\n$\3%\6%\u0282\n%\r%\16%",
    "\u0283\3&\3&\5&\u0288\n&\3\'\5\'\u028b\n\'\3\'\3\'\5\'\u028f\n\'\3\'",
    "\3\'\3\'\3(\3(\3(\3(\3(\5(\u0299\n(\3(\3(\5(\u029d\n(\5(\u029f\n(\3",
    "(\3(\3(\7(\u02a4\n(\f(\16(\u02a7\13(\3)\3)\3)\5)\u02ac\n)\3*\3*\3*\3",
    "*\3*\3*\3*\3*\5*\u02b6\n*\3+\3+\3+\3+\3+\3+\3+\5+\u02bf\n+\3+\5+\u02c2",
    "\n+\3+\3+\5+\u02c6\n+\5+\u02c8\n+\3,\5,\u02cb\n,\3,\3,\3,\3,\3-\3-\3",
    "-\3.\3.\3.\3.\3.\3/\3/\3/\3/\3/\7/\u02de\n/\f/\16/\u02e1\13/\5/\u02e3",
    "\n/\3/\5/\u02e6\n/\3/\5/\u02e9\n/\3\60\3\60\3\60\6\60\u02ee\n\60\r\60",
    "\16\60\u02ef\3\61\3\61\3\61\3\62\3\62\5\62\u02f7\n\62\3\62\3\62\3\62",
    "\3\62\3\62\3\62\5\62\u02ff\n\62\3\62\3\62\3\62\3\62\3\62\3\62\3\62\5",
    "\62\u0308\n\62\3\62\3\62\3\62\3\62\3\62\5\62\u030f\n\62\5\62\u0311\n",
    "\62\3\63\3\63\3\63\3\63\3\63\3\63\3\63\3\63\3\63\3\63\3\63\5\63\u031e",
    "\n\63\3\63\5\63\u0321\n\63\3\64\3\64\5\64\u0325\n\64\3\64\3\64\3\64",
    "\3\64\5\64\u032b\n\64\3\64\3\64\3\64\3\64\5\64\u0331\n\64\3\65\3\65",
    "\3\66\3\66\3\66\3\67\3\67\3\67\3\67\3\67\5\67\u033d\n\67\38\38\39\3",
    "9\3:\3:\3:\3:\3:\3:\3:\3:\3:\3:\3:\5:\u034e\n:\3:\3:\3:\3:\5:\u0354",
    "\n:\3:\3:\3:\3:\5:\u035a\n:\3:\3:\3:\3:\3:\3:\5:\u0362\n:\3:\3:\3:\3",
    ":\5:\u0368\n:\3:\3:\3:\3:\3:\3:\3:\3:\3:\3:\7:\u0374\n:\f:\16:\u0377",
    "\13:\3;\3;\3;\5;\u037c\n;\3;\3;\3;\5;\u0381\n;\3;\3;\3<\3<\3<\7<\u0388",
    "\n<\f<\16<\u038b\13<\3=\3=\5=\u038f\n=\3=\3=\3=\3>\5>\u0395\n>\3>\3",
    ">\3>\3>\3>\5>\u039c\n>\3?\5?\u039f\n?\3?\3?\3?\3?\3?\5?\u03a6\n?\3?",
    "\3?\3?\3?\3?\3?\5?\u03ae\n?\5?\u03b0\n?\3?\3?\3?\3?\5?\u03b6\n?\3@\3",
    "@\3@\3@\5@\u03bc\n@\5@\u03be\n@\3A\3A\3B\3B\3C\3C\3D\3D\3E\3E\3E\7E",
    "\u03cb\nE\fE\16E\u03ce\13E\3F\3F\3G\3G\3H\5H\u03d5\nH\3H\3H\3I\3I\3",
    "J\3J\3K\3K\5K\u03df\nK\3L\3L\3L\3L\3L\3L\3L\3L\5L\u03e9\nL\3M\3M\3N",
    "\3N\3N\3N\3N\3N\3N\3N\3N\3N\3N\3N\5N\u03f9\nN\3N\5N\u03fc\nN\3O\3O\3",
    "O\3O\3O\3O\3O\5O\u0405\nO\3P\3P\3Q\3Q\3R\3R\5R\u040d\nR\3R\5R\u0410",
    "\nR\3R\5R\u0413\nR\3R\5R\u0416\nR\3R\5R\u0419\nR\3R\5R\u041c\nR\3R\5",
    "R\u041f\nR\3R\3R\5R\u0423\nR\3R\5R\u0426\nR\3R\5R\u0429\nR\3R\5R\u042c",
    "\nR\3R\5R\u042f\nR\3R\5R\u0432\nR\3R\3R\5R\u0436\nR\3R\5R\u0439\nR\3",
    "R\5R\u043c\nR\3R\5R\u043f\nR\3R\5R\u0442\nR\3R\3R\5R\u0446\nR\3R\5R",
    "\u0449\nR\3R\5R\u044c\nR\3R\5R\u044f\nR\3R\3R\5R\u0453\nR\3R\5R\u0456",
    "\nR\3R\5R\u0459\nR\3R\3R\5R\u045d\nR\3R\5R\u0460\nR\3R\3R\5R\u0464\n",
    "R\3R\5R\u0467\nR\3S\3S\3S\3T\3T\3T\3U\3U\3U\3V\3V\3V\3W\3W\3W\3X\3X",
    "\3X\3Y\3Y\3Y\3Z\3Z\3Z\3[\5[\u0482\n[\3[\3[\3\\\5\\\u0487\n\\\3\\\3\\",
    "\3]\5]\u048c\n]\3]\3]\3^\5^\u0491\n^\3^\3^\3_\3_\3`\3`\3`\2\6:<Nra\2",
    "\4\6\b\n\f\16\20\22\24\26\30\32\34\36 \"$&(*,.\60\62\64\668:<>@BDFH",
    "JLNPRTVXZ\\^`bdfhjlnprtvxz|~\u0080\u0082\u0084\u0086\u0088\u008a\u008c",
    "\u008e\u0090\u0092\u0094\u0096\u0098\u009a\u009c\u009e\u00a0\u00a2\u00a4",
    "\u00a6\u00a8\u00aa\u00ac\u00ae\u00b0\u00b2\u00b4\u00b6\u00b8\u00ba\u00bc",
    "\u00be\2\b\3\2EG\3\2Y_\3\2`a\6\2\37 \"\"$:<_\4\2\21\21\23\23\3\2WX\u0512",
    "\2\u00c0\3\2\2\2\4\u00c3\3\2\2\2\6\u00c9\3\2\2\2\b\u0117\3\2\2\2\n\u0119",
    "\3\2\2\2\f\u0122\3\2\2\2\16\u0136\3\2\2\2\20\u013f\3\2\2\2\22\u0153",
    "\3\2\2\2\24\u0159\3\2\2\2\26\u0163\3\2\2\2\30\u0165\3\2\2\2\32\u0167",
    "\3\2\2\2\34\u0169\3\2\2\2\36\u0178\3\2\2\2 \u018c\3\2\2\2\"\u0193\3",
    "\2\2\2$\u01b6\3\2\2\2&\u01c4\3\2\2\2(\u01c6\3\2\2\2*\u01ce\3\2\2\2,",
    "\u01d2\3\2\2\2.\u01db\3\2\2\2\60\u01ed\3\2\2\2\62\u01ef\3\2\2\2\64\u0219",
    "\3\2\2\2\66\u021b\3\2\2\28\u0226\3\2\2\2:\u023c\3\2\2\2<\u0251\3\2\2",
    "\2>\u025e\3\2\2\2@\u026e\3\2\2\2B\u0270\3\2\2\2D\u0278\3\2\2\2F\u027c",
    "\3\2\2\2H\u0281\3\2\2\2J\u0287\3\2\2\2L\u028a\3\2\2\2N\u029e\3\2\2\2",
    "P\u02ab\3\2\2\2R\u02ad\3\2\2\2T\u02c7\3\2\2\2V\u02ca\3\2\2\2X\u02d0",
    "\3\2\2\2Z\u02d3\3\2\2\2\\\u02d8\3\2\2\2^\u02ea\3\2\2\2`\u02f1\3\2\2",
    "\2b\u0310\3\2\2\2d\u0320\3\2\2\2f\u0330\3\2\2\2h\u0332\3\2\2\2j\u0334",
    "\3\2\2\2l\u033c\3\2\2\2n\u033e\3\2\2\2p\u0340\3\2\2\2r\u034d\3\2\2\2",
    "t\u037b\3\2\2\2v\u0384\3\2\2\2x\u038e\3\2\2\2z\u0394\3\2\2\2|\u03b5",
    "\3\2\2\2~\u03bd\3\2\2\2\u0080\u03bf\3\2\2\2\u0082\u03c1\3\2\2\2\u0084",
    "\u03c3\3\2\2\2\u0086\u03c5\3\2\2\2\u0088\u03c7\3\2\2\2\u008a\u03cf\3",
    "\2\2\2\u008c\u03d1\3\2\2\2\u008e\u03d4\3\2\2\2\u0090\u03d8\3\2\2\2\u0092",
    "\u03da\3\2\2\2\u0094\u03de\3\2\2\2\u0096\u03e8\3\2\2\2\u0098\u03ea\3",
    "\2\2\2\u009a\u03fb\3\2\2\2\u009c\u0404\3\2\2\2\u009e\u0406\3\2\2\2\u00a0",
    "\u0408\3\2\2\2\u00a2\u0466\3\2\2\2\u00a4\u0468\3\2\2\2\u00a6\u046b\3",
    "\2\2\2\u00a8\u046e\3\2\2\2\u00aa\u0471\3\2\2\2\u00ac\u0474\3\2\2\2\u00ae",
    "\u0477\3\2\2\2\u00b0\u047a\3\2\2\2\u00b2\u047d\3\2\2\2\u00b4\u0481\3",
    "\2\2\2\u00b6\u0486\3\2\2\2\u00b8\u048b\3\2\2\2\u00ba\u0490\3\2\2\2\u00bc",
    "\u0494\3\2\2\2\u00be\u0496\3\2\2\2\u00c0\u00c1\5\6\4\2\u00c1\u00c2\7",
    "\2\2\3\u00c2\3\3\2\2\2\u00c3\u00c4\7f\2\2\u00c4\5\3\2\2\2\u00c5\u00c8",
    "\5\36\20\2\u00c6\u00c8\5\4\3\2\u00c7\u00c5\3\2\2\2\u00c7\u00c6\3\2\2",
    "\2\u00c8\u00cb\3\2\2\2\u00c9\u00c7\3\2\2\2\u00c9\u00ca\3\2\2\2\u00ca",
    "\u0113\3\2\2\2\u00cb\u00c9\3\2\2\2\u00cc\u00d1\5\f\7\2\u00cd\u00d1\5",
    "\20\t\2\u00ce\u00d1\5\4\3\2\u00cf\u00d1\5\24\13\2\u00d0\u00cc\3\2\2",
    "\2\u00d0\u00cd\3\2\2\2\u00d0\u00ce\3\2\2\2\u00d0\u00cf\3\2\2\2\u00d1",
    "\u00db\3\2\2\2\u00d2\u00d7\7\b\2\2\u00d3\u00d8\5\f\7\2\u00d4\u00d8\5",
    "\20\t\2\u00d5\u00d8\5\4\3\2\u00d6\u00d8\5\24\13\2\u00d7\u00d3\3\2\2",
    "\2\u00d7\u00d4\3\2\2\2\u00d7\u00d5\3\2\2\2\u00d7\u00d6\3\2\2\2\u00d8",
    "\u00da\3\2\2\2\u00d9\u00d2\3\2\2\2\u00da\u00dd\3\2\2\2\u00db\u00d9\3",
    "\2\2\2\u00db\u00dc\3\2\2\2\u00dc\u00df\3\2\2\2\u00dd\u00db\3\2\2\2\u00de",
    "\u00e0\7\b\2\2\u00df\u00de\3\2\2\2\u00df\u00e0\3\2\2\2\u00e0\u0114\3",
    "\2\2\2\u00e1\u0114\3\2\2\2\u00e2\u00e5\5\b\5\2\u00e3\u00e5\5\4\3\2\u00e4",
    "\u00e2\3\2\2\2\u00e4\u00e3\3\2\2\2\u00e5\u00ed\3\2\2\2\u00e6\u00e9\7",
    "\b\2\2\u00e7\u00ea\5\b\5\2\u00e8\u00ea\5\4\3\2\u00e9\u00e7\3\2\2\2\u00e9",
    "\u00e8\3\2\2\2\u00ea\u00ec\3\2\2\2\u00eb\u00e6\3\2\2\2\u00ec\u00ef\3",
    "\2\2\2\u00ed\u00eb\3\2\2\2\u00ed\u00ee\3\2\2\2\u00ee\u00f1\3\2\2\2\u00ef",
    "\u00ed\3\2\2\2\u00f0\u00f2\7\b\2\2\u00f1\u00f0\3\2\2\2\u00f1\u00f2\3",
    "\2\2\2\u00f2\u0114\3\2\2\2\u00f3\u0114\3\2\2\2\u00f4\u00f9\5\f\7\2\u00f5",
    "\u00f9\5\20\t\2\u00f6\u00f9\5\4\3\2\u00f7\u00f9\5\24\13\2\u00f8\u00f4",
    "\3\2\2\2\u00f8\u00f5\3\2\2\2\u00f8\u00f6\3\2\2\2\u00f8\u00f7\3\2\2\2",
    "\u00f9\u0103\3\2\2\2\u00fa\u00ff\7\b\2\2\u00fb\u0100\5\f\7\2\u00fc\u0100",
    "\5\20\t\2\u00fd\u0100\5\4\3\2\u00fe\u0100\5\24\13\2\u00ff\u00fb\3\2",
    "\2\2\u00ff\u00fc\3\2\2\2\u00ff\u00fd\3\2\2\2\u00ff\u00fe\3\2\2\2\u0100",
    "\u0102\3\2\2\2\u0101\u00fa\3\2\2\2\u0102\u0105\3\2\2\2\u0103\u0101\3",
    "\2\2\2\u0103\u0104\3\2\2\2\u0104\u010d\3\2\2\2\u0105\u0103\3\2\2\2\u0106",
    "\u0109\7\b\2\2\u0107\u010a\5\b\5\2\u0108\u010a\5\4\3\2\u0109\u0107\3",
    "\2\2\2\u0109\u0108\3\2\2\2\u010a\u010c\3\2\2\2\u010b\u0106\3\2\2\2\u010c",
    "\u010f\3\2\2\2\u010d\u010b\3\2\2\2\u010d\u010e\3\2\2\2\u010e\u0111\3",
    "\2\2\2\u010f\u010d\3\2\2\2\u0110\u0112\7\b\2\2\u0111\u0110\3\2\2\2\u0111",
    "\u0112\3\2\2\2\u0112\u0114\3\2\2\2\u0113\u00d0\3\2\2\2\u0113\u00e1\3",
    "\2\2\2\u0113\u00e4\3\2\2\2\u0113\u00f3\3\2\2\2\u0113\u00f8\3\2\2\2\u0114",
    "\7\3\2\2\2\u0115\u0118\5.\30\2\u0116\u0118\5\"\22\2\u0117\u0115\3\2",
    "\2\2\u0117\u0116\3\2\2\2\u0118\t\3\2\2\2\u0119\u011b\5\f\7\2\u011a\u011c",
    "\7\b\2\2\u011b\u011a\3\2\2\2\u011b\u011c\3\2\2\2\u011c\u011d\3\2\2\2",
    "\u011d\u011e\7\2\2\3\u011e\13\3\2\2\2\u011f\u0121\5\34\17\2\u0120\u011f",
    "\3\2\2\2\u0121\u0124\3\2\2\2\u0122\u0120\3\2\2\2\u0122\u0123\3\2\2\2",
    "\u0123\u0125\3\2\2\2\u0124\u0122\3\2\2\2\u0125\u0126\7 \2\2\u0126\u0127",
    "\7\37\2\2\u0127\u0128\5\u008eH\2\u0128\u0129\7\n\2\2\u0129\u012a\5\u008a",
    "F\2\u012a\u0131\5\u0098M\2\u012b\u012c\7\16\2\2\u012c\u012d\5\u008a",
    "F\2\u012d\u012e\5\u0098M\2\u012e\u0130\3\2\2\2\u012f\u012b\3\2\2\2\u0130",
    "\u0133\3\2\2\2\u0131\u012f\3\2\2\2\u0131\u0132\3\2\2\2\u0132\u0134\3",
    "\2\2\2\u0133\u0131\3\2\2\2\u0134\u0135\7\13\2\2\u0135\r\3\2\2\2\u0136",
    "\u0138\5\20\t\2\u0137\u0139\7\b\2\2\u0138\u0137\3\2\2\2\u0138\u0139",
    "\3\2\2\2\u0139\u013a\3\2\2\2\u013a\u013b\7\2\2\3\u013b\17\3\2\2\2\u013c",
    "\u013e\5\34\17\2\u013d\u013c\3\2\2\2\u013e\u0141\3\2\2\2\u013f\u013d",
    "\3\2\2\2\u013f\u0140\3\2\2\2\u0140\u0142\3\2\2\2\u0141\u013f\3\2\2\2",
    "\u0142\u0143\7 \2\2\u0143\u0144\7\"\2\2\u0144\u0145\5\u008eH\2\u0145",
    "\u0146\7\n\2\2\u0146\u0147\5\u008aF\2\u0147\u014e\5\u0098M\2\u0148\u0149",
    "\7\16\2\2\u0149\u014a\5\u008aF\2\u014a\u014b\5\u0098M\2\u014b\u014d",
    "\3\2\2\2\u014c\u0148\3\2\2\2\u014d\u0150\3\2\2\2\u014e\u014c\3\2\2\2",
    "\u014e\u014f\3\2\2\2\u014f\u0151\3\2\2\2\u0150\u014e\3\2\2\2\u0151\u0152",
    "\7\13\2\2\u0152\21\3\2\2\2\u0153\u0155\5\24\13\2\u0154\u0156\7\b\2\2",
    "\u0155\u0154\3\2\2\2\u0155\u0156\3\2\2\2\u0156\u0157\3\2\2\2\u0157\u0158",
    "\7\2\2\3\u0158\23\3\2\2\2\u0159\u015a\7 \2\2\u015a\u015b\7!\2\2\u015b",
    "\u015c\5\26\f\2\u015c\u015d\7\f\2\2\u015d\u015e\5\30\r\2\u015e\u015f",
    "\7\r\2\2\u015f\u0160\7.\2\2\u0160\u0161\5\u0098M\2\u0161\u0162\5\32",
    "\16\2\u0162\25\3\2\2\2\u0163\u0164\5\u009eP\2\u0164\27\3\2\2\2\u0165",
    "\u0166\5\u009eP\2\u0166\31\3\2\2\2\u0167\u0168\7g\2\2\u0168\33\3\2\2",
    "\2\u0169\u016a\7\34\2\2\u016a\u0176\5\u0094K\2\u016b\u016c\7\n\2\2\u016c",
    "\u0171\5 \21\2\u016d\u016e\7\16\2\2\u016e\u0170\5 \21\2\u016f\u016d",
    "\3\2\2\2\u0170\u0173\3\2\2\2\u0171\u016f\3\2\2\2\u0171\u0172\3\2\2\2",
    "\u0172\u0174\3\2\2\2\u0173\u0171\3\2\2\2\u0174\u0175\7\13\2\2\u0175",
    "\u0177\3\2\2\2\u0176\u016b\3\2\2\2\u0176\u0177\3\2\2\2\u0177\35\3\2",
    "\2\2\u0178\u0179\7\34\2\2\u0179\u017a\7#\2\2\u017a\u017b\7\7\2\2\u017b",
    "\u0187\5\u0094K\2\u017c\u017d\7\n\2\2\u017d\u0182\5 \21\2\u017e\u017f",
    "\7\16\2\2\u017f\u0181\5 \21\2\u0180\u017e\3\2\2\2\u0181\u0184\3\2\2",
    "\2\u0182\u0180\3\2\2\2\u0182\u0183\3\2\2\2\u0183\u0185\3\2\2\2\u0184",
    "\u0182\3\2\2\2\u0185\u0186\7\13\2\2\u0186\u0188\3\2\2\2\u0187\u017c",
    "\3\2\2\2\u0187\u0188\3\2\2\2\u0188\37\3\2\2\2\u0189\u018a\5\u0088E\2",
    "\u018a\u018b\7\17\2\2\u018b\u018d\3\2\2\2\u018c\u0189\3\2\2\2\u018c",
    "\u018d\3\2\2\2\u018d\u018e\3\2\2\2\u018e\u018f\5\u008cG\2\u018f!\3\2",
    "\2\2\u0190\u0192\5\34\17\2\u0191\u0190\3\2\2\2\u0192\u0195\3\2\2\2\u0193",
    "\u0191\3\2\2\2\u0193\u0194\3\2\2\2\u0194\u0196\3\2\2\2\u0195\u0193\3",
    "\2\2\2\u0196\u0197\7%\2\2\u0197\u0198\7@\2\2\u0198\u0199\7\n\2\2\u0199",
    "\u019e\5&\24\2\u019a\u019b\7\16\2\2\u019b\u019d\5&\24\2\u019c\u019a",
    "\3\2\2\2\u019d\u01a0\3\2\2\2\u019e\u019c\3\2\2\2\u019e\u019f\3\2\2\2",
    "\u019f\u01a1\3\2\2\2\u01a0\u019e\3\2\2\2\u01a1\u01a2\7\13\2\2\u01a2",
    "\u01a5\7A\2\2\u01a3\u01a6\5.\30\2\u01a4\u01a6\5\4\3\2\u01a5\u01a3\3",
    "\2\2\2\u01a5\u01a4\3\2\2\2\u01a6\u01ae\3\2\2\2\u01a7\u01aa\7\b\2\2\u01a8",
    "\u01ab\5.\30\2\u01a9\u01ab\5\4\3\2\u01aa\u01a8\3\2\2\2\u01aa\u01a9\3",
    "\2\2\2\u01ab\u01ad\3\2\2\2\u01ac\u01a7\3\2\2\2\u01ad\u01b0\3\2\2\2\u01ae",
    "\u01ac\3\2\2\2\u01ae\u01af\3\2\2\2\u01af\u01b2\3\2\2\2\u01b0\u01ae\3",
    "\2\2\2\u01b1\u01b3\7\b\2\2\u01b2\u01b1\3\2\2\2\u01b2\u01b3\3\2\2\2\u01b3",
    "\u01b4\3\2\2\2\u01b4\u01b5\7B\2\2\u01b5#\3\2\2\2\u01b6\u01b8\5\"\22",
    "\2\u01b7\u01b9\7\b\2\2\u01b8\u01b7\3\2\2\2\u01b8\u01b9\3\2\2\2\u01b9",
    "\u01ba\3\2\2\2\u01ba\u01bb\7\2\2\3\u01bb%\3\2\2\2\u01bc\u01bd\5n8\2",
    "\u01bd\u01be\7\67\2\2\u01be\u01bf\5\u0084C\2\u01bf\u01c5\3\2\2\2\u01c0",
    "\u01c1\5(\25\2\u01c1\u01c2\7\67\2\2\u01c2\u01c3\5\u0084C\2\u01c3\u01c5",
    "\3\2\2\2\u01c4\u01bc\3\2\2\2\u01c4\u01c0\3\2\2\2\u01c5\'\3\2\2\2\u01c6",
    "\u01cb\5*\26\2\u01c7\u01c8\79\2\2\u01c8\u01ca\5*\26\2\u01c9\u01c7\3",
    "\2\2\2\u01ca\u01cd\3\2\2\2\u01cb\u01c9\3\2\2\2\u01cb\u01cc\3\2\2\2\u01cc",
    ")\3\2\2\2\u01cd\u01cb\3\2\2\2\u01ce\u01cf\5p9\2\u01cf\u01d0\78\2\2\u01d0",
    "\u01d1\5\u00be`\2\u01d1+\3\2\2\2\u01d2\u01d4\5.\30\2\u01d3\u01d5\7\b",
    "\2\2\u01d4\u01d3\3\2\2\2\u01d4\u01d5\3\2\2\2\u01d5\u01d6\3\2\2\2\u01d6",
    "\u01d7\7\2\2\3\u01d7-\3\2\2\2\u01d8\u01da\5\34\17\2\u01d9\u01d8\3\2",
    "\2\2\u01da\u01dd\3\2\2\2\u01db\u01d9\3\2\2\2\u01db\u01dc\3\2\2\2\u01dc",
    "\u01de\3\2\2\2\u01dd\u01db\3\2\2\2\u01de\u01df\7$\2\2\u01df\u01e1\5",
    "\60\31\2\u01e0\u01e2\5\\/\2\u01e1\u01e0\3\2\2\2\u01e1\u01e2\3\2\2\2",
    "\u01e2\u01e4\3\2\2\2\u01e3\u01e5\5f\64\2\u01e4\u01e3\3\2\2\2\u01e4\u01e5",
    "\3\2\2\2\u01e5\u01e6\3\2\2\2\u01e6\u01e7\5b\62\2\u01e7/\3\2\2\2\u01e8",
    "\u01ee\5\62\32\2\u01e9\u01ee\5\64\33\2\u01ea\u01ee\58\35\2\u01eb\u01ee",
    "\5L\'\2\u01ec\u01ee\5T+\2\u01ed\u01e8\3\2\2\2\u01ed\u01e9\3\2\2\2\u01ed",
    "\u01ea\3\2\2\2\u01ed\u01eb\3\2\2\2\u01ed\u01ec\3\2\2\2\u01ee\61\3\2",
    "\2\2\u01ef\u01f1\5\u008eH\2\u01f0\u01f2\5H%\2\u01f1\u01f0\3\2\2\2\u01f1",
    "\u01f2\3\2\2\2\u01f2\u01f4\3\2\2\2\u01f3\u01f5\5Z.\2\u01f4\u01f3\3\2",
    "\2\2\u01f4\u01f5\3\2\2\2\u01f5\u01f7\3\2\2\2\u01f6\u01f8\5H%\2\u01f7",
    "\u01f6\3\2\2\2\u01f7\u01f8\3\2\2\2\u01f8\63\3\2\2\2\u01f9\u01fa\5\66",
    "\34\2\u01fa\u01fb\5\u009aN\2\u01fb\u01fc\5\66\34\2\u01fc\u01ff\7N\2",
    "\2\u01fd\u01fe\7<\2\2\u01fe\u0200\5p9\2\u01ff\u01fd\3\2\2\2\u01ff\u0200",
    "\3\2\2\2\u0200\u0202\3\2\2\2\u0201\u0203\5j\66\2\u0202\u0201\3\2\2\2",
    "\u0202\u0203\3\2\2\2\u0203\u021a\3\2\2\2\u0204\u0205\5\66\34\2\u0205",
    "\u0206\5\u009aN\2\u0206\u0209\5\66\34\2\u0207\u0208\7<\2\2\u0208\u020a",
    "\5p9\2\u0209\u0207\3\2\2\2\u0209\u020a\3\2\2\2\u020a\u020c\3\2\2\2\u020b",
    "\u020d\5j\66\2\u020c\u020b\3\2\2\2\u020c\u020d\3\2\2\2\u020d\u021a\3",
    "\2\2\2\u020e\u020f\5\66\34\2\u020f\u0210\7N\2\2\u0210\u0211\5\u009a",
    "N\2\u0211\u0214\5\66\34\2\u0212\u0213\7<\2\2\u0213\u0215\5p9\2\u0214",
    "\u0212\3\2\2\2\u0214\u0215\3\2\2\2\u0215\u0217\3\2\2\2\u0216\u0218\5",
    "j\66\2\u0217\u0216\3\2\2\2\u0217\u0218\3\2\2\2\u0218\u021a\3\2\2\2\u0219",
    "\u01f9\3\2\2\2\u0219\u0204\3\2\2\2\u0219\u020e\3\2\2\2\u021a\65\3\2",
    "\2\2\u021b\u021d\5\u008eH\2\u021c\u021e\5H%\2\u021d\u021c\3\2\2\2\u021d",
    "\u021e\3\2\2\2\u021e\u0220\3\2\2\2\u021f\u0221\5Z.\2\u0220\u021f\3\2",
    "\2\2\u0220\u0221\3\2\2\2\u0221\u0224\3\2\2\2\u0222\u0223\78\2\2\u0223",
    "\u0225\5\u0086D\2\u0224\u0222\3\2\2\2\u0224\u0225\3\2\2\2\u0225\67\3",
    "\2\2\2\u0226\u0227\5:\36\2\u02279\3\2\2\2\u0228\u0229\b\36\1\2\u0229",
    "\u022a\7\n\2\2\u022a\u022b\5:\36\2\u022b\u022d\7\13\2\2\u022c\u022e",
    "\5j\66\2\u022d\u022c\3\2\2\2\u022d\u022e\3\2\2\2\u022e\u023d\3\2\2\2",
    "\u022f\u0230\7D\2\2\u0230\u0231\7\n\2\2\u0231\u0232\5<\37\2\u0232\u0234",
    "\7\13\2\2\u0233\u0235\5j\66\2\u0234\u0233\3\2\2\2\u0234\u0235\3\2\2",
    "\2\u0235\u023d\3\2\2\2\u0236\u023d\5<\37\2\u0237\u0238\7D\2\2\u0238",
    "\u023a\5> \2\u0239\u023b\5j\66\2\u023a\u0239\3\2\2\2\u023a\u023b\3\2",
    "\2\2\u023b\u023d\3\2\2\2\u023c\u0228\3\2\2\2\u023c\u022f\3\2\2\2\u023c",
    "\u0236\3\2\2\2\u023c\u0237\3\2\2\2\u023d\u0243\3\2\2\2\u023e\u023f\f",
    "\5\2\2\u023f\u0240\7\35\2\2\u0240\u0242\5:\36\6\u0241\u023e\3\2\2\2",
    "\u0242\u0245\3\2\2\2\u0243\u0241\3\2\2\2\u0243\u0244\3\2\2\2\u0244;",
    "\3\2\2\2\u0245\u0243\3\2\2\2\u0246\u0247\b\37\1\2\u0247\u0248\7\n\2",
    "\2\u0248\u0249\5<\37\2\u0249\u024b\7\13\2\2\u024a\u024c\5j\66\2\u024b",
    "\u024a\3\2\2\2\u024b\u024c\3\2\2\2\u024c\u0252\3\2\2\2\u024d\u024f\5",
    "> \2\u024e\u0250\5j\66\2\u024f\u024e\3\2\2\2\u024f\u0250\3\2\2\2\u0250",
    "\u0252\3\2\2\2\u0251\u0246\3\2\2\2\u0251\u024d\3\2\2\2\u0252\u0258\3",
    "\2\2\2\u0253\u0254\f\4\2\2\u0254\u0255\7\35\2\2\u0255\u0257\5<\37\5",
    "\u0256\u0253\3\2\2\2\u0257\u025a\3\2\2\2\u0258\u0256\3\2\2\2\u0258\u0259",
    "\3\2\2\2\u0259=\3\2\2\2\u025a\u0258\3\2\2\2\u025b\u025f\5@!\2\u025c",
    "\u025f\5B\"\2\u025d\u025f\5D#\2\u025e\u025b\3\2\2\2\u025e\u025c\3\2",
    "\2\2\u025e\u025d\3\2\2\2\u025f?\3\2\2\2\u0260\u0261\7>\2\2\u0261\u0264",
    "\5D#\2\u0262\u0263\7:\2\2\u0263\u0265\5D#\2\u0264\u0262\3\2\2\2\u0264",
    "\u0265\3\2\2\2\u0265\u026f\3\2\2\2\u0266\u0267\5D#\2\u0267\u0268\7:",
    "\2\2\u0268\u0269\5D#\2\u0269\u026f\3\2\2\2\u026a\u026b\5D#\2\u026b\u026c",
    "\79\2\2\u026c\u026d\5D#\2\u026d\u026f\3\2\2\2\u026e\u0260\3\2\2\2\u026e",
    "\u0266\3\2\2\2\u026e\u026a\3\2\2\2\u026fA\3\2\2\2\u0270\u0271\5D#\2",
    "\u0271\u0272\7\26\2\2\u0272\u0273\5\u0096L\2\u0273\u0274\7\30\2\2\u0274",
    "C\3\2\2\2\u0275\u0276\5\u0092J\2\u0276\u0277\7\17\2\2\u0277\u0279\3",
    "\2\2\2\u0278\u0275\3\2\2\2\u0278\u0279\3\2\2\2\u0279\u027a\3\2\2\2\u027a",
    "\u027b\5F$\2\u027bE\3\2\2\2\u027c\u027e\5\u008eH\2\u027d\u027f\5H%\2",
    "\u027e\u027d\3\2\2\2\u027e\u027f\3\2\2\2\u027fG\3\2\2\2\u0280\u0282",
    "\5J&\2\u0281\u0280\3\2\2\2\u0282\u0283\3\2\2\2\u0283\u0281\3\2\2\2\u0283",
    "\u0284\3\2\2\2\u0284I\3\2\2\2\u0285\u0288\5V,\2\u0286\u0288\5X-\2\u0287",
    "\u0285\3\2\2\2\u0287\u0286\3\2\2\2\u0288K\3\2\2\2\u0289\u028b\7D\2\2",
    "\u028a\u0289\3\2\2\2\u028a\u028b\3\2\2\2\u028b\u028c\3\2\2\2\u028c\u028e",
    "\5P)\2\u028d\u028f\5j\66\2\u028e\u028d\3\2\2\2\u028e\u028f\3\2\2\2\u028f",
    "\u0290\3\2\2\2\u0290\u0291\7\16\2\2\u0291\u0292\5N(\2\u0292M\3\2\2\2",
    "\u0293\u0294\b(\1\2\u0294\u0295\7\n\2\2\u0295\u0296\5N(\2\u0296\u0298",
    "\7\13\2\2\u0297\u0299\5j\66\2\u0298\u0297\3\2\2\2\u0298\u0299\3\2\2",
    "\2\u0299\u029f\3\2\2\2\u029a\u029c\5P)\2\u029b\u029d\5j\66\2\u029c\u029b",
    "\3\2\2\2\u029c\u029d\3\2\2\2\u029d\u029f\3\2\2\2\u029e\u0293\3\2\2\2",
    "\u029e\u029a\3\2\2\2\u029f\u02a5\3\2\2\2\u02a0\u02a1\f\4\2\2\u02a1\u02a2",
    "\7\16\2\2\u02a2\u02a4\5N(\5\u02a3\u02a0\3\2\2\2\u02a4\u02a7\3\2\2\2",
    "\u02a5\u02a3\3\2\2\2\u02a5\u02a6\3\2\2\2\u02a6O\3\2\2\2\u02a7\u02a5",
    "\3\2\2\2\u02a8\u02ac\5@!\2\u02a9\u02ac\5R*\2\u02aa\u02ac\5D#\2\u02ab",
    "\u02a8\3\2\2\2\u02ab\u02a9\3\2\2\2\u02ab\u02aa\3\2\2\2\u02acQ\3\2\2",
    "\2\u02ad\u02b5\5D#\2\u02ae\u02af\7\26\2\2\u02af\u02b0\5\u0096L\2\u02b0",
    "\u02b1\7\30\2\2\u02b1\u02b6\3\2\2\2\u02b2\u02b6\7\20\2\2\u02b3\u02b6",
    "\7\22\2\2\u02b4\u02b6\7\21\2\2\u02b5\u02ae\3\2\2\2\u02b5\u02b2\3\2\2",
    "\2\u02b5\u02b3\3\2\2\2\u02b5\u02b4\3\2\2\2\u02b6S\3\2\2\2\u02b7\u02b8",
    "\7\n\2\2\u02b8\u02b9\5T+\2\u02b9\u02ba\7\13\2\2\u02ba\u02c8\3\2\2\2",
    "\u02bb\u02bc\7$\2\2\u02bc\u02be\5\60\31\2\u02bd\u02bf\5\\/\2\u02be\u02bd",
    "\3\2\2\2\u02be\u02bf\3\2\2\2\u02bf\u02c1\3\2\2\2\u02c0\u02c2\5f\64\2",
    "\u02c1\u02c0\3\2\2\2\u02c1\u02c2\3\2\2\2\u02c2\u02c3\3\2\2\2\u02c3\u02c5",
    "\7.\2\2\u02c4\u02c6\5d\63\2\u02c5\u02c4\3\2\2\2\u02c5\u02c6\3\2\2\2",
    "\u02c6\u02c8\3\2\2\2\u02c7\u02b7\3\2\2\2\u02c7\u02bb\3\2\2\2\u02c8U",
    "\3\2\2\2\u02c9\u02cb\7\36\2\2\u02ca\u02c9\3\2\2\2\u02ca\u02cb\3\2\2",
    "\2\u02cb\u02cc\3\2\2\2\u02cc\u02cd\7\f\2\2\u02cd\u02ce\5p9\2\u02ce\u02cf",
    "\7\r\2\2\u02cfW\3\2\2\2\u02d0\u02d1\7\36\2\2\u02d1\u02d2\5t;\2\u02d2",
    "Y\3\2\2\2\u02d3\u02d4\7\36\2\2\u02d4\u02d5\7&\2\2\u02d5\u02d6\7\t\2",
    "\2\u02d6\u02d7\5t;\2\u02d7[\3\2\2\2\u02d8\u02e2\7\'\2\2\u02d9\u02e3",
    "\7\20\2\2\u02da\u02df\5l\67\2\u02db\u02dc\7\16\2\2\u02dc\u02de\5l\67",
    "\2\u02dd\u02db\3\2\2\2\u02de\u02e1\3\2\2\2\u02df\u02dd\3\2\2\2\u02df",
    "\u02e0\3\2\2\2\u02e0\u02e3\3\2\2\2\u02e1\u02df\3\2\2\2\u02e2\u02d9\3",
    "\2\2\2\u02e2\u02da\3\2\2\2\u02e3\u02e5\3\2\2\2\u02e4\u02e6\5^\60\2\u02e5",
    "\u02e4\3\2\2\2\u02e5\u02e6\3\2\2\2\u02e6\u02e8\3\2\2\2\u02e7\u02e9\5",
    "`\61\2\u02e8\u02e7\3\2\2\2\u02e8\u02e9\3\2\2\2\u02e9]\3\2\2\2\u02ea",
    "\u02eb\7(\2\2\u02eb\u02ed\7)\2\2\u02ec\u02ee\5|?\2\u02ed\u02ec\3\2\2",
    "\2\u02ee\u02ef\3\2\2\2\u02ef\u02ed\3\2\2\2\u02ef\u02f0\3\2\2\2\u02f0",
    "_\3\2\2\2\u02f1\u02f2\7*\2\2\u02f2\u02f3\5p9\2\u02f3a\3\2\2\2\u02f4",
    "\u02f6\7+\2\2\u02f5\u02f7\5d\63\2\u02f6\u02f5\3\2\2\2\u02f6\u02f7\3",
    "\2\2\2\u02f7\u02f8\3\2\2\2\u02f8\u02f9\7\60\2\2\u02f9\u0311\5\u0090",
    "I\2\u02fa\u02fb\7,\2\2\u02fb\u02fe\5\u0090I\2\u02fc\u02fd\7\65\2\2\u02fd",
    "\u02ff\5d\63\2\u02fe\u02fc\3\2\2\2\u02fe\u02ff\3\2\2\2\u02ff\u0300\3",
    "\2\2\2\u0300\u0301\7<\2\2\u0301\u0302\5p9\2\u0302\u0311\3\2\2\2\u0303",
    "\u0304\7-\2\2\u0304\u0307\5\u0090I\2\u0305\u0306\7\65\2\2\u0306\u0308",
    "\5d\63\2\u0307\u0305\3\2\2\2\u0307\u0308\3\2\2\2\u0308\u0309\3\2\2\2",
    "\u0309\u030a\7<\2\2\u030a\u030b\5p9\2\u030b\u0311\3\2\2\2\u030c\u030e",
    "\7.\2\2\u030d\u030f\5d\63\2\u030e\u030d\3\2\2\2\u030e\u030f\3\2\2\2",
    "\u030f\u0311\3\2\2\2\u0310\u02f4\3\2\2\2\u0310\u02fa\3\2\2\2\u0310\u0303",
    "\3\2\2\2\u0310\u030c\3\2\2\2\u0311c\3\2\2\2\u0312\u0313\7F\2\2\u0313",
    "\u0321\7/\2\2\u0314\u0315\7F\2\2\u0315\u0316\7\66\2\2\u0316\u0321\7",
    "/\2\2\u0317\u0318\7\62\2\2\u0318\u0321\7/\2\2\u0319\u031a\7\62\2\2\u031a",
    "\u031b\7\66\2\2\u031b\u0321\7/\2\2\u031c\u031e\7\63\2\2\u031d\u031c",
    "\3\2\2\2\u031d\u031e\3\2\2\2\u031e\u031f\3\2\2\2\u031f\u0321\7/\2\2",
    "\u0320\u0312\3\2\2\2\u0320\u0314\3\2\2\2\u0320\u0317\3\2\2\2\u0320\u0319",
    "\3\2\2\2\u0320\u031d\3\2\2\2\u0321e\3\2\2\2\u0322\u0324\7\61\2\2\u0323",
    "\u0325\5h\65\2\u0324\u0323\3\2\2\2\u0324\u0325\3\2\2\2\u0325\u0326\3",
    "\2\2\2\u0326\u032a\7D\2\2\u0327\u032b\5\u00a2R\2\u0328\u0329\7\3\2\2",
    "\u0329\u032b\7/\2\2\u032a\u0327\3\2\2\2\u032a\u0328\3\2\2\2\u032b\u0331",
    "\3\2\2\2\u032c\u032d\7\61\2\2\u032d\u032e\7\64\2\2\u032e\u032f\7D\2",
    "\2\u032f\u0331\5\u00a2R\2\u0330\u0322\3\2\2\2\u0330\u032c\3\2\2\2\u0331",
    "g\3\2\2\2\u0332\u0333\t\2\2\2\u0333i\3\2\2\2\u0334\u0335\7?\2\2\u0335",
    "\u0336\5\u00a2R\2\u0336k\3\2\2\2\u0337\u0338\5n8\2\u0338\u0339\78\2",
    "\2\u0339\u033a\5\u008aF\2\u033a\u033d\3\2\2\2\u033b\u033d\5|?\2\u033c",
    "\u0337\3\2\2\2\u033c\u033b\3\2\2\2\u033dm\3\2\2\2\u033e\u033f\5r:\2",
    "\u033fo\3\2\2\2\u0340\u0341\5r:\2\u0341q\3\2\2\2\u0342\u0343\b:\1\2",
    "\u0343\u0344\7>\2\2\u0344\u034e\5r:\16\u0345\u0346\7\n\2\2\u0346\u0347",
    "\5r:\2\u0347\u0348\7\13\2\2\u0348\u034e\3\2\2\2\u0349\u034e\5t;\2\u034a",
    "\u034e\5x=\2\u034b\u034e\5\u009cO\2\u034c\u034e\5|?\2\u034d\u0342\3",
    "\2\2\2\u034d\u0345\3\2\2\2\u034d\u0349\3\2\2\2\u034d\u034a\3\2\2\2\u034d",
    "\u034b\3\2\2\2\u034d\u034c\3\2\2\2\u034e\u0375\3\2\2\2\u034f\u0353\f",
    "\r\2\2\u0350\u0354\7\20\2\2\u0351\u0354\7\24\2\2\u0352\u0354\7\25\2",
    "\2\u0353\u0350\3\2\2\2\u0353\u0351\3\2\2\2\u0353\u0352\3\2\2\2\u0354",
    "\u0355\3\2\2\2\u0355\u0374\5r:\16\u0356\u0359\f\f\2\2\u0357\u035a\7",
    "\21\2\2\u0358\u035a\7\23\2\2\u0359\u0357\3\2\2\2\u0359\u0358\3\2\2\2",
    "\u035a\u035b\3\2\2\2\u035b\u0374\5r:\r\u035c\u0361\f\13\2\2\u035d\u0362",
    "\7\31\2\2\u035e\u0362\7\27\2\2\u035f\u0362\7\30\2\2\u0360\u0362\7\26",
    "\2\2\u0361\u035d\3\2\2\2\u0361\u035e\3\2\2\2\u0361\u035f\3\2\2\2\u0361",
    "\u0360\3\2\2\2\u0362\u0363\3\2\2\2\u0363\u0374\5r:\f\u0364\u0367\f\n",
    "\2\2\u0365\u0368\7\32\2\2\u0366\u0368\7\33\2\2\u0367\u0365\3\2\2\2\u0367",
    "\u0366\3\2\2\2\u0368\u0369\3\2\2\2\u0369\u0374\5r:\13\u036a\u036b\f",
    "\b\2\2\u036b\u036c\7:\2\2\u036c\u0374\5r:\t\u036d\u036e\f\7\2\2\u036e",
    "\u036f\79\2\2\u036f\u0374\5r:\b\u0370\u0371\f\t\2\2\u0371\u0372\7;\2",
    "\2\u0372\u0374\5\u0094K\2\u0373\u034f\3\2\2\2\u0373\u0356\3\2\2\2\u0373",
    "\u035c\3\2\2\2\u0373\u0364\3\2\2\2\u0373\u036a\3\2\2\2\u0373\u036d\3",
    "\2\2\2\u0373\u0370\3\2\2\2\u0374\u0377\3\2\2\2\u0375\u0373\3\2\2\2\u0375",
    "\u0376\3\2\2\2\u0376s\3\2\2\2\u0377\u0375\3\2\2\2\u0378\u0379\5\u0082",
    "B\2\u0379\u037a\7\7\2\2\u037a\u037c\3\2\2\2\u037b\u0378\3\2\2\2\u037b",
    "\u037c\3\2\2\2\u037c\u037d\3\2\2\2\u037d\u037e\5\u0080A\2\u037e\u0380",
    "\7\n\2\2\u037f\u0381\5v<\2\u0380\u037f\3\2\2\2\u0380\u0381\3\2\2\2\u0381",
    "\u0382\3\2\2\2\u0382\u0383\7\13\2\2\u0383u\3\2\2\2\u0384\u0389\5n8\2",
    "\u0385\u0386\7\16\2\2\u0386\u0388\5n8\2\u0387\u0385\3\2\2\2\u0388\u038b",
    "\3\2\2\2\u0389\u0387\3\2\2\2\u0389\u038a\3\2\2\2\u038aw\3\2\2\2\u038b",
    "\u0389\3\2\2\2\u038c\u038f\5z>\2\u038d\u038f\5|?\2\u038e\u038c\3\2\2",
    "\2\u038e\u038d\3\2\2\2\u038f\u0390\3\2\2\2\u0390\u0391\7=\2\2\u0391",
    "\u0392\7C\2\2\u0392y\3\2\2\2\u0393\u0395\7\36\2\2\u0394\u0393\3\2\2",
    "\2\u0394\u0395\3\2\2\2\u0395\u0396\3\2\2\2\u0396\u039b\5\u0094K\2\u0397",
    "\u0398\7\f\2\2\u0398\u0399\5~@\2\u0399\u039a\7\r\2\2\u039a\u039c\3\2",
    "\2\2\u039b\u0397\3\2\2\2\u039b\u039c\3\2\2\2\u039c{\3\2\2\2\u039d\u039f",
    "\7\36\2\2\u039e\u039d\3\2\2\2\u039e\u039f\3\2\2\2\u039f\u03a0\3\2\2",
    "\2\u03a0\u03a5\5\u0094K\2\u03a1\u03a2\7\f\2\2\u03a2\u03a3\5~@\2\u03a3",
    "\u03a4\7\r\2\2\u03a4\u03a6\3\2\2\2\u03a5\u03a1\3\2\2\2\u03a5\u03a6\3",
    "\2\2\2\u03a6\u03af\3\2\2\2\u03a7\u03a8\7\36\2\2\u03a8\u03ad\5\u0094",
    "K\2\u03a9\u03aa\7\f\2\2\u03aa\u03ab\5~@\2\u03ab\u03ac\7\r\2\2\u03ac",
    "\u03ae\3\2\2\2\u03ad\u03a9\3\2\2\2\u03ad\u03ae\3\2\2\2\u03ae\u03b0\3",
    "\2\2\2\u03af\u03a7\3\2\2\2\u03af\u03b0\3\2\2\2\u03b0\u03b1\3\2\2\2\u03b1",
    "\u03b2\7\t\2\2\u03b2\u03b3\5\u008aF\2\u03b3\u03b6\3\2\2\2\u03b4\u03b6",
    "\5\u008aF\2\u03b5\u039e\3\2\2\2\u03b5\u03b4\3\2\2\2\u03b6}\3\2\2\2\u03b7",
    "\u03be\7\3\2\2\u03b8\u03bb\7E\2\2\u03b9\u03ba\7\23\2\2\u03ba\u03bc\7",
    "\3\2\2\u03bb\u03b9\3\2\2\2\u03bb\u03bc\3\2\2\2\u03bc\u03be\3\2\2\2\u03bd",
    "\u03b7\3\2\2\2\u03bd\u03b8\3\2\2\2\u03be\177\3\2\2\2\u03bf\u03c0\5\u0094",
    "K\2\u03c0\u0081\3\2\2\2\u03c1\u03c2\5\u0094K\2\u03c2\u0083\3\2\2\2\u03c3",
    "\u03c4\5\u0094K\2\u03c4\u0085\3\2\2\2\u03c5\u03c6\5\u0094K\2\u03c6\u0087",
    "\3\2\2\2\u03c7\u03cc\5\u0094K\2\u03c8\u03c9\7\t\2\2\u03c9\u03cb\5\u0094",
    "K\2\u03ca\u03c8\3\2\2\2\u03cb\u03ce\3\2\2\2\u03cc\u03ca\3\2\2\2\u03cc",
    "\u03cd\3\2\2\2\u03cd\u0089\3\2\2\2\u03ce\u03cc\3\2\2\2\u03cf\u03d0\5",
    "\u0094K\2\u03d0\u008b\3\2\2\2\u03d1\u03d2\5\u00be`\2\u03d2\u008d\3\2",
    "\2\2\u03d3\u03d5\7\36\2\2\u03d4\u03d3\3\2\2\2\u03d4\u03d5\3\2\2\2\u03d5",
    "\u03d6\3\2\2\2\u03d6\u03d7\5\u0084C\2\u03d7\u008f\3\2\2\2\u03d8\u03d9",
    "\5\u008eH\2\u03d9\u0091\3\2\2\2\u03da\u03db\5\u0094K\2\u03db\u0093\3",
    "\2\2\2\u03dc\u03df\5\u009eP\2\u03dd\u03df\5\u00a0Q\2\u03de\u03dc\3\2",
    "\2\2\u03de\u03dd\3\2\2\2\u03df\u0095\3\2\2\2\u03e0\u03e1\7\3\2\2\u03e1",
    "\u03e2\7\7\2\2\u03e2\u03e9\7\3\2\2\u03e3\u03e4\7\3\2\2\u03e4\u03e9\7",
    "\7\2\2\u03e5\u03e6\7\7\2\2\u03e6\u03e9\7\3\2\2\u03e7\u03e9\7\3\2\2\u03e8",
    "\u03e0\3\2\2\2\u03e8\u03e3\3\2\2\2\u03e8\u03e5\3\2\2\2\u03e8\u03e7\3",
    "\2\2\2\u03e9\u0097\3\2\2\2\u03ea\u03eb\t\3\2\2\u03eb\u0099\3\2\2\2\u03ec",
    "\u03ed\7L\2\2\u03ed\u03ee\7J\2\2\u03ee\u03fc\7H\2\2\u03ef\u03f0\7K\2",
    "\2\u03f0\u03f1\7J\2\2\u03f1\u03fc\7H\2\2\u03f2\u03f3\7M\2\2\u03f3\u03f4",
    "\7J\2\2\u03f4\u03fc\7H\2\2\u03f5\u03f6\7J\2\2\u03f6\u03fc\7H\2\2\u03f7",
    "\u03f9\7I\2\2\u03f8\u03f7\3\2\2\2\u03f8\u03f9\3\2\2\2\u03f9\u03fa\3",
    "\2\2\2\u03fa\u03fc\7H\2\2\u03fb\u03ec\3\2\2\2\u03fb\u03ef\3\2\2\2\u03fb",
    "\u03f2\3\2\2\2\u03fb\u03f5\3\2\2\2\u03fb\u03f8\3\2\2\2\u03fc\u009b\3",
    "\2\2\2\u03fd\u0405\5\u00bc_\2\u03fe\u0405\5\u00b4[\2\u03ff\u0405\5\u00b8",
    "]\2\u0400\u0405\5\u00b6\\\2\u0401\u0405\5\u00ba^\2\u0402\u0405\5\u00a2",
    "R\2\u0403\u0405\5\u00be`\2\u0404\u03fd\3\2\2\2\u0404\u03fe\3\2\2\2\u0404",
    "\u03ff\3\2\2\2\u0404\u0400\3\2\2\2\u0404\u0401\3\2\2\2\u0404\u0402\3",
    "\2\2\2\u0404\u0403\3\2\2\2\u0405\u009d\3\2\2\2\u0406\u0407\t\4\2\2\u0407",
    "\u009f\3\2\2\2\u0408\u0409\t\5\2\2\u0409\u00a1\3\2\2\2\u040a\u040c\5",
    "\u00a4S\2\u040b\u040d\5\u00a6T\2\u040c\u040b\3\2\2\2\u040c\u040d\3\2",
    "\2\2\u040d\u040f\3\2\2\2\u040e\u0410\5\u00a8U\2\u040f\u040e\3\2\2\2",
    "\u040f\u0410\3\2\2\2\u0410\u0412\3\2\2\2\u0411\u0413\5\u00aaV\2\u0412",
    "\u0411\3\2\2\2\u0412\u0413\3\2\2\2\u0413\u0415\3\2\2\2\u0414\u0416\5",
    "\u00acW\2\u0415\u0414\3\2\2\2\u0415\u0416\3\2\2\2\u0416\u0418\3\2\2",
    "\2\u0417\u0419\5\u00aeX\2\u0418\u0417\3\2\2\2\u0418\u0419\3\2\2\2\u0419",
    "\u041b\3\2\2\2\u041a\u041c\5\u00b0Y\2\u041b\u041a\3\2\2\2\u041b\u041c",
    "\3\2\2\2\u041c\u041e\3\2\2\2\u041d\u041f\5\u00b2Z\2\u041e\u041d\3\2",
    "\2\2\u041e\u041f\3\2\2\2\u041f\u0467\3\2\2\2\u0420\u0422\5\u00a6T\2",
    "\u0421\u0423\5\u00a8U\2\u0422\u0421\3\2\2\2\u0422\u0423\3\2\2\2\u0423",
    "\u0425\3\2\2\2\u0424\u0426\5\u00aaV\2\u0425\u0424\3\2\2\2\u0425\u0426",
    "\3\2\2\2\u0426\u0428\3\2\2\2\u0427\u0429\5\u00acW\2\u0428\u0427\3\2",
    "\2\2\u0428\u0429\3\2\2\2\u0429\u042b\3\2\2\2\u042a\u042c\5\u00aeX\2",
    "\u042b\u042a\3\2\2\2\u042b\u042c\3\2\2\2\u042c\u042e\3\2\2\2\u042d\u042f",
    "\5\u00b0Y\2\u042e\u042d\3\2\2\2\u042e\u042f\3\2\2\2\u042f\u0431\3\2",
    "\2\2\u0430\u0432\5\u00b2Z\2\u0431\u0430\3\2\2\2\u0431\u0432\3\2\2\2",
    "\u0432\u0467\3\2\2\2\u0433\u0435\5\u00a8U\2\u0434\u0436\5\u00aaV\2\u0435",
    "\u0434\3\2\2\2\u0435\u0436\3\2\2\2\u0436\u0438\3\2\2\2\u0437\u0439\5",
    "\u00acW\2\u0438\u0437\3\2\2\2\u0438\u0439\3\2\2\2\u0439\u043b\3\2\2",
    "\2\u043a\u043c\5\u00aeX\2\u043b\u043a\3\2\2\2\u043b\u043c\3\2\2\2\u043c",
    "\u043e\3\2\2\2\u043d\u043f\5\u00b0Y\2\u043e\u043d\3\2\2\2\u043e\u043f",
    "\3\2\2\2\u043f\u0441\3\2\2\2\u0440\u0442\5\u00b2Z\2\u0441\u0440\3\2",
    "\2\2\u0441\u0442\3\2\2\2\u0442\u0467\3\2\2\2\u0443\u0445\5\u00aaV\2",
    "\u0444\u0446\5\u00acW\2\u0445\u0444\3\2\2\2\u0445\u0446\3\2\2\2\u0446",
    "\u0448\3\2\2\2\u0447\u0449\5\u00aeX\2\u0448\u0447\3\2\2\2\u0448\u0449",
    "\3\2\2\2\u0449\u044b\3\2\2\2\u044a\u044c\5\u00b0Y\2\u044b\u044a\3\2",
    "\2\2\u044b\u044c\3\2\2\2\u044c\u044e\3\2\2\2\u044d\u044f\5\u00b2Z\2",
    "\u044e\u044d\3\2\2\2\u044e\u044f\3\2\2\2\u044f\u0467\3\2\2\2\u0450\u0452",
    "\5\u00acW\2\u0451\u0453\5\u00aeX\2\u0452\u0451\3\2\2\2\u0452\u0453\3",
    "\2\2\2\u0453\u0455\3\2\2\2\u0454\u0456\5\u00b0Y\2\u0455\u0454\3\2\2",
    "\2\u0455\u0456\3\2\2\2\u0456\u0458\3\2\2\2\u0457\u0459\5\u00b2Z\2\u0458",
    "\u0457\3\2\2\2\u0458\u0459\3\2\2\2\u0459\u0467\3\2\2\2\u045a\u045c\5",
    "\u00aeX\2\u045b\u045d\5\u00b0Y\2\u045c\u045b\3\2\2\2\u045c\u045d\3\2",
    "\2\2\u045d\u045f\3\2\2\2\u045e\u0460\5\u00b2Z\2\u045f\u045e\3\2\2\2",
    "\u045f\u0460\3\2\2\2\u0460\u0467\3\2\2\2\u0461\u0463\5\u00b0Y\2\u0462",
    "\u0464\5\u00b2Z\2\u0463\u0462\3\2\2\2\u0463\u0464\3\2\2\2\u0464\u0467",
    "\3\2\2\2\u0465\u0467\5\u00b2Z\2\u0466\u040a\3\2\2\2\u0466\u0420\3\2",
    "\2\2\u0466\u0433\3\2\2\2\u0466\u0443\3\2\2\2\u0466\u0450\3\2\2\2\u0466",
    "\u045a\3\2\2\2\u0466\u0461\3\2\2\2\u0466\u0465\3\2\2\2\u0467\u00a3\3",
    "\2\2\2\u0468\u0469\7\3\2\2\u0469\u046a\7O\2\2\u046a\u00a5\3\2\2\2\u046b",
    "\u046c\7\3\2\2\u046c\u046d\7P\2\2\u046d\u00a7\3\2\2\2\u046e\u046f\7",
    "\3\2\2\u046f\u0470\7Q\2\2\u0470\u00a9\3\2\2\2\u0471\u0472\7\3\2\2\u0472",
    "\u0473\7R\2\2\u0473\u00ab\3\2\2\2\u0474\u0475\7\3\2\2\u0475\u0476\7",
    "S\2\2\u0476\u00ad\3\2\2\2\u0477\u0478\7\3\2\2\u0478\u0479\7T\2\2\u0479",
    "\u00af\3\2\2\2\u047a\u047b\7\3\2\2\u047b\u047c\7U\2\2\u047c\u00b1\3",
    "\2\2\2\u047d\u047e\7\3\2\2\u047e\u047f\7V\2\2\u047f\u00b3\3\2\2\2\u0480",
    "\u0482\t\6\2\2\u0481\u0480\3\2\2\2\u0481\u0482\3\2\2\2\u0482\u0483\3",
    "\2\2\2\u0483\u0484\7\6\2\2\u0484\u00b5\3\2\2\2\u0485\u0487\t\6\2\2\u0486",
    "\u0485\3\2\2\2\u0486\u0487\3\2\2\2\u0487\u0488\3\2\2\2\u0488\u0489\7",
    "\4\2\2\u0489\u00b7\3\2\2\2\u048a\u048c\t\6\2\2\u048b\u048a\3\2\2\2\u048b",
    "\u048c\3\2\2\2\u048c\u048d\3\2\2\2\u048d\u048e\7\5\2\2\u048e\u00b9\3",
    "\2\2\2\u048f\u0491\t\6\2\2\u0490\u048f\3\2\2\2\u0490\u0491\3\2\2\2\u0491",
    "\u0492\3\2\2\2\u0492\u0493\7\3\2\2\u0493\u00bb\3\2\2\2\u0494\u0495\t",
    "\7\2\2\u0495\u00bd\3\2\2\2\u0496\u0497\7b\2\2\u0497\u00bf\3\2\2\2\u00a4",
    "\u00c7\u00c9\u00d0\u00d7\u00db\u00df\u00e4\u00e9\u00ed\u00f1\u00f8\u00ff",
    "\u0103\u0109\u010d\u0111\u0113\u0117\u011b\u0122\u0131\u0138\u013f\u014e",
    "\u0155\u0171\u0176\u0182\u0187\u018c\u0193\u019e\u01a5\u01aa\u01ae\u01b2",
    "\u01b8\u01c4\u01cb\u01d4\u01db\u01e1\u01e4\u01ed\u01f1\u01f4\u01f7\u01ff",
    "\u0202\u0209\u020c\u0214\u0217\u0219\u021d\u0220\u0224\u022d\u0234\u023a",
    "\u023c\u0243\u024b\u024f\u0251\u0258\u025e\u0264\u026e\u0278\u027e\u0283",
    "\u0287\u028a\u028e\u0298\u029c\u029e\u02a5\u02ab\u02b5\u02be\u02c1\u02c5",
    "\u02c7\u02ca\u02df\u02e2\u02e5\u02e8\u02ef\u02f6\u02fe\u0307\u030e\u0310",
    "\u031d\u0320\u0324\u032a\u0330\u033c\u034d\u0353\u0359\u0361\u0367\u0373",
    "\u0375\u037b\u0380\u0389\u038e\u0394\u039b\u039e\u03a5\u03ad\u03af\u03b5",
    "\u03bb\u03bd\u03cc\u03d4\u03de\u03e8\u03f8\u03fb\u0404\u040c\u040f\u0412",
    "\u0415\u0418\u041b\u041e\u0422\u0425\u0428\u042b\u042e\u0431\u0435\u0438",
    "\u043b\u043e\u0441\u0445\u0448\u044b\u044e\u0452\u0455\u0458\u045c\u045f",
    "\u0463\u0466\u0481\u0486\u048b\u0490"].join("");
		

var atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

var decisionsToDFA = atn.decisionToState.map( function(ds, index) { return new antlr4.dfa.DFA(ds, index); });

var sharedContextCache = new antlr4.PredictionContextCache();

var literalNames = [ 'null', 'null', 'null', 'null', 'null', "':'", "';'", 
                     "'.'", "'('", "')'", "'['", "']'", "','", "'='", "'*'", 
                     "'+'", "'?'", "'-'", "'/'", "'%'", "'<'", "'<='", "'>'", 
                     "'>='", "'=='", "'!='", "'@'", "'->'", "'#'" ];

var symbolicNames = [ 'null', "INT_LITERAL", "LONG_LITERAL", "FLOAT_LITERAL", 
                      "DOUBLE_LITERAL", "COL", "SCOL", "DOT", "OPEN_PAR", 
                      "CLOSE_PAR", "OPEN_SQARE_BRACKETS", "CLOASE_SQARE_BRACKETS", 
                      "COMMA", "ASSIGN", "STAR", "PLUS", "QUESTION", "MINUS", 
                      "DIV", "MOD", "LT", "LT_EQ", "GT", "GT_EQ", "EQ", 
                      "NOT_EQ", "AT", "FOLLOWED_BY", "HASH", "STREAM", "DEFINE", 
                      "FUNCTION", "TABLE", "PLAN", "FROM", "PARTITION", 
                      "WINDOW", "SELECT", "GROUP", "BY", "HAVING", "INSERT", 
                      "DELETE", "UPDATE", "RETURN", "EVENTS", "INTO", "OUTPUT", 
                      "EXPIRED", "CURRENT", "SNAPSHOT", "FOR", "RAW", "OF", 
                      "AS", "OR", "AND", "IN", "ON", "IS", "NOT", "WITHIN", 
                      "WITH", "BEGIN", "END", "NULL", "EVERY", "LAST", "ALL", 
                      "FIRST", "JOIN", "INNER", "OUTER", "RIGHT", "LEFT", 
                      "FULL", "UNIDIRECTIONAL", "YEARS", "MONTHS", "WEEKS", 
                      "DAYS", "HOURS", "MINUTES", "SECONDS", "MILLISECONDS", 
                      "FALSE", "TRUE", "STRING", "INT", "LONG", "FLOAT", 
                      "DOUBLE", "BOOL", "OBJECT", "ID_QUOTES", "ID", "STRING_LITERAL", 
                      "SINGLE_LINE_COMMENT", "MULTILINE_COMMENT", "SPACES", 
                      "UNEXPECTED_CHAR", "SCRIPT" ];

var ruleNames =  [ "parse", "error", "execution_plan", "execution_element", 
                   "definition_stream_final", "definition_stream", "definition_table_final", 
                   "definition_table", "definition_function_final", "definition_function", 
                   "function_name", "language_name", "function_body", "annotation", 
                   "plan_annotation", "annotation_element", "partition", 
                   "partition_final", "partition_with_stream", "condition_ranges", 
                   "condition_range", "query_final", "query", "query_input", 
                   "standard_stream", "join_stream", "join_source", "pattern_stream", 
                   "every_pattern_source_chain", "pattern_source_chain", 
                   "pattern_source", "logical_stateful_source", "pattern_collection_stateful_source", 
                   "standard_stateful_source", "basic_source", "basic_source_stream_handlers", 
                   "basic_source_stream_handler", "sequence_stream", "sequence_source_chain", 
                   "sequence_source", "sequence_collection_stateful_source", 
                   "anonymous_stream", "filter", "stream_function", "window", 
                   "query_section", "group_by", "having", "query_output", 
                   "output_event_type", "output_rate", "output_rate_type", 
                   "within_time", "output_attribute", "attribute", "expression", 
                   "math_operation", "function_operation", "attribute_list", 
                   "null_check", "stream_reference", "attribute_reference", 
                   "attribute_index", "function_id", "function_namespace", 
                   "stream_id", "stream_alias", "property_name", "attribute_name", 
                   "property_value", "source", "target", "event", "name", 
                   "collect", "attribute_type", "join", "constant_value", 
                   "id", "keyword", "time_value", "year_value", "month_value", 
                   "week_value", "day_value", "hour_value", "minute_value", 
                   "second_value", "millisecond_value", "signed_double_value", 
                   "signed_long_value", "signed_float_value", "signed_int_value", 
                   "bool_value", "string_value" ];

function SiddhiQLParser (input) {
	antlr4.Parser.call(this, input);
    this._interp = new antlr4.atn.ParserATNSimulator(this, atn, decisionsToDFA, sharedContextCache);
    this.ruleNames = ruleNames;
    this.literalNames = literalNames;
    this.symbolicNames = symbolicNames;
    return this;
}

SiddhiQLParser.prototype = Object.create(antlr4.Parser.prototype);
SiddhiQLParser.prototype.constructor = SiddhiQLParser;

Object.defineProperty(SiddhiQLParser.prototype, "atn", {
	get : function() {
		return atn;
	}
});

SiddhiQLParser.EOF = antlr4.Token.EOF;
SiddhiQLParser.INT_LITERAL = 1;
SiddhiQLParser.LONG_LITERAL = 2;
SiddhiQLParser.FLOAT_LITERAL = 3;
SiddhiQLParser.DOUBLE_LITERAL = 4;
SiddhiQLParser.COL = 5;
SiddhiQLParser.SCOL = 6;
SiddhiQLParser.DOT = 7;
SiddhiQLParser.OPEN_PAR = 8;
SiddhiQLParser.CLOSE_PAR = 9;
SiddhiQLParser.OPEN_SQARE_BRACKETS = 10;
SiddhiQLParser.CLOASE_SQARE_BRACKETS = 11;
SiddhiQLParser.COMMA = 12;
SiddhiQLParser.ASSIGN = 13;
SiddhiQLParser.STAR = 14;
SiddhiQLParser.PLUS = 15;
SiddhiQLParser.QUESTION = 16;
SiddhiQLParser.MINUS = 17;
SiddhiQLParser.DIV = 18;
SiddhiQLParser.MOD = 19;
SiddhiQLParser.LT = 20;
SiddhiQLParser.LT_EQ = 21;
SiddhiQLParser.GT = 22;
SiddhiQLParser.GT_EQ = 23;
SiddhiQLParser.EQ = 24;
SiddhiQLParser.NOT_EQ = 25;
SiddhiQLParser.AT = 26;
SiddhiQLParser.FOLLOWED_BY = 27;
SiddhiQLParser.HASH = 28;
SiddhiQLParser.STREAM = 29;
SiddhiQLParser.DEFINE = 30;
SiddhiQLParser.FUNCTION = 31;
SiddhiQLParser.TABLE = 32;
SiddhiQLParser.PLAN = 33;
SiddhiQLParser.FROM = 34;
SiddhiQLParser.PARTITION = 35;
SiddhiQLParser.WINDOW = 36;
SiddhiQLParser.SELECT = 37;
SiddhiQLParser.GROUP = 38;
SiddhiQLParser.BY = 39;
SiddhiQLParser.HAVING = 40;
SiddhiQLParser.INSERT = 41;
SiddhiQLParser.DELETE = 42;
SiddhiQLParser.UPDATE = 43;
SiddhiQLParser.RETURN = 44;
SiddhiQLParser.EVENTS = 45;
SiddhiQLParser.INTO = 46;
SiddhiQLParser.OUTPUT = 47;
SiddhiQLParser.EXPIRED = 48;
SiddhiQLParser.CURRENT = 49;
SiddhiQLParser.SNAPSHOT = 50;
SiddhiQLParser.FOR = 51;
SiddhiQLParser.RAW = 52;
SiddhiQLParser.OF = 53;
SiddhiQLParser.AS = 54;
SiddhiQLParser.OR = 55;
SiddhiQLParser.AND = 56;
SiddhiQLParser.IN = 57;
SiddhiQLParser.ON = 58;
SiddhiQLParser.IS = 59;
SiddhiQLParser.NOT = 60;
SiddhiQLParser.WITHIN = 61;
SiddhiQLParser.WITH = 62;
SiddhiQLParser.BEGIN = 63;
SiddhiQLParser.END = 64;
SiddhiQLParser.NULL = 65;
SiddhiQLParser.EVERY = 66;
SiddhiQLParser.LAST = 67;
SiddhiQLParser.ALL = 68;
SiddhiQLParser.FIRST = 69;
SiddhiQLParser.JOIN = 70;
SiddhiQLParser.INNER = 71;
SiddhiQLParser.OUTER = 72;
SiddhiQLParser.RIGHT = 73;
SiddhiQLParser.LEFT = 74;
SiddhiQLParser.FULL = 75;
SiddhiQLParser.UNIDIRECTIONAL = 76;
SiddhiQLParser.YEARS = 77;
SiddhiQLParser.MONTHS = 78;
SiddhiQLParser.WEEKS = 79;
SiddhiQLParser.DAYS = 80;
SiddhiQLParser.HOURS = 81;
SiddhiQLParser.MINUTES = 82;
SiddhiQLParser.SECONDS = 83;
SiddhiQLParser.MILLISECONDS = 84;
SiddhiQLParser.FALSE = 85;
SiddhiQLParser.TRUE = 86;
SiddhiQLParser.STRING = 87;
SiddhiQLParser.INT = 88;
SiddhiQLParser.LONG = 89;
SiddhiQLParser.FLOAT = 90;
SiddhiQLParser.DOUBLE = 91;
SiddhiQLParser.BOOL = 92;
SiddhiQLParser.OBJECT = 93;
SiddhiQLParser.ID_QUOTES = 94;
SiddhiQLParser.ID = 95;
SiddhiQLParser.STRING_LITERAL = 96;
SiddhiQLParser.SINGLE_LINE_COMMENT = 97;
SiddhiQLParser.MULTILINE_COMMENT = 98;
SiddhiQLParser.SPACES = 99;
SiddhiQLParser.UNEXPECTED_CHAR = 100;
SiddhiQLParser.SCRIPT = 101;

SiddhiQLParser.RULE_parse = 0;
SiddhiQLParser.RULE_error = 1;
SiddhiQLParser.RULE_execution_plan = 2;
SiddhiQLParser.RULE_execution_element = 3;
SiddhiQLParser.RULE_definition_stream_final = 4;
SiddhiQLParser.RULE_definition_stream = 5;
SiddhiQLParser.RULE_definition_table_final = 6;
SiddhiQLParser.RULE_definition_table = 7;
SiddhiQLParser.RULE_definition_function_final = 8;
SiddhiQLParser.RULE_definition_function = 9;
SiddhiQLParser.RULE_function_name = 10;
SiddhiQLParser.RULE_language_name = 11;
SiddhiQLParser.RULE_function_body = 12;
SiddhiQLParser.RULE_annotation = 13;
SiddhiQLParser.RULE_plan_annotation = 14;
SiddhiQLParser.RULE_annotation_element = 15;
SiddhiQLParser.RULE_partition = 16;
SiddhiQLParser.RULE_partition_final = 17;
SiddhiQLParser.RULE_partition_with_stream = 18;
SiddhiQLParser.RULE_condition_ranges = 19;
SiddhiQLParser.RULE_condition_range = 20;
SiddhiQLParser.RULE_query_final = 21;
SiddhiQLParser.RULE_query = 22;
SiddhiQLParser.RULE_query_input = 23;
SiddhiQLParser.RULE_standard_stream = 24;
SiddhiQLParser.RULE_join_stream = 25;
SiddhiQLParser.RULE_join_source = 26;
SiddhiQLParser.RULE_pattern_stream = 27;
SiddhiQLParser.RULE_every_pattern_source_chain = 28;
SiddhiQLParser.RULE_pattern_source_chain = 29;
SiddhiQLParser.RULE_pattern_source = 30;
SiddhiQLParser.RULE_logical_stateful_source = 31;
SiddhiQLParser.RULE_pattern_collection_stateful_source = 32;
SiddhiQLParser.RULE_standard_stateful_source = 33;
SiddhiQLParser.RULE_basic_source = 34;
SiddhiQLParser.RULE_basic_source_stream_handlers = 35;
SiddhiQLParser.RULE_basic_source_stream_handler = 36;
SiddhiQLParser.RULE_sequence_stream = 37;
SiddhiQLParser.RULE_sequence_source_chain = 38;
SiddhiQLParser.RULE_sequence_source = 39;
SiddhiQLParser.RULE_sequence_collection_stateful_source = 40;
SiddhiQLParser.RULE_anonymous_stream = 41;
SiddhiQLParser.RULE_filter = 42;
SiddhiQLParser.RULE_stream_function = 43;
SiddhiQLParser.RULE_window = 44;
SiddhiQLParser.RULE_query_section = 45;
SiddhiQLParser.RULE_group_by = 46;
SiddhiQLParser.RULE_having = 47;
SiddhiQLParser.RULE_query_output = 48;
SiddhiQLParser.RULE_output_event_type = 49;
SiddhiQLParser.RULE_output_rate = 50;
SiddhiQLParser.RULE_output_rate_type = 51;
SiddhiQLParser.RULE_within_time = 52;
SiddhiQLParser.RULE_output_attribute = 53;
SiddhiQLParser.RULE_attribute = 54;
SiddhiQLParser.RULE_expression = 55;
SiddhiQLParser.RULE_math_operation = 56;
SiddhiQLParser.RULE_function_operation = 57;
SiddhiQLParser.RULE_attribute_list = 58;
SiddhiQLParser.RULE_null_check = 59;
SiddhiQLParser.RULE_stream_reference = 60;
SiddhiQLParser.RULE_attribute_reference = 61;
SiddhiQLParser.RULE_attribute_index = 62;
SiddhiQLParser.RULE_function_id = 63;
SiddhiQLParser.RULE_function_namespace = 64;
SiddhiQLParser.RULE_stream_id = 65;
SiddhiQLParser.RULE_stream_alias = 66;
SiddhiQLParser.RULE_property_name = 67;
SiddhiQLParser.RULE_attribute_name = 68;
SiddhiQLParser.RULE_property_value = 69;
SiddhiQLParser.RULE_source = 70;
SiddhiQLParser.RULE_target = 71;
SiddhiQLParser.RULE_event = 72;
SiddhiQLParser.RULE_name = 73;
SiddhiQLParser.RULE_collect = 74;
SiddhiQLParser.RULE_attribute_type = 75;
SiddhiQLParser.RULE_join = 76;
SiddhiQLParser.RULE_constant_value = 77;
SiddhiQLParser.RULE_id = 78;
SiddhiQLParser.RULE_keyword = 79;
SiddhiQLParser.RULE_time_value = 80;
SiddhiQLParser.RULE_year_value = 81;
SiddhiQLParser.RULE_month_value = 82;
SiddhiQLParser.RULE_week_value = 83;
SiddhiQLParser.RULE_day_value = 84;
SiddhiQLParser.RULE_hour_value = 85;
SiddhiQLParser.RULE_minute_value = 86;
SiddhiQLParser.RULE_second_value = 87;
SiddhiQLParser.RULE_millisecond_value = 88;
SiddhiQLParser.RULE_signed_double_value = 89;
SiddhiQLParser.RULE_signed_long_value = 90;
SiddhiQLParser.RULE_signed_float_value = 91;
SiddhiQLParser.RULE_signed_int_value = 92;
SiddhiQLParser.RULE_bool_value = 93;
SiddhiQLParser.RULE_string_value = 94;

function ParseContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_parse;
    return this;
}

ParseContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ParseContext.prototype.constructor = ParseContext;

ParseContext.prototype.execution_plan = function() {
    return this.getTypedRuleContext(Execution_planContext,0);
};

ParseContext.prototype.EOF = function() {
    return this.getToken(SiddhiQLParser.EOF, 0);
};

ParseContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterParse(this);
	}
};

ParseContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitParse(this);
	}
};

ParseContext.prototype.accept = function(visitor) {
    if ( visitor instanceof SiddhiQLVisitor ) {
        return visitor.visitParse(this);
    } else {
        return visitor.visitChildren(this);
    }
};




SiddhiQLParser.prototype.parse = function() {

    var localctx = new ParseContext(this, this._ctx, this.state);
    this.enterRule(localctx, 0, SiddhiQLParser.RULE_parse);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 190; 
        this.execution_plan();
        this.state = 191;
        this.match(SiddhiQLParser.EOF);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function ErrorContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_error;
    return this;
}

ErrorContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ErrorContext.prototype.constructor = ErrorContext;

ErrorContext.prototype.UNEXPECTED_CHAR = function() {
    return this.getToken(SiddhiQLParser.UNEXPECTED_CHAR, 0);
};

ErrorContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterError(this);
	}
};

ErrorContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitError(this);
	}
};

ErrorContext.prototype.accept = function(visitor) {
    if ( visitor instanceof SiddhiQLVisitor ) {
        return visitor.visitError(this);
    } else {
        return visitor.visitChildren(this);
    }
};




SiddhiQLParser.prototype.error = function() {

    var localctx = new ErrorContext(this, this._ctx, this.state);
    this.enterRule(localctx, 2, SiddhiQLParser.RULE_error);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 193;
        this.match(SiddhiQLParser.UNEXPECTED_CHAR);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Execution_planContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_execution_plan;
    return this;
}

Execution_planContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Execution_planContext.prototype.constructor = Execution_planContext;

Execution_planContext.prototype.plan_annotation = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Plan_annotationContext);
    } else {
        return this.getTypedRuleContext(Plan_annotationContext,i);
    }
};

Execution_planContext.prototype.error = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ErrorContext);
    } else {
        return this.getTypedRuleContext(ErrorContext,i);
    }
};

Execution_planContext.prototype.definition_stream = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Definition_streamContext);
    } else {
        return this.getTypedRuleContext(Definition_streamContext,i);
    }
};

Execution_planContext.prototype.definition_table = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Definition_tableContext);
    } else {
        return this.getTypedRuleContext(Definition_tableContext,i);
    }
};

Execution_planContext.prototype.definition_function = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Definition_functionContext);
    } else {
        return this.getTypedRuleContext(Definition_functionContext,i);
    }
};

Execution_planContext.prototype.execution_element = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Execution_elementContext);
    } else {
        return this.getTypedRuleContext(Execution_elementContext,i);
    }
};

Execution_planContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterExecution_plan(this);
	}
};

Execution_planContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitExecution_plan(this);
	}
};

Execution_planContext.prototype.accept = function(visitor) {
    if ( visitor instanceof SiddhiQLVisitor ) {
        return visitor.visitExecution_plan(this);
    } else {
        return visitor.visitChildren(this);
    }
};




SiddhiQLParser.prototype.execution_plan = function() {

    var localctx = new Execution_planContext(this, this._ctx, this.state);
    this.enterRule(localctx, 4, SiddhiQLParser.RULE_execution_plan);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 199;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,1,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                this.state = 197;
                switch(this._input.LA(1)) {
                case SiddhiQLParser.AT:
                    this.state = 195; 
                    this.plan_annotation();
                    break;
                case SiddhiQLParser.UNEXPECTED_CHAR:
                    this.state = 196; 
                    this.error();
                    break;
                default:
                    throw new antlr4.error.NoViableAltException(this);
                } 
            }
            this.state = 201;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,1,this._ctx);
        }

        this.state = 273;
        var la_ = this._interp.adaptivePredict(this._input,16,this._ctx);
        switch(la_) {
        case 1:
            this.state = 206;
            var la_ = this._interp.adaptivePredict(this._input,2,this._ctx);
            switch(la_) {
            case 1:
                this.state = 202; 
                this.definition_stream();
                break;

            case 2:
                this.state = 203; 
                this.definition_table();
                break;

            case 3:
                this.state = 204; 
                this.error();
                break;

            case 4:
                this.state = 205; 
                this.definition_function();
                break;

            }
            this.state = 217;
            this._errHandler.sync(this);
            var _alt = this._interp.adaptivePredict(this._input,4,this._ctx)
            while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
                if(_alt===1) {
                    this.state = 208;
                    this.match(SiddhiQLParser.SCOL);
                    this.state = 213;
                    var la_ = this._interp.adaptivePredict(this._input,3,this._ctx);
                    switch(la_) {
                    case 1:
                        this.state = 209; 
                        this.definition_stream();
                        break;

                    case 2:
                        this.state = 210; 
                        this.definition_table();
                        break;

                    case 3:
                        this.state = 211; 
                        this.error();
                        break;

                    case 4:
                        this.state = 212; 
                        this.definition_function();
                        break;

                    } 
                }
                this.state = 219;
                this._errHandler.sync(this);
                _alt = this._interp.adaptivePredict(this._input,4,this._ctx);
            }

            this.state = 221;
            _la = this._input.LA(1);
            if(_la===SiddhiQLParser.SCOL) {
                this.state = 220;
                this.match(SiddhiQLParser.SCOL);
            }

            break;

        case 2:
            break;

        case 3:
            this.state = 226;
            switch(this._input.LA(1)) {
            case SiddhiQLParser.AT:
            case SiddhiQLParser.FROM:
            case SiddhiQLParser.PARTITION:
                this.state = 224; 
                this.execution_element();
                break;
            case SiddhiQLParser.UNEXPECTED_CHAR:
                this.state = 225; 
                this.error();
                break;
            default:
                throw new antlr4.error.NoViableAltException(this);
            }
            this.state = 235;
            this._errHandler.sync(this);
            var _alt = this._interp.adaptivePredict(this._input,8,this._ctx)
            while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
                if(_alt===1) {
                    this.state = 228;
                    this.match(SiddhiQLParser.SCOL);
                    this.state = 231;
                    switch(this._input.LA(1)) {
                    case SiddhiQLParser.AT:
                    case SiddhiQLParser.FROM:
                    case SiddhiQLParser.PARTITION:
                        this.state = 229; 
                        this.execution_element();
                        break;
                    case SiddhiQLParser.UNEXPECTED_CHAR:
                        this.state = 230; 
                        this.error();
                        break;
                    default:
                        throw new antlr4.error.NoViableAltException(this);
                    } 
                }
                this.state = 237;
                this._errHandler.sync(this);
                _alt = this._interp.adaptivePredict(this._input,8,this._ctx);
            }

            this.state = 239;
            _la = this._input.LA(1);
            if(_la===SiddhiQLParser.SCOL) {
                this.state = 238;
                this.match(SiddhiQLParser.SCOL);
            }

            break;

        case 4:
            break;

        case 5:
            this.state = 246;
            var la_ = this._interp.adaptivePredict(this._input,10,this._ctx);
            switch(la_) {
            case 1:
                this.state = 242; 
                this.definition_stream();
                break;

            case 2:
                this.state = 243; 
                this.definition_table();
                break;

            case 3:
                this.state = 244; 
                this.error();
                break;

            case 4:
                this.state = 245; 
                this.definition_function();
                break;

            }
            this.state = 257;
            this._errHandler.sync(this);
            var _alt = this._interp.adaptivePredict(this._input,12,this._ctx)
            while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
                if(_alt===1) {
                    this.state = 248;
                    this.match(SiddhiQLParser.SCOL);
                    this.state = 253;
                    var la_ = this._interp.adaptivePredict(this._input,11,this._ctx);
                    switch(la_) {
                    case 1:
                        this.state = 249; 
                        this.definition_stream();
                        break;

                    case 2:
                        this.state = 250; 
                        this.definition_table();
                        break;

                    case 3:
                        this.state = 251; 
                        this.error();
                        break;

                    case 4:
                        this.state = 252; 
                        this.definition_function();
                        break;

                    } 
                }
                this.state = 259;
                this._errHandler.sync(this);
                _alt = this._interp.adaptivePredict(this._input,12,this._ctx);
            }

            this.state = 267;
            this._errHandler.sync(this);
            var _alt = this._interp.adaptivePredict(this._input,14,this._ctx)
            while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
                if(_alt===1) {
                    this.state = 260;
                    this.match(SiddhiQLParser.SCOL);
                    this.state = 263;
                    switch(this._input.LA(1)) {
                    case SiddhiQLParser.AT:
                    case SiddhiQLParser.FROM:
                    case SiddhiQLParser.PARTITION:
                        this.state = 261; 
                        this.execution_element();
                        break;
                    case SiddhiQLParser.UNEXPECTED_CHAR:
                        this.state = 262; 
                        this.error();
                        break;
                    default:
                        throw new antlr4.error.NoViableAltException(this);
                    } 
                }
                this.state = 269;
                this._errHandler.sync(this);
                _alt = this._interp.adaptivePredict(this._input,14,this._ctx);
            }

            this.state = 271;
            _la = this._input.LA(1);
            if(_la===SiddhiQLParser.SCOL) {
                this.state = 270;
                this.match(SiddhiQLParser.SCOL);
            }

            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Execution_elementContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_execution_element;
    return this;
}

Execution_elementContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Execution_elementContext.prototype.constructor = Execution_elementContext;

Execution_elementContext.prototype.query = function() {
    return this.getTypedRuleContext(QueryContext,0);
};

Execution_elementContext.prototype.partition = function() {
    return this.getTypedRuleContext(PartitionContext,0);
};

Execution_elementContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterExecution_element(this);
	}
};

Execution_elementContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitExecution_element(this);
	}
};

Execution_elementContext.prototype.accept = function(visitor) {
    if ( visitor instanceof SiddhiQLVisitor ) {
        return visitor.visitExecution_element(this);
    } else {
        return visitor.visitChildren(this);
    }
};




SiddhiQLParser.prototype.execution_element = function() {

    var localctx = new Execution_elementContext(this, this._ctx, this.state);
    this.enterRule(localctx, 6, SiddhiQLParser.RULE_execution_element);
    try {
        this.state = 277;
        var la_ = this._interp.adaptivePredict(this._input,17,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 275; 
            this.query();
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 276; 
            this.partition();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Definition_stream_finalContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_definition_stream_final;
    return this;
}

Definition_stream_finalContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Definition_stream_finalContext.prototype.constructor = Definition_stream_finalContext;

Definition_stream_finalContext.prototype.definition_stream = function() {
    return this.getTypedRuleContext(Definition_streamContext,0);
};

Definition_stream_finalContext.prototype.EOF = function() {
    return this.getToken(SiddhiQLParser.EOF, 0);
};

Definition_stream_finalContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterDefinition_stream_final(this);
	}
};

Definition_stream_finalContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitDefinition_stream_final(this);
	}
};

Definition_stream_finalContext.prototype.accept = function(visitor) {
    if ( visitor instanceof SiddhiQLVisitor ) {
        return visitor.visitDefinition_stream_final(this);
    } else {
        return visitor.visitChildren(this);
    }
};




SiddhiQLParser.prototype.definition_stream_final = function() {

    var localctx = new Definition_stream_finalContext(this, this._ctx, this.state);
    this.enterRule(localctx, 8, SiddhiQLParser.RULE_definition_stream_final);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 279; 
        this.definition_stream();
        this.state = 281;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.SCOL) {
            this.state = 280;
            this.match(SiddhiQLParser.SCOL);
        }

        this.state = 283;
        this.match(SiddhiQLParser.EOF);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Definition_streamContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_definition_stream;
    return this;
}

Definition_streamContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Definition_streamContext.prototype.constructor = Definition_streamContext;

Definition_streamContext.prototype.DEFINE = function() {
    return this.getToken(SiddhiQLParser.DEFINE, 0);
};

Definition_streamContext.prototype.STREAM = function() {
    return this.getToken(SiddhiQLParser.STREAM, 0);
};

Definition_streamContext.prototype.source = function() {
    return this.getTypedRuleContext(SourceContext,0);
};

Definition_streamContext.prototype.attribute_name = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Attribute_nameContext);
    } else {
        return this.getTypedRuleContext(Attribute_nameContext,i);
    }
};

Definition_streamContext.prototype.attribute_type = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Attribute_typeContext);
    } else {
        return this.getTypedRuleContext(Attribute_typeContext,i);
    }
};

Definition_streamContext.prototype.annotation = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(AnnotationContext);
    } else {
        return this.getTypedRuleContext(AnnotationContext,i);
    }
};

Definition_streamContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterDefinition_stream(this);
	}
};

Definition_streamContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitDefinition_stream(this);
	}
};

Definition_streamContext.prototype.accept = function(visitor) {
    if ( visitor instanceof SiddhiQLVisitor ) {
        return visitor.visitDefinition_stream(this);
    } else {
        return visitor.visitChildren(this);
    }
};




SiddhiQLParser.prototype.definition_stream = function() {

    var localctx = new Definition_streamContext(this, this._ctx, this.state);
    this.enterRule(localctx, 10, SiddhiQLParser.RULE_definition_stream);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 288;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===SiddhiQLParser.AT) {
            this.state = 285; 
            this.annotation();
            this.state = 290;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
        this.state = 291;
        this.match(SiddhiQLParser.DEFINE);
        this.state = 292;
        this.match(SiddhiQLParser.STREAM);
        this.state = 293; 
        this.source();
        this.state = 294;
        this.match(SiddhiQLParser.OPEN_PAR);
        this.state = 295; 
        this.attribute_name();
        this.state = 296; 
        this.attribute_type();
        this.state = 303;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===SiddhiQLParser.COMMA) {
            this.state = 297;
            this.match(SiddhiQLParser.COMMA);
            this.state = 298; 
            this.attribute_name();
            this.state = 299; 
            this.attribute_type();
            this.state = 305;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
        this.state = 306;
        this.match(SiddhiQLParser.CLOSE_PAR);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Definition_table_finalContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_definition_table_final;
    return this;
}

Definition_table_finalContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Definition_table_finalContext.prototype.constructor = Definition_table_finalContext;

Definition_table_finalContext.prototype.definition_table = function() {
    return this.getTypedRuleContext(Definition_tableContext,0);
};

Definition_table_finalContext.prototype.EOF = function() {
    return this.getToken(SiddhiQLParser.EOF, 0);
};

Definition_table_finalContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterDefinition_table_final(this);
	}
};

Definition_table_finalContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitDefinition_table_final(this);
	}
};

Definition_table_finalContext.prototype.accept = function(visitor) {
    if ( visitor instanceof SiddhiQLVisitor ) {
        return visitor.visitDefinition_table_final(this);
    } else {
        return visitor.visitChildren(this);
    }
};




SiddhiQLParser.prototype.definition_table_final = function() {

    var localctx = new Definition_table_finalContext(this, this._ctx, this.state);
    this.enterRule(localctx, 12, SiddhiQLParser.RULE_definition_table_final);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 308; 
        this.definition_table();
        this.state = 310;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.SCOL) {
            this.state = 309;
            this.match(SiddhiQLParser.SCOL);
        }

        this.state = 312;
        this.match(SiddhiQLParser.EOF);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Definition_tableContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_definition_table;
    return this;
}

Definition_tableContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Definition_tableContext.prototype.constructor = Definition_tableContext;

Definition_tableContext.prototype.DEFINE = function() {
    return this.getToken(SiddhiQLParser.DEFINE, 0);
};

Definition_tableContext.prototype.TABLE = function() {
    return this.getToken(SiddhiQLParser.TABLE, 0);
};

Definition_tableContext.prototype.source = function() {
    return this.getTypedRuleContext(SourceContext,0);
};

Definition_tableContext.prototype.attribute_name = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Attribute_nameContext);
    } else {
        return this.getTypedRuleContext(Attribute_nameContext,i);
    }
};

Definition_tableContext.prototype.attribute_type = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Attribute_typeContext);
    } else {
        return this.getTypedRuleContext(Attribute_typeContext,i);
    }
};

Definition_tableContext.prototype.annotation = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(AnnotationContext);
    } else {
        return this.getTypedRuleContext(AnnotationContext,i);
    }
};

Definition_tableContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterDefinition_table(this);
	}
};

Definition_tableContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitDefinition_table(this);
	}
};

Definition_tableContext.prototype.accept = function(visitor) {
    if ( visitor instanceof SiddhiQLVisitor ) {
        return visitor.visitDefinition_table(this);
    } else {
        return visitor.visitChildren(this);
    }
};




SiddhiQLParser.prototype.definition_table = function() {

    var localctx = new Definition_tableContext(this, this._ctx, this.state);
    this.enterRule(localctx, 14, SiddhiQLParser.RULE_definition_table);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 317;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===SiddhiQLParser.AT) {
            this.state = 314; 
            this.annotation();
            this.state = 319;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
        this.state = 320;
        this.match(SiddhiQLParser.DEFINE);
        this.state = 321;
        this.match(SiddhiQLParser.TABLE);
        this.state = 322; 
        this.source();
        this.state = 323;
        this.match(SiddhiQLParser.OPEN_PAR);
        this.state = 324; 
        this.attribute_name();
        this.state = 325; 
        this.attribute_type();
        this.state = 332;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===SiddhiQLParser.COMMA) {
            this.state = 326;
            this.match(SiddhiQLParser.COMMA);
            this.state = 327; 
            this.attribute_name();
            this.state = 328; 
            this.attribute_type();
            this.state = 334;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
        this.state = 335;
        this.match(SiddhiQLParser.CLOSE_PAR);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Definition_function_finalContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_definition_function_final;
    return this;
}

Definition_function_finalContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Definition_function_finalContext.prototype.constructor = Definition_function_finalContext;

Definition_function_finalContext.prototype.definition_function = function() {
    return this.getTypedRuleContext(Definition_functionContext,0);
};

Definition_function_finalContext.prototype.EOF = function() {
    return this.getToken(SiddhiQLParser.EOF, 0);
};

Definition_function_finalContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterDefinition_function_final(this);
	}
};

Definition_function_finalContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitDefinition_function_final(this);
	}
};

Definition_function_finalContext.prototype.accept = function(visitor) {
    if ( visitor instanceof SiddhiQLVisitor ) {
        return visitor.visitDefinition_function_final(this);
    } else {
        return visitor.visitChildren(this);
    }
};




SiddhiQLParser.prototype.definition_function_final = function() {

    var localctx = new Definition_function_finalContext(this, this._ctx, this.state);
    this.enterRule(localctx, 16, SiddhiQLParser.RULE_definition_function_final);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 337; 
        this.definition_function();
        this.state = 339;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.SCOL) {
            this.state = 338;
            this.match(SiddhiQLParser.SCOL);
        }

        this.state = 341;
        this.match(SiddhiQLParser.EOF);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Definition_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_definition_function;
    return this;
}

Definition_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Definition_functionContext.prototype.constructor = Definition_functionContext;

Definition_functionContext.prototype.DEFINE = function() {
    return this.getToken(SiddhiQLParser.DEFINE, 0);
};

Definition_functionContext.prototype.FUNCTION = function() {
    return this.getToken(SiddhiQLParser.FUNCTION, 0);
};

Definition_functionContext.prototype.function_name = function() {
    return this.getTypedRuleContext(Function_nameContext,0);
};

Definition_functionContext.prototype.language_name = function() {
    return this.getTypedRuleContext(Language_nameContext,0);
};

Definition_functionContext.prototype.RETURN = function() {
    return this.getToken(SiddhiQLParser.RETURN, 0);
};

Definition_functionContext.prototype.attribute_type = function() {
    return this.getTypedRuleContext(Attribute_typeContext,0);
};

Definition_functionContext.prototype.function_body = function() {
    return this.getTypedRuleContext(Function_bodyContext,0);
};

Definition_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterDefinition_function(this);
	}
};

Definition_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitDefinition_function(this);
	}
};

Definition_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof SiddhiQLVisitor ) {
        return visitor.visitDefinition_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




SiddhiQLParser.prototype.definition_function = function() {

    var localctx = new Definition_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 18, SiddhiQLParser.RULE_definition_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 343;
        this.match(SiddhiQLParser.DEFINE);
        this.state = 344;
        this.match(SiddhiQLParser.FUNCTION);
        this.state = 345; 
        this.function_name();
        this.state = 346;
        this.match(SiddhiQLParser.OPEN_SQARE_BRACKETS);
        this.state = 347; 
        this.language_name();
        this.state = 348;
        this.match(SiddhiQLParser.CLOASE_SQARE_BRACKETS);
        this.state = 349;
        this.match(SiddhiQLParser.RETURN);
        this.state = 350; 
        this.attribute_type();
        this.state = 351; 
        this.function_body();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Function_nameContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_function_name;
    return this;
}

Function_nameContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Function_nameContext.prototype.constructor = Function_nameContext;

Function_nameContext.prototype.id = function() {
    return this.getTypedRuleContext(IdContext,0);
};

Function_nameContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterFunction_name(this);
	}
};

Function_nameContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitFunction_name(this);
	}
};

Function_nameContext.prototype.accept = function(visitor) {
    if ( visitor instanceof SiddhiQLVisitor ) {
        return visitor.visitFunction_name(this);
    } else {
        return visitor.visitChildren(this);
    }
};




SiddhiQLParser.prototype.function_name = function() {

    var localctx = new Function_nameContext(this, this._ctx, this.state);
    this.enterRule(localctx, 20, SiddhiQLParser.RULE_function_name);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 353; 
        this.id();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Language_nameContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_language_name;
    return this;
}

Language_nameContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Language_nameContext.prototype.constructor = Language_nameContext;

Language_nameContext.prototype.id = function() {
    return this.getTypedRuleContext(IdContext,0);
};

Language_nameContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterLanguage_name(this);
	}
};

Language_nameContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitLanguage_name(this);
	}
};

Language_nameContext.prototype.accept = function(visitor) {
    if ( visitor instanceof SiddhiQLVisitor ) {
        return visitor.visitLanguage_name(this);
    } else {
        return visitor.visitChildren(this);
    }
};




SiddhiQLParser.prototype.language_name = function() {

    var localctx = new Language_nameContext(this, this._ctx, this.state);
    this.enterRule(localctx, 22, SiddhiQLParser.RULE_language_name);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 355; 
        this.id();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Function_bodyContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_function_body;
    return this;
}

Function_bodyContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Function_bodyContext.prototype.constructor = Function_bodyContext;

Function_bodyContext.prototype.SCRIPT = function() {
    return this.getToken(SiddhiQLParser.SCRIPT, 0);
};

Function_bodyContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterFunction_body(this);
	}
};

Function_bodyContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitFunction_body(this);
	}
};

Function_bodyContext.prototype.accept = function(visitor) {
    if ( visitor instanceof SiddhiQLVisitor ) {
        return visitor.visitFunction_body(this);
    } else {
        return visitor.visitChildren(this);
    }
};




SiddhiQLParser.prototype.function_body = function() {

    var localctx = new Function_bodyContext(this, this._ctx, this.state);
    this.enterRule(localctx, 24, SiddhiQLParser.RULE_function_body);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 357;
        this.match(SiddhiQLParser.SCRIPT);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function AnnotationContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_annotation;
    return this;
}

AnnotationContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
AnnotationContext.prototype.constructor = AnnotationContext;

AnnotationContext.prototype.name = function() {
    return this.getTypedRuleContext(NameContext,0);
};

AnnotationContext.prototype.annotation_element = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Annotation_elementContext);
    } else {
        return this.getTypedRuleContext(Annotation_elementContext,i);
    }
};

AnnotationContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterAnnotation(this);
	}
};

AnnotationContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitAnnotation(this);
	}
};

AnnotationContext.prototype.accept = function(visitor) {
    if ( visitor instanceof SiddhiQLVisitor ) {
        return visitor.visitAnnotation(this);
    } else {
        return visitor.visitChildren(this);
    }
};




SiddhiQLParser.prototype.annotation = function() {

    var localctx = new AnnotationContext(this, this._ctx, this.state);
    this.enterRule(localctx, 26, SiddhiQLParser.RULE_annotation);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 359;
        this.match(SiddhiQLParser.AT);
        this.state = 360; 
        this.name();
        this.state = 372;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.OPEN_PAR) {
            this.state = 361;
            this.match(SiddhiQLParser.OPEN_PAR);
            this.state = 362; 
            this.annotation_element();
            this.state = 367;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            while(_la===SiddhiQLParser.COMMA) {
                this.state = 363;
                this.match(SiddhiQLParser.COMMA);
                this.state = 364; 
                this.annotation_element();
                this.state = 369;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
            }
            this.state = 370;
            this.match(SiddhiQLParser.CLOSE_PAR);
        }

    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Plan_annotationContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_plan_annotation;
    return this;
}

Plan_annotationContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Plan_annotationContext.prototype.constructor = Plan_annotationContext;

Plan_annotationContext.prototype.PLAN = function() {
    return this.getToken(SiddhiQLParser.PLAN, 0);
};

Plan_annotationContext.prototype.name = function() {
    return this.getTypedRuleContext(NameContext,0);
};

Plan_annotationContext.prototype.annotation_element = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Annotation_elementContext);
    } else {
        return this.getTypedRuleContext(Annotation_elementContext,i);
    }
};

Plan_annotationContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterPlan_annotation(this);
	}
};

Plan_annotationContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitPlan_annotation(this);
	}
};

Plan_annotationContext.prototype.accept = function(visitor) {
    if ( visitor instanceof SiddhiQLVisitor ) {
        return visitor.visitPlan_annotation(this);
    } else {
        return visitor.visitChildren(this);
    }
};




SiddhiQLParser.prototype.plan_annotation = function() {

    var localctx = new Plan_annotationContext(this, this._ctx, this.state);
    this.enterRule(localctx, 28, SiddhiQLParser.RULE_plan_annotation);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 374;
        this.match(SiddhiQLParser.AT);
        this.state = 375;
        this.match(SiddhiQLParser.PLAN);
        this.state = 376;
        this.match(SiddhiQLParser.COL);
        this.state = 377; 
        this.name();
        this.state = 389;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.OPEN_PAR) {
            this.state = 378;
            this.match(SiddhiQLParser.OPEN_PAR);
            this.state = 379; 
            this.annotation_element();
            this.state = 384;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            while(_la===SiddhiQLParser.COMMA) {
                this.state = 380;
                this.match(SiddhiQLParser.COMMA);
                this.state = 381; 
                this.annotation_element();
                this.state = 386;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
            }
            this.state = 387;
            this.match(SiddhiQLParser.CLOSE_PAR);
        }

    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Annotation_elementContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_annotation_element;
    return this;
}

Annotation_elementContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Annotation_elementContext.prototype.constructor = Annotation_elementContext;

Annotation_elementContext.prototype.property_value = function() {
    return this.getTypedRuleContext(Property_valueContext,0);
};

Annotation_elementContext.prototype.property_name = function() {
    return this.getTypedRuleContext(Property_nameContext,0);
};

Annotation_elementContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterAnnotation_element(this);
	}
};

Annotation_elementContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitAnnotation_element(this);
	}
};

Annotation_elementContext.prototype.accept = function(visitor) {
    if ( visitor instanceof SiddhiQLVisitor ) {
        return visitor.visitAnnotation_element(this);
    } else {
        return visitor.visitChildren(this);
    }
};




SiddhiQLParser.prototype.annotation_element = function() {

    var localctx = new Annotation_elementContext(this, this._ctx, this.state);
    this.enterRule(localctx, 30, SiddhiQLParser.RULE_annotation_element);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 394;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.STREAM || _la===SiddhiQLParser.DEFINE || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (SiddhiQLParser.TABLE - 32)) | (1 << (SiddhiQLParser.FROM - 32)) | (1 << (SiddhiQLParser.PARTITION - 32)) | (1 << (SiddhiQLParser.WINDOW - 32)) | (1 << (SiddhiQLParser.SELECT - 32)) | (1 << (SiddhiQLParser.GROUP - 32)) | (1 << (SiddhiQLParser.BY - 32)) | (1 << (SiddhiQLParser.HAVING - 32)) | (1 << (SiddhiQLParser.INSERT - 32)) | (1 << (SiddhiQLParser.DELETE - 32)) | (1 << (SiddhiQLParser.UPDATE - 32)) | (1 << (SiddhiQLParser.RETURN - 32)) | (1 << (SiddhiQLParser.EVENTS - 32)) | (1 << (SiddhiQLParser.INTO - 32)) | (1 << (SiddhiQLParser.OUTPUT - 32)) | (1 << (SiddhiQLParser.EXPIRED - 32)) | (1 << (SiddhiQLParser.CURRENT - 32)) | (1 << (SiddhiQLParser.SNAPSHOT - 32)) | (1 << (SiddhiQLParser.FOR - 32)) | (1 << (SiddhiQLParser.RAW - 32)) | (1 << (SiddhiQLParser.OF - 32)) | (1 << (SiddhiQLParser.AS - 32)) | (1 << (SiddhiQLParser.OR - 32)) | (1 << (SiddhiQLParser.AND - 32)) | (1 << (SiddhiQLParser.ON - 32)) | (1 << (SiddhiQLParser.IS - 32)) | (1 << (SiddhiQLParser.NOT - 32)) | (1 << (SiddhiQLParser.WITHIN - 32)) | (1 << (SiddhiQLParser.WITH - 32)) | (1 << (SiddhiQLParser.BEGIN - 32)))) !== 0) || ((((_la - 64)) & ~0x1f) == 0 && ((1 << (_la - 64)) & ((1 << (SiddhiQLParser.END - 64)) | (1 << (SiddhiQLParser.NULL - 64)) | (1 << (SiddhiQLParser.EVERY - 64)) | (1 << (SiddhiQLParser.LAST - 64)) | (1 << (SiddhiQLParser.ALL - 64)) | (1 << (SiddhiQLParser.FIRST - 64)) | (1 << (SiddhiQLParser.JOIN - 64)) | (1 << (SiddhiQLParser.INNER - 64)) | (1 << (SiddhiQLParser.OUTER - 64)) | (1 << (SiddhiQLParser.RIGHT - 64)) | (1 << (SiddhiQLParser.LEFT - 64)) | (1 << (SiddhiQLParser.FULL - 64)) | (1 << (SiddhiQLParser.UNIDIRECTIONAL - 64)) | (1 << (SiddhiQLParser.YEARS - 64)) | (1 << (SiddhiQLParser.MONTHS - 64)) | (1 << (SiddhiQLParser.WEEKS - 64)) | (1 << (SiddhiQLParser.DAYS - 64)) | (1 << (SiddhiQLParser.HOURS - 64)) | (1 << (SiddhiQLParser.MINUTES - 64)) | (1 << (SiddhiQLParser.SECONDS - 64)) | (1 << (SiddhiQLParser.MILLISECONDS - 64)) | (1 << (SiddhiQLParser.FALSE - 64)) | (1 << (SiddhiQLParser.TRUE - 64)) | (1 << (SiddhiQLParser.STRING - 64)) | (1 << (SiddhiQLParser.INT - 64)) | (1 << (SiddhiQLParser.LONG - 64)) | (1 << (SiddhiQLParser.FLOAT - 64)) | (1 << (SiddhiQLParser.DOUBLE - 64)) | (1 << (SiddhiQLParser.BOOL - 64)) | (1 << (SiddhiQLParser.OBJECT - 64)) | (1 << (SiddhiQLParser.ID_QUOTES - 64)) | (1 << (SiddhiQLParser.ID - 64)))) !== 0)) {
            this.state = 391; 
            this.property_name();
            this.state = 392;
            this.match(SiddhiQLParser.ASSIGN);
        }

        this.state = 396; 
        this.property_value();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function PartitionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_partition;
    return this;
}

PartitionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
PartitionContext.prototype.constructor = PartitionContext;

PartitionContext.prototype.PARTITION = function() {
    return this.getToken(SiddhiQLParser.PARTITION, 0);
};

PartitionContext.prototype.WITH = function() {
    return this.getToken(SiddhiQLParser.WITH, 0);
};

PartitionContext.prototype.partition_with_stream = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Partition_with_streamContext);
    } else {
        return this.getTypedRuleContext(Partition_with_streamContext,i);
    }
};

PartitionContext.prototype.BEGIN = function() {
    return this.getToken(SiddhiQLParser.BEGIN, 0);
};

PartitionContext.prototype.END = function() {
    return this.getToken(SiddhiQLParser.END, 0);
};

PartitionContext.prototype.query = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(QueryContext);
    } else {
        return this.getTypedRuleContext(QueryContext,i);
    }
};

PartitionContext.prototype.error = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ErrorContext);
    } else {
        return this.getTypedRuleContext(ErrorContext,i);
    }
};

PartitionContext.prototype.annotation = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(AnnotationContext);
    } else {
        return this.getTypedRuleContext(AnnotationContext,i);
    }
};

PartitionContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterPartition(this);
	}
};

PartitionContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitPartition(this);
	}
};

PartitionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof SiddhiQLVisitor ) {
        return visitor.visitPartition(this);
    } else {
        return visitor.visitChildren(this);
    }
};




SiddhiQLParser.prototype.partition = function() {

    var localctx = new PartitionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 32, SiddhiQLParser.RULE_partition);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 401;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===SiddhiQLParser.AT) {
            this.state = 398; 
            this.annotation();
            this.state = 403;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
        this.state = 404;
        this.match(SiddhiQLParser.PARTITION);
        this.state = 405;
        this.match(SiddhiQLParser.WITH);
        this.state = 406;
        this.match(SiddhiQLParser.OPEN_PAR);
        this.state = 407; 
        this.partition_with_stream();
        this.state = 412;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===SiddhiQLParser.COMMA) {
            this.state = 408;
            this.match(SiddhiQLParser.COMMA);
            this.state = 409; 
            this.partition_with_stream();
            this.state = 414;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
        this.state = 415;
        this.match(SiddhiQLParser.CLOSE_PAR);
        this.state = 416;
        this.match(SiddhiQLParser.BEGIN);
        this.state = 419;
        switch(this._input.LA(1)) {
        case SiddhiQLParser.AT:
        case SiddhiQLParser.FROM:
            this.state = 417; 
            this.query();
            break;
        case SiddhiQLParser.UNEXPECTED_CHAR:
            this.state = 418; 
            this.error();
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
        this.state = 428;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,34,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                this.state = 421;
                this.match(SiddhiQLParser.SCOL);
                this.state = 424;
                switch(this._input.LA(1)) {
                case SiddhiQLParser.AT:
                case SiddhiQLParser.FROM:
                    this.state = 422; 
                    this.query();
                    break;
                case SiddhiQLParser.UNEXPECTED_CHAR:
                    this.state = 423; 
                    this.error();
                    break;
                default:
                    throw new antlr4.error.NoViableAltException(this);
                } 
            }
            this.state = 430;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,34,this._ctx);
        }

        this.state = 432;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.SCOL) {
            this.state = 431;
            this.match(SiddhiQLParser.SCOL);
        }

        this.state = 434;
        this.match(SiddhiQLParser.END);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Partition_finalContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_partition_final;
    return this;
}

Partition_finalContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Partition_finalContext.prototype.constructor = Partition_finalContext;

Partition_finalContext.prototype.partition = function() {
    return this.getTypedRuleContext(PartitionContext,0);
};

Partition_finalContext.prototype.EOF = function() {
    return this.getToken(SiddhiQLParser.EOF, 0);
};

Partition_finalContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterPartition_final(this);
	}
};

Partition_finalContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitPartition_final(this);
	}
};

Partition_finalContext.prototype.accept = function(visitor) {
    if ( visitor instanceof SiddhiQLVisitor ) {
        return visitor.visitPartition_final(this);
    } else {
        return visitor.visitChildren(this);
    }
};




SiddhiQLParser.prototype.partition_final = function() {

    var localctx = new Partition_finalContext(this, this._ctx, this.state);
    this.enterRule(localctx, 34, SiddhiQLParser.RULE_partition_final);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 436; 
        this.partition();
        this.state = 438;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.SCOL) {
            this.state = 437;
            this.match(SiddhiQLParser.SCOL);
        }

        this.state = 440;
        this.match(SiddhiQLParser.EOF);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Partition_with_streamContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_partition_with_stream;
    return this;
}

Partition_with_streamContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Partition_with_streamContext.prototype.constructor = Partition_with_streamContext;

Partition_with_streamContext.prototype.attribute = function() {
    return this.getTypedRuleContext(AttributeContext,0);
};

Partition_with_streamContext.prototype.OF = function() {
    return this.getToken(SiddhiQLParser.OF, 0);
};

Partition_with_streamContext.prototype.stream_id = function() {
    return this.getTypedRuleContext(Stream_idContext,0);
};

Partition_with_streamContext.prototype.condition_ranges = function() {
    return this.getTypedRuleContext(Condition_rangesContext,0);
};

Partition_with_streamContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterPartition_with_stream(this);
	}
};

Partition_with_streamContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitPartition_with_stream(this);
	}
};

Partition_with_streamContext.prototype.accept = function(visitor) {
    if ( visitor instanceof SiddhiQLVisitor ) {
        return visitor.visitPartition_with_stream(this);
    } else {
        return visitor.visitChildren(this);
    }
};




SiddhiQLParser.prototype.partition_with_stream = function() {

    var localctx = new Partition_with_streamContext(this, this._ctx, this.state);
    this.enterRule(localctx, 36, SiddhiQLParser.RULE_partition_with_stream);
    try {
        this.state = 450;
        var la_ = this._interp.adaptivePredict(this._input,37,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 442; 
            this.attribute();
            this.state = 443;
            this.match(SiddhiQLParser.OF);
            this.state = 444; 
            this.stream_id();
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 446; 
            this.condition_ranges();
            this.state = 447;
            this.match(SiddhiQLParser.OF);
            this.state = 448; 
            this.stream_id();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Condition_rangesContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_condition_ranges;
    return this;
}

Condition_rangesContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Condition_rangesContext.prototype.constructor = Condition_rangesContext;

Condition_rangesContext.prototype.condition_range = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Condition_rangeContext);
    } else {
        return this.getTypedRuleContext(Condition_rangeContext,i);
    }
};

Condition_rangesContext.prototype.OR = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(SiddhiQLParser.OR);
    } else {
        return this.getToken(SiddhiQLParser.OR, i);
    }
};


Condition_rangesContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterCondition_ranges(this);
	}
};

Condition_rangesContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitCondition_ranges(this);
	}
};

Condition_rangesContext.prototype.accept = function(visitor) {
    if ( visitor instanceof SiddhiQLVisitor ) {
        return visitor.visitCondition_ranges(this);
    } else {
        return visitor.visitChildren(this);
    }
};




SiddhiQLParser.prototype.condition_ranges = function() {

    var localctx = new Condition_rangesContext(this, this._ctx, this.state);
    this.enterRule(localctx, 38, SiddhiQLParser.RULE_condition_ranges);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 452; 
        this.condition_range();
        this.state = 457;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===SiddhiQLParser.OR) {
            this.state = 453;
            this.match(SiddhiQLParser.OR);
            this.state = 454; 
            this.condition_range();
            this.state = 459;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Condition_rangeContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_condition_range;
    return this;
}

Condition_rangeContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Condition_rangeContext.prototype.constructor = Condition_rangeContext;

Condition_rangeContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Condition_rangeContext.prototype.AS = function() {
    return this.getToken(SiddhiQLParser.AS, 0);
};

Condition_rangeContext.prototype.string_value = function() {
    return this.getTypedRuleContext(String_valueContext,0);
};

Condition_rangeContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterCondition_range(this);
	}
};

Condition_rangeContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitCondition_range(this);
	}
};

Condition_rangeContext.prototype.accept = function(visitor) {
    if ( visitor instanceof SiddhiQLVisitor ) {
        return visitor.visitCondition_range(this);
    } else {
        return visitor.visitChildren(this);
    }
};




SiddhiQLParser.prototype.condition_range = function() {

    var localctx = new Condition_rangeContext(this, this._ctx, this.state);
    this.enterRule(localctx, 40, SiddhiQLParser.RULE_condition_range);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 460; 
        this.expression();
        this.state = 461;
        this.match(SiddhiQLParser.AS);
        this.state = 462; 
        this.string_value();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Query_finalContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_query_final;
    return this;
}

Query_finalContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Query_finalContext.prototype.constructor = Query_finalContext;

Query_finalContext.prototype.query = function() {
    return this.getTypedRuleContext(QueryContext,0);
};

Query_finalContext.prototype.EOF = function() {
    return this.getToken(SiddhiQLParser.EOF, 0);
};

Query_finalContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterQuery_final(this);
	}
};

Query_finalContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitQuery_final(this);
	}
};

Query_finalContext.prototype.accept = function(visitor) {
    if ( visitor instanceof SiddhiQLVisitor ) {
        return visitor.visitQuery_final(this);
    } else {
        return visitor.visitChildren(this);
    }
};




SiddhiQLParser.prototype.query_final = function() {

    var localctx = new Query_finalContext(this, this._ctx, this.state);
    this.enterRule(localctx, 42, SiddhiQLParser.RULE_query_final);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 464; 
        this.query();
        this.state = 466;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.SCOL) {
            this.state = 465;
            this.match(SiddhiQLParser.SCOL);
        }

        this.state = 468;
        this.match(SiddhiQLParser.EOF);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function QueryContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_query;
    return this;
}

QueryContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
QueryContext.prototype.constructor = QueryContext;

QueryContext.prototype.FROM = function() {
    return this.getToken(SiddhiQLParser.FROM, 0);
};

QueryContext.prototype.query_input = function() {
    return this.getTypedRuleContext(Query_inputContext,0);
};

QueryContext.prototype.query_output = function() {
    return this.getTypedRuleContext(Query_outputContext,0);
};

QueryContext.prototype.annotation = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(AnnotationContext);
    } else {
        return this.getTypedRuleContext(AnnotationContext,i);
    }
};

QueryContext.prototype.query_section = function() {
    return this.getTypedRuleContext(Query_sectionContext,0);
};

QueryContext.prototype.output_rate = function() {
    return this.getTypedRuleContext(Output_rateContext,0);
};

QueryContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterQuery(this);
	}
};

QueryContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitQuery(this);
	}
};

QueryContext.prototype.accept = function(visitor) {
    if ( visitor instanceof SiddhiQLVisitor ) {
        return visitor.visitQuery(this);
    } else {
        return visitor.visitChildren(this);
    }
};




SiddhiQLParser.prototype.query = function() {

    var localctx = new QueryContext(this, this._ctx, this.state);
    this.enterRule(localctx, 44, SiddhiQLParser.RULE_query);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 473;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===SiddhiQLParser.AT) {
            this.state = 470; 
            this.annotation();
            this.state = 475;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
        this.state = 476;
        this.match(SiddhiQLParser.FROM);
        this.state = 477; 
        this.query_input();
        this.state = 479;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.SELECT) {
            this.state = 478; 
            this.query_section();
        }

        this.state = 482;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.OUTPUT) {
            this.state = 481; 
            this.output_rate();
        }

        this.state = 484; 
        this.query_output();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Query_inputContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_query_input;
    return this;
}

Query_inputContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Query_inputContext.prototype.constructor = Query_inputContext;

Query_inputContext.prototype.standard_stream = function() {
    return this.getTypedRuleContext(Standard_streamContext,0);
};

Query_inputContext.prototype.join_stream = function() {
    return this.getTypedRuleContext(Join_streamContext,0);
};

Query_inputContext.prototype.pattern_stream = function() {
    return this.getTypedRuleContext(Pattern_streamContext,0);
};

Query_inputContext.prototype.sequence_stream = function() {
    return this.getTypedRuleContext(Sequence_streamContext,0);
};

Query_inputContext.prototype.anonymous_stream = function() {
    return this.getTypedRuleContext(Anonymous_streamContext,0);
};

Query_inputContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterQuery_input(this);
	}
};

Query_inputContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitQuery_input(this);
	}
};

Query_inputContext.prototype.accept = function(visitor) {
    if ( visitor instanceof SiddhiQLVisitor ) {
        return visitor.visitQuery_input(this);
    } else {
        return visitor.visitChildren(this);
    }
};




SiddhiQLParser.prototype.query_input = function() {

    var localctx = new Query_inputContext(this, this._ctx, this.state);
    this.enterRule(localctx, 46, SiddhiQLParser.RULE_query_input);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 491;
        var la_ = this._interp.adaptivePredict(this._input,43,this._ctx);
        switch(la_) {
        case 1:
            this.state = 486; 
            this.standard_stream();
            break;

        case 2:
            this.state = 487; 
            this.join_stream();
            break;

        case 3:
            this.state = 488; 
            this.pattern_stream();
            break;

        case 4:
            this.state = 489; 
            this.sequence_stream();
            break;

        case 5:
            this.state = 490; 
            this.anonymous_stream();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Standard_streamContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_standard_stream;
    this.pre_window_handlers = null; // Basic_source_stream_handlersContext
    this.post_window_handlers = null; // Basic_source_stream_handlersContext
    return this;
}

Standard_streamContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Standard_streamContext.prototype.constructor = Standard_streamContext;

Standard_streamContext.prototype.source = function() {
    return this.getTypedRuleContext(SourceContext,0);
};

Standard_streamContext.prototype.window = function() {
    return this.getTypedRuleContext(WindowContext,0);
};

Standard_streamContext.prototype.basic_source_stream_handlers = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Basic_source_stream_handlersContext);
    } else {
        return this.getTypedRuleContext(Basic_source_stream_handlersContext,i);
    }
};

Standard_streamContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterStandard_stream(this);
	}
};

Standard_streamContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitStandard_stream(this);
	}
};

Standard_streamContext.prototype.accept = function(visitor) {
    if ( visitor instanceof SiddhiQLVisitor ) {
        return visitor.visitStandard_stream(this);
    } else {
        return visitor.visitChildren(this);
    }
};




SiddhiQLParser.prototype.standard_stream = function() {

    var localctx = new Standard_streamContext(this, this._ctx, this.state);
    this.enterRule(localctx, 48, SiddhiQLParser.RULE_standard_stream);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 493; 
        this.source();
        this.state = 495;
        var la_ = this._interp.adaptivePredict(this._input,44,this._ctx);
        if(la_===1) {
            this.state = 494; 
            localctx.pre_window_handlers = this.basic_source_stream_handlers();

        }
        this.state = 498;
        var la_ = this._interp.adaptivePredict(this._input,45,this._ctx);
        if(la_===1) {
            this.state = 497; 
            this.window();

        }
        this.state = 501;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.OPEN_SQARE_BRACKETS || _la===SiddhiQLParser.HASH) {
            this.state = 500; 
            localctx.post_window_handlers = this.basic_source_stream_handlers();
        }

    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Join_streamContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_join_stream;
    this.left_source = null; // Join_sourceContext
    this.right_source = null; // Join_sourceContext
    this.right_unidirectional = null; // Token
    this.left_unidirectional = null; // Token
    return this;
}

Join_streamContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Join_streamContext.prototype.constructor = Join_streamContext;

Join_streamContext.prototype.join = function() {
    return this.getTypedRuleContext(JoinContext,0);
};

Join_streamContext.prototype.join_source = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Join_sourceContext);
    } else {
        return this.getTypedRuleContext(Join_sourceContext,i);
    }
};

Join_streamContext.prototype.UNIDIRECTIONAL = function() {
    return this.getToken(SiddhiQLParser.UNIDIRECTIONAL, 0);
};

Join_streamContext.prototype.ON = function() {
    return this.getToken(SiddhiQLParser.ON, 0);
};

Join_streamContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Join_streamContext.prototype.within_time = function() {
    return this.getTypedRuleContext(Within_timeContext,0);
};

Join_streamContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterJoin_stream(this);
	}
};

Join_streamContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitJoin_stream(this);
	}
};

Join_streamContext.prototype.accept = function(visitor) {
    if ( visitor instanceof SiddhiQLVisitor ) {
        return visitor.visitJoin_stream(this);
    } else {
        return visitor.visitChildren(this);
    }
};




SiddhiQLParser.prototype.join_stream = function() {

    var localctx = new Join_streamContext(this, this._ctx, this.state);
    this.enterRule(localctx, 50, SiddhiQLParser.RULE_join_stream);
    var _la = 0; // Token type
    try {
        this.state = 535;
        var la_ = this._interp.adaptivePredict(this._input,53,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 503; 
            localctx.left_source = this.join_source();
            this.state = 504; 
            this.join();
            this.state = 505; 
            localctx.right_source = this.join_source();
            this.state = 506;
            localctx.right_unidirectional = this.match(SiddhiQLParser.UNIDIRECTIONAL);
            this.state = 509;
            _la = this._input.LA(1);
            if(_la===SiddhiQLParser.ON) {
                this.state = 507;
                this.match(SiddhiQLParser.ON);
                this.state = 508; 
                this.expression();
            }

            this.state = 512;
            _la = this._input.LA(1);
            if(_la===SiddhiQLParser.WITHIN) {
                this.state = 511; 
                this.within_time();
            }

            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 514; 
            localctx.left_source = this.join_source();
            this.state = 515; 
            this.join();
            this.state = 516; 
            localctx.right_source = this.join_source();
            this.state = 519;
            _la = this._input.LA(1);
            if(_la===SiddhiQLParser.ON) {
                this.state = 517;
                this.match(SiddhiQLParser.ON);
                this.state = 518; 
                this.expression();
            }

            this.state = 522;
            _la = this._input.LA(1);
            if(_la===SiddhiQLParser.WITHIN) {
                this.state = 521; 
                this.within_time();
            }

            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 524; 
            localctx.left_source = this.join_source();
            this.state = 525;
            localctx.left_unidirectional = this.match(SiddhiQLParser.UNIDIRECTIONAL);
            this.state = 526; 
            this.join();
            this.state = 527; 
            localctx.right_source = this.join_source();
            this.state = 530;
            _la = this._input.LA(1);
            if(_la===SiddhiQLParser.ON) {
                this.state = 528;
                this.match(SiddhiQLParser.ON);
                this.state = 529; 
                this.expression();
            }

            this.state = 533;
            _la = this._input.LA(1);
            if(_la===SiddhiQLParser.WITHIN) {
                this.state = 532; 
                this.within_time();
            }

            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Join_sourceContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_join_source;
    return this;
}

Join_sourceContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Join_sourceContext.prototype.constructor = Join_sourceContext;

Join_sourceContext.prototype.source = function() {
    return this.getTypedRuleContext(SourceContext,0);
};

Join_sourceContext.prototype.basic_source_stream_handlers = function() {
    return this.getTypedRuleContext(Basic_source_stream_handlersContext,0);
};

Join_sourceContext.prototype.window = function() {
    return this.getTypedRuleContext(WindowContext,0);
};

Join_sourceContext.prototype.AS = function() {
    return this.getToken(SiddhiQLParser.AS, 0);
};

Join_sourceContext.prototype.stream_alias = function() {
    return this.getTypedRuleContext(Stream_aliasContext,0);
};

Join_sourceContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterJoin_source(this);
	}
};

Join_sourceContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitJoin_source(this);
	}
};

Join_sourceContext.prototype.accept = function(visitor) {
    if ( visitor instanceof SiddhiQLVisitor ) {
        return visitor.visitJoin_source(this);
    } else {
        return visitor.visitChildren(this);
    }
};




SiddhiQLParser.prototype.join_source = function() {

    var localctx = new Join_sourceContext(this, this._ctx, this.state);
    this.enterRule(localctx, 52, SiddhiQLParser.RULE_join_source);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 537; 
        this.source();
        this.state = 539;
        var la_ = this._interp.adaptivePredict(this._input,54,this._ctx);
        if(la_===1) {
            this.state = 538; 
            this.basic_source_stream_handlers();

        }
        this.state = 542;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.HASH) {
            this.state = 541; 
            this.window();
        }

        this.state = 546;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.AS) {
            this.state = 544;
            this.match(SiddhiQLParser.AS);
            this.state = 545; 
            this.stream_alias();
        }

    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Pattern_streamContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_pattern_stream;
    return this;
}

Pattern_streamContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Pattern_streamContext.prototype.constructor = Pattern_streamContext;

Pattern_streamContext.prototype.every_pattern_source_chain = function() {
    return this.getTypedRuleContext(Every_pattern_source_chainContext,0);
};

Pattern_streamContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterPattern_stream(this);
	}
};

Pattern_streamContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitPattern_stream(this);
	}
};

Pattern_streamContext.prototype.accept = function(visitor) {
    if ( visitor instanceof SiddhiQLVisitor ) {
        return visitor.visitPattern_stream(this);
    } else {
        return visitor.visitChildren(this);
    }
};




SiddhiQLParser.prototype.pattern_stream = function() {

    var localctx = new Pattern_streamContext(this, this._ctx, this.state);
    this.enterRule(localctx, 54, SiddhiQLParser.RULE_pattern_stream);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 548; 
        this.every_pattern_source_chain(0);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Every_pattern_source_chainContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_every_pattern_source_chain;
    return this;
}

Every_pattern_source_chainContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Every_pattern_source_chainContext.prototype.constructor = Every_pattern_source_chainContext;

Every_pattern_source_chainContext.prototype.every_pattern_source_chain = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Every_pattern_source_chainContext);
    } else {
        return this.getTypedRuleContext(Every_pattern_source_chainContext,i);
    }
};

Every_pattern_source_chainContext.prototype.within_time = function() {
    return this.getTypedRuleContext(Within_timeContext,0);
};

Every_pattern_source_chainContext.prototype.EVERY = function() {
    return this.getToken(SiddhiQLParser.EVERY, 0);
};

Every_pattern_source_chainContext.prototype.pattern_source_chain = function() {
    return this.getTypedRuleContext(Pattern_source_chainContext,0);
};

Every_pattern_source_chainContext.prototype.pattern_source = function() {
    return this.getTypedRuleContext(Pattern_sourceContext,0);
};

Every_pattern_source_chainContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterEvery_pattern_source_chain(this);
	}
};

Every_pattern_source_chainContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitEvery_pattern_source_chain(this);
	}
};

Every_pattern_source_chainContext.prototype.accept = function(visitor) {
    if ( visitor instanceof SiddhiQLVisitor ) {
        return visitor.visitEvery_pattern_source_chain(this);
    } else {
        return visitor.visitChildren(this);
    }
};



SiddhiQLParser.prototype.every_pattern_source_chain = function(_p) {
	if(_p===undefined) {
	    _p = 0;
	}
    var _parentctx = this._ctx;
    var _parentState = this.state;
    var localctx = new Every_pattern_source_chainContext(this, this._ctx, _parentState);
    var _prevctx = localctx;
    var _startState = 56;
    this.enterRecursionRule(localctx, 56, SiddhiQLParser.RULE_every_pattern_source_chain, _p);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 570;
        var la_ = this._interp.adaptivePredict(this._input,60,this._ctx);
        switch(la_) {
        case 1:
            this.state = 551;
            this.match(SiddhiQLParser.OPEN_PAR);
            this.state = 552; 
            this.every_pattern_source_chain(0);
            this.state = 553;
            this.match(SiddhiQLParser.CLOSE_PAR);
            this.state = 555;
            var la_ = this._interp.adaptivePredict(this._input,57,this._ctx);
            if(la_===1) {
                this.state = 554; 
                this.within_time();

            }
            break;

        case 2:
            this.state = 557;
            this.match(SiddhiQLParser.EVERY);
            this.state = 558;
            this.match(SiddhiQLParser.OPEN_PAR);
            this.state = 559; 
            this.pattern_source_chain(0);
            this.state = 560;
            this.match(SiddhiQLParser.CLOSE_PAR);
            this.state = 562;
            var la_ = this._interp.adaptivePredict(this._input,58,this._ctx);
            if(la_===1) {
                this.state = 561; 
                this.within_time();

            }
            break;

        case 3:
            this.state = 564; 
            this.pattern_source_chain(0);
            break;

        case 4:
            this.state = 565;
            this.match(SiddhiQLParser.EVERY);
            this.state = 566; 
            this.pattern_source();
            this.state = 568;
            var la_ = this._interp.adaptivePredict(this._input,59,this._ctx);
            if(la_===1) {
                this.state = 567; 
                this.within_time();

            }
            break;

        }
        this._ctx.stop = this._input.LT(-1);
        this.state = 577;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,61,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                if(this._parseListeners!==null) {
                    this.triggerExitRuleEvent();
                }
                _prevctx = localctx;
                localctx = new Every_pattern_source_chainContext(this, _parentctx, _parentState);
                this.pushNewRecursionContext(localctx, _startState, SiddhiQLParser.RULE_every_pattern_source_chain);
                this.state = 572;
                if (!( this.precpred(this._ctx, 3))) {
                    throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 3)");
                }
                this.state = 573;
                this.match(SiddhiQLParser.FOLLOWED_BY);
                this.state = 574; 
                this.every_pattern_source_chain(4); 
            }
            this.state = 579;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,61,this._ctx);
        }

    } catch( error) {
        if(error instanceof antlr4.error.RecognitionException) {
	        localctx.exception = error;
	        this._errHandler.reportError(this, error);
	        this._errHandler.recover(this, error);
	    } else {
	    	throw error;
	    }
    } finally {
        this.unrollRecursionContexts(_parentctx)
    }
    return localctx;
};

function Pattern_source_chainContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_pattern_source_chain;
    return this;
}

Pattern_source_chainContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Pattern_source_chainContext.prototype.constructor = Pattern_source_chainContext;

Pattern_source_chainContext.prototype.pattern_source_chain = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Pattern_source_chainContext);
    } else {
        return this.getTypedRuleContext(Pattern_source_chainContext,i);
    }
};

Pattern_source_chainContext.prototype.within_time = function() {
    return this.getTypedRuleContext(Within_timeContext,0);
};

Pattern_source_chainContext.prototype.pattern_source = function() {
    return this.getTypedRuleContext(Pattern_sourceContext,0);
};

Pattern_source_chainContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterPattern_source_chain(this);
	}
};

Pattern_source_chainContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitPattern_source_chain(this);
	}
};

Pattern_source_chainContext.prototype.accept = function(visitor) {
    if ( visitor instanceof SiddhiQLVisitor ) {
        return visitor.visitPattern_source_chain(this);
    } else {
        return visitor.visitChildren(this);
    }
};



SiddhiQLParser.prototype.pattern_source_chain = function(_p) {
	if(_p===undefined) {
	    _p = 0;
	}
    var _parentctx = this._ctx;
    var _parentState = this.state;
    var localctx = new Pattern_source_chainContext(this, this._ctx, _parentState);
    var _prevctx = localctx;
    var _startState = 58;
    this.enterRecursionRule(localctx, 58, SiddhiQLParser.RULE_pattern_source_chain, _p);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 591;
        switch(this._input.LA(1)) {
        case SiddhiQLParser.OPEN_PAR:
            this.state = 581;
            this.match(SiddhiQLParser.OPEN_PAR);
            this.state = 582; 
            this.pattern_source_chain(0);
            this.state = 583;
            this.match(SiddhiQLParser.CLOSE_PAR);
            this.state = 585;
            var la_ = this._interp.adaptivePredict(this._input,62,this._ctx);
            if(la_===1) {
                this.state = 584; 
                this.within_time();

            }
            break;
        case SiddhiQLParser.HASH:
        case SiddhiQLParser.STREAM:
        case SiddhiQLParser.DEFINE:
        case SiddhiQLParser.TABLE:
        case SiddhiQLParser.FROM:
        case SiddhiQLParser.PARTITION:
        case SiddhiQLParser.WINDOW:
        case SiddhiQLParser.SELECT:
        case SiddhiQLParser.GROUP:
        case SiddhiQLParser.BY:
        case SiddhiQLParser.HAVING:
        case SiddhiQLParser.INSERT:
        case SiddhiQLParser.DELETE:
        case SiddhiQLParser.UPDATE:
        case SiddhiQLParser.RETURN:
        case SiddhiQLParser.EVENTS:
        case SiddhiQLParser.INTO:
        case SiddhiQLParser.OUTPUT:
        case SiddhiQLParser.EXPIRED:
        case SiddhiQLParser.CURRENT:
        case SiddhiQLParser.SNAPSHOT:
        case SiddhiQLParser.FOR:
        case SiddhiQLParser.RAW:
        case SiddhiQLParser.OF:
        case SiddhiQLParser.AS:
        case SiddhiQLParser.OR:
        case SiddhiQLParser.AND:
        case SiddhiQLParser.ON:
        case SiddhiQLParser.IS:
        case SiddhiQLParser.NOT:
        case SiddhiQLParser.WITHIN:
        case SiddhiQLParser.WITH:
        case SiddhiQLParser.BEGIN:
        case SiddhiQLParser.END:
        case SiddhiQLParser.NULL:
        case SiddhiQLParser.EVERY:
        case SiddhiQLParser.LAST:
        case SiddhiQLParser.ALL:
        case SiddhiQLParser.FIRST:
        case SiddhiQLParser.JOIN:
        case SiddhiQLParser.INNER:
        case SiddhiQLParser.OUTER:
        case SiddhiQLParser.RIGHT:
        case SiddhiQLParser.LEFT:
        case SiddhiQLParser.FULL:
        case SiddhiQLParser.UNIDIRECTIONAL:
        case SiddhiQLParser.YEARS:
        case SiddhiQLParser.MONTHS:
        case SiddhiQLParser.WEEKS:
        case SiddhiQLParser.DAYS:
        case SiddhiQLParser.HOURS:
        case SiddhiQLParser.MINUTES:
        case SiddhiQLParser.SECONDS:
        case SiddhiQLParser.MILLISECONDS:
        case SiddhiQLParser.FALSE:
        case SiddhiQLParser.TRUE:
        case SiddhiQLParser.STRING:
        case SiddhiQLParser.INT:
        case SiddhiQLParser.LONG:
        case SiddhiQLParser.FLOAT:
        case SiddhiQLParser.DOUBLE:
        case SiddhiQLParser.BOOL:
        case SiddhiQLParser.OBJECT:
        case SiddhiQLParser.ID_QUOTES:
        case SiddhiQLParser.ID:
            this.state = 587; 
            this.pattern_source();
            this.state = 589;
            var la_ = this._interp.adaptivePredict(this._input,63,this._ctx);
            if(la_===1) {
                this.state = 588; 
                this.within_time();

            }
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
        this._ctx.stop = this._input.LT(-1);
        this.state = 598;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,65,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                if(this._parseListeners!==null) {
                    this.triggerExitRuleEvent();
                }
                _prevctx = localctx;
                localctx = new Pattern_source_chainContext(this, _parentctx, _parentState);
                this.pushNewRecursionContext(localctx, _startState, SiddhiQLParser.RULE_pattern_source_chain);
                this.state = 593;
                if (!( this.precpred(this._ctx, 2))) {
                    throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 2)");
                }
                this.state = 594;
                this.match(SiddhiQLParser.FOLLOWED_BY);
                this.state = 595; 
                this.pattern_source_chain(3); 
            }
            this.state = 600;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,65,this._ctx);
        }

    } catch( error) {
        if(error instanceof antlr4.error.RecognitionException) {
	        localctx.exception = error;
	        this._errHandler.reportError(this, error);
	        this._errHandler.recover(this, error);
	    } else {
	    	throw error;
	    }
    } finally {
        this.unrollRecursionContexts(_parentctx)
    }
    return localctx;
};

function Pattern_sourceContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_pattern_source;
    return this;
}

Pattern_sourceContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Pattern_sourceContext.prototype.constructor = Pattern_sourceContext;

Pattern_sourceContext.prototype.logical_stateful_source = function() {
    return this.getTypedRuleContext(Logical_stateful_sourceContext,0);
};

Pattern_sourceContext.prototype.pattern_collection_stateful_source = function() {
    return this.getTypedRuleContext(Pattern_collection_stateful_sourceContext,0);
};

Pattern_sourceContext.prototype.standard_stateful_source = function() {
    return this.getTypedRuleContext(Standard_stateful_sourceContext,0);
};

Pattern_sourceContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterPattern_source(this);
	}
};

Pattern_sourceContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitPattern_source(this);
	}
};

Pattern_sourceContext.prototype.accept = function(visitor) {
    if ( visitor instanceof SiddhiQLVisitor ) {
        return visitor.visitPattern_source(this);
    } else {
        return visitor.visitChildren(this);
    }
};




SiddhiQLParser.prototype.pattern_source = function() {

    var localctx = new Pattern_sourceContext(this, this._ctx, this.state);
    this.enterRule(localctx, 60, SiddhiQLParser.RULE_pattern_source);
    try {
        this.state = 604;
        var la_ = this._interp.adaptivePredict(this._input,66,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 601; 
            this.logical_stateful_source();
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 602; 
            this.pattern_collection_stateful_source();
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 603; 
            this.standard_stateful_source();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Logical_stateful_sourceContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_logical_stateful_source;
    return this;
}

Logical_stateful_sourceContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Logical_stateful_sourceContext.prototype.constructor = Logical_stateful_sourceContext;

Logical_stateful_sourceContext.prototype.NOT = function() {
    return this.getToken(SiddhiQLParser.NOT, 0);
};

Logical_stateful_sourceContext.prototype.standard_stateful_source = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Standard_stateful_sourceContext);
    } else {
        return this.getTypedRuleContext(Standard_stateful_sourceContext,i);
    }
};

Logical_stateful_sourceContext.prototype.AND = function() {
    return this.getToken(SiddhiQLParser.AND, 0);
};

Logical_stateful_sourceContext.prototype.OR = function() {
    return this.getToken(SiddhiQLParser.OR, 0);
};

Logical_stateful_sourceContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterLogical_stateful_source(this);
	}
};

Logical_stateful_sourceContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitLogical_stateful_source(this);
	}
};

Logical_stateful_sourceContext.prototype.accept = function(visitor) {
    if ( visitor instanceof SiddhiQLVisitor ) {
        return visitor.visitLogical_stateful_source(this);
    } else {
        return visitor.visitChildren(this);
    }
};




SiddhiQLParser.prototype.logical_stateful_source = function() {

    var localctx = new Logical_stateful_sourceContext(this, this._ctx, this.state);
    this.enterRule(localctx, 62, SiddhiQLParser.RULE_logical_stateful_source);
    try {
        this.state = 620;
        var la_ = this._interp.adaptivePredict(this._input,68,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 606;
            this.match(SiddhiQLParser.NOT);
            this.state = 607; 
            this.standard_stateful_source();
            this.state = 610;
            var la_ = this._interp.adaptivePredict(this._input,67,this._ctx);
            if(la_===1) {
                this.state = 608;
                this.match(SiddhiQLParser.AND);
                this.state = 609; 
                this.standard_stateful_source();

            }
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 612; 
            this.standard_stateful_source();
            this.state = 613;
            this.match(SiddhiQLParser.AND);
            this.state = 614; 
            this.standard_stateful_source();
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 616; 
            this.standard_stateful_source();
            this.state = 617;
            this.match(SiddhiQLParser.OR);
            this.state = 618; 
            this.standard_stateful_source();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Pattern_collection_stateful_sourceContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_pattern_collection_stateful_source;
    return this;
}

Pattern_collection_stateful_sourceContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Pattern_collection_stateful_sourceContext.prototype.constructor = Pattern_collection_stateful_sourceContext;

Pattern_collection_stateful_sourceContext.prototype.standard_stateful_source = function() {
    return this.getTypedRuleContext(Standard_stateful_sourceContext,0);
};

Pattern_collection_stateful_sourceContext.prototype.collect = function() {
    return this.getTypedRuleContext(CollectContext,0);
};

Pattern_collection_stateful_sourceContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterPattern_collection_stateful_source(this);
	}
};

Pattern_collection_stateful_sourceContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitPattern_collection_stateful_source(this);
	}
};

Pattern_collection_stateful_sourceContext.prototype.accept = function(visitor) {
    if ( visitor instanceof SiddhiQLVisitor ) {
        return visitor.visitPattern_collection_stateful_source(this);
    } else {
        return visitor.visitChildren(this);
    }
};




SiddhiQLParser.prototype.pattern_collection_stateful_source = function() {

    var localctx = new Pattern_collection_stateful_sourceContext(this, this._ctx, this.state);
    this.enterRule(localctx, 64, SiddhiQLParser.RULE_pattern_collection_stateful_source);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 622; 
        this.standard_stateful_source();
        this.state = 623;
        this.match(SiddhiQLParser.LT);
        this.state = 624; 
        this.collect();
        this.state = 625;
        this.match(SiddhiQLParser.GT);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Standard_stateful_sourceContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_standard_stateful_source;
    return this;
}

Standard_stateful_sourceContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Standard_stateful_sourceContext.prototype.constructor = Standard_stateful_sourceContext;

Standard_stateful_sourceContext.prototype.basic_source = function() {
    return this.getTypedRuleContext(Basic_sourceContext,0);
};

Standard_stateful_sourceContext.prototype.event = function() {
    return this.getTypedRuleContext(EventContext,0);
};

Standard_stateful_sourceContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterStandard_stateful_source(this);
	}
};

Standard_stateful_sourceContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitStandard_stateful_source(this);
	}
};

Standard_stateful_sourceContext.prototype.accept = function(visitor) {
    if ( visitor instanceof SiddhiQLVisitor ) {
        return visitor.visitStandard_stateful_source(this);
    } else {
        return visitor.visitChildren(this);
    }
};




SiddhiQLParser.prototype.standard_stateful_source = function() {

    var localctx = new Standard_stateful_sourceContext(this, this._ctx, this.state);
    this.enterRule(localctx, 66, SiddhiQLParser.RULE_standard_stateful_source);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 630;
        var la_ = this._interp.adaptivePredict(this._input,69,this._ctx);
        if(la_===1) {
            this.state = 627; 
            this.event();
            this.state = 628;
            this.match(SiddhiQLParser.ASSIGN);

        }
        this.state = 632; 
        this.basic_source();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Basic_sourceContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_basic_source;
    return this;
}

Basic_sourceContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Basic_sourceContext.prototype.constructor = Basic_sourceContext;

Basic_sourceContext.prototype.source = function() {
    return this.getTypedRuleContext(SourceContext,0);
};

Basic_sourceContext.prototype.basic_source_stream_handlers = function() {
    return this.getTypedRuleContext(Basic_source_stream_handlersContext,0);
};

Basic_sourceContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterBasic_source(this);
	}
};

Basic_sourceContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitBasic_source(this);
	}
};

Basic_sourceContext.prototype.accept = function(visitor) {
    if ( visitor instanceof SiddhiQLVisitor ) {
        return visitor.visitBasic_source(this);
    } else {
        return visitor.visitChildren(this);
    }
};




SiddhiQLParser.prototype.basic_source = function() {

    var localctx = new Basic_sourceContext(this, this._ctx, this.state);
    this.enterRule(localctx, 68, SiddhiQLParser.RULE_basic_source);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 634; 
        this.source();
        this.state = 636;
        var la_ = this._interp.adaptivePredict(this._input,70,this._ctx);
        if(la_===1) {
            this.state = 635; 
            this.basic_source_stream_handlers();

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Basic_source_stream_handlersContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_basic_source_stream_handlers;
    return this;
}

Basic_source_stream_handlersContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Basic_source_stream_handlersContext.prototype.constructor = Basic_source_stream_handlersContext;

Basic_source_stream_handlersContext.prototype.basic_source_stream_handler = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Basic_source_stream_handlerContext);
    } else {
        return this.getTypedRuleContext(Basic_source_stream_handlerContext,i);
    }
};

Basic_source_stream_handlersContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterBasic_source_stream_handlers(this);
	}
};

Basic_source_stream_handlersContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitBasic_source_stream_handlers(this);
	}
};

Basic_source_stream_handlersContext.prototype.accept = function(visitor) {
    if ( visitor instanceof SiddhiQLVisitor ) {
        return visitor.visitBasic_source_stream_handlers(this);
    } else {
        return visitor.visitChildren(this);
    }
};




SiddhiQLParser.prototype.basic_source_stream_handlers = function() {

    var localctx = new Basic_source_stream_handlersContext(this, this._ctx, this.state);
    this.enterRule(localctx, 70, SiddhiQLParser.RULE_basic_source_stream_handlers);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 639; 
        this._errHandler.sync(this);
        var _alt = 1;
        do {
        	switch (_alt) {
        	case 1:
        		this.state = 638; 
        		this.basic_source_stream_handler();
        		break;
        	default:
        		throw new antlr4.error.NoViableAltException(this);
        	}
        	this.state = 641; 
        	this._errHandler.sync(this);
        	_alt = this._interp.adaptivePredict(this._input,71, this._ctx);
        } while ( _alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER );
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Basic_source_stream_handlerContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_basic_source_stream_handler;
    return this;
}

Basic_source_stream_handlerContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Basic_source_stream_handlerContext.prototype.constructor = Basic_source_stream_handlerContext;

Basic_source_stream_handlerContext.prototype.filter = function() {
    return this.getTypedRuleContext(FilterContext,0);
};

Basic_source_stream_handlerContext.prototype.stream_function = function() {
    return this.getTypedRuleContext(Stream_functionContext,0);
};

Basic_source_stream_handlerContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterBasic_source_stream_handler(this);
	}
};

Basic_source_stream_handlerContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitBasic_source_stream_handler(this);
	}
};

Basic_source_stream_handlerContext.prototype.accept = function(visitor) {
    if ( visitor instanceof SiddhiQLVisitor ) {
        return visitor.visitBasic_source_stream_handler(this);
    } else {
        return visitor.visitChildren(this);
    }
};




SiddhiQLParser.prototype.basic_source_stream_handler = function() {

    var localctx = new Basic_source_stream_handlerContext(this, this._ctx, this.state);
    this.enterRule(localctx, 72, SiddhiQLParser.RULE_basic_source_stream_handler);
    try {
        this.state = 645;
        var la_ = this._interp.adaptivePredict(this._input,72,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 643; 
            this.filter();
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 644; 
            this.stream_function();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Sequence_streamContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_sequence_stream;
    return this;
}

Sequence_streamContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Sequence_streamContext.prototype.constructor = Sequence_streamContext;

Sequence_streamContext.prototype.sequence_source = function() {
    return this.getTypedRuleContext(Sequence_sourceContext,0);
};

Sequence_streamContext.prototype.sequence_source_chain = function() {
    return this.getTypedRuleContext(Sequence_source_chainContext,0);
};

Sequence_streamContext.prototype.EVERY = function() {
    return this.getToken(SiddhiQLParser.EVERY, 0);
};

Sequence_streamContext.prototype.within_time = function() {
    return this.getTypedRuleContext(Within_timeContext,0);
};

Sequence_streamContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterSequence_stream(this);
	}
};

Sequence_streamContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitSequence_stream(this);
	}
};

Sequence_streamContext.prototype.accept = function(visitor) {
    if ( visitor instanceof SiddhiQLVisitor ) {
        return visitor.visitSequence_stream(this);
    } else {
        return visitor.visitChildren(this);
    }
};




SiddhiQLParser.prototype.sequence_stream = function() {

    var localctx = new Sequence_streamContext(this, this._ctx, this.state);
    this.enterRule(localctx, 74, SiddhiQLParser.RULE_sequence_stream);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 648;
        var la_ = this._interp.adaptivePredict(this._input,73,this._ctx);
        if(la_===1) {
            this.state = 647;
            this.match(SiddhiQLParser.EVERY);

        }
        this.state = 650; 
        this.sequence_source();
        this.state = 652;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.WITHIN) {
            this.state = 651; 
            this.within_time();
        }

        this.state = 654;
        this.match(SiddhiQLParser.COMMA);
        this.state = 655; 
        this.sequence_source_chain(0);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Sequence_source_chainContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_sequence_source_chain;
    return this;
}

Sequence_source_chainContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Sequence_source_chainContext.prototype.constructor = Sequence_source_chainContext;

Sequence_source_chainContext.prototype.sequence_source_chain = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Sequence_source_chainContext);
    } else {
        return this.getTypedRuleContext(Sequence_source_chainContext,i);
    }
};

Sequence_source_chainContext.prototype.within_time = function() {
    return this.getTypedRuleContext(Within_timeContext,0);
};

Sequence_source_chainContext.prototype.sequence_source = function() {
    return this.getTypedRuleContext(Sequence_sourceContext,0);
};

Sequence_source_chainContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterSequence_source_chain(this);
	}
};

Sequence_source_chainContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitSequence_source_chain(this);
	}
};

Sequence_source_chainContext.prototype.accept = function(visitor) {
    if ( visitor instanceof SiddhiQLVisitor ) {
        return visitor.visitSequence_source_chain(this);
    } else {
        return visitor.visitChildren(this);
    }
};



SiddhiQLParser.prototype.sequence_source_chain = function(_p) {
	if(_p===undefined) {
	    _p = 0;
	}
    var _parentctx = this._ctx;
    var _parentState = this.state;
    var localctx = new Sequence_source_chainContext(this, this._ctx, _parentState);
    var _prevctx = localctx;
    var _startState = 76;
    this.enterRecursionRule(localctx, 76, SiddhiQLParser.RULE_sequence_source_chain, _p);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 668;
        switch(this._input.LA(1)) {
        case SiddhiQLParser.OPEN_PAR:
            this.state = 658;
            this.match(SiddhiQLParser.OPEN_PAR);
            this.state = 659; 
            this.sequence_source_chain(0);
            this.state = 660;
            this.match(SiddhiQLParser.CLOSE_PAR);
            this.state = 662;
            var la_ = this._interp.adaptivePredict(this._input,75,this._ctx);
            if(la_===1) {
                this.state = 661; 
                this.within_time();

            }
            break;
        case SiddhiQLParser.HASH:
        case SiddhiQLParser.STREAM:
        case SiddhiQLParser.DEFINE:
        case SiddhiQLParser.TABLE:
        case SiddhiQLParser.FROM:
        case SiddhiQLParser.PARTITION:
        case SiddhiQLParser.WINDOW:
        case SiddhiQLParser.SELECT:
        case SiddhiQLParser.GROUP:
        case SiddhiQLParser.BY:
        case SiddhiQLParser.HAVING:
        case SiddhiQLParser.INSERT:
        case SiddhiQLParser.DELETE:
        case SiddhiQLParser.UPDATE:
        case SiddhiQLParser.RETURN:
        case SiddhiQLParser.EVENTS:
        case SiddhiQLParser.INTO:
        case SiddhiQLParser.OUTPUT:
        case SiddhiQLParser.EXPIRED:
        case SiddhiQLParser.CURRENT:
        case SiddhiQLParser.SNAPSHOT:
        case SiddhiQLParser.FOR:
        case SiddhiQLParser.RAW:
        case SiddhiQLParser.OF:
        case SiddhiQLParser.AS:
        case SiddhiQLParser.OR:
        case SiddhiQLParser.AND:
        case SiddhiQLParser.ON:
        case SiddhiQLParser.IS:
        case SiddhiQLParser.NOT:
        case SiddhiQLParser.WITHIN:
        case SiddhiQLParser.WITH:
        case SiddhiQLParser.BEGIN:
        case SiddhiQLParser.END:
        case SiddhiQLParser.NULL:
        case SiddhiQLParser.EVERY:
        case SiddhiQLParser.LAST:
        case SiddhiQLParser.ALL:
        case SiddhiQLParser.FIRST:
        case SiddhiQLParser.JOIN:
        case SiddhiQLParser.INNER:
        case SiddhiQLParser.OUTER:
        case SiddhiQLParser.RIGHT:
        case SiddhiQLParser.LEFT:
        case SiddhiQLParser.FULL:
        case SiddhiQLParser.UNIDIRECTIONAL:
        case SiddhiQLParser.YEARS:
        case SiddhiQLParser.MONTHS:
        case SiddhiQLParser.WEEKS:
        case SiddhiQLParser.DAYS:
        case SiddhiQLParser.HOURS:
        case SiddhiQLParser.MINUTES:
        case SiddhiQLParser.SECONDS:
        case SiddhiQLParser.MILLISECONDS:
        case SiddhiQLParser.FALSE:
        case SiddhiQLParser.TRUE:
        case SiddhiQLParser.STRING:
        case SiddhiQLParser.INT:
        case SiddhiQLParser.LONG:
        case SiddhiQLParser.FLOAT:
        case SiddhiQLParser.DOUBLE:
        case SiddhiQLParser.BOOL:
        case SiddhiQLParser.OBJECT:
        case SiddhiQLParser.ID_QUOTES:
        case SiddhiQLParser.ID:
            this.state = 664; 
            this.sequence_source();
            this.state = 666;
            var la_ = this._interp.adaptivePredict(this._input,76,this._ctx);
            if(la_===1) {
                this.state = 665; 
                this.within_time();

            }
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
        this._ctx.stop = this._input.LT(-1);
        this.state = 675;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,78,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                if(this._parseListeners!==null) {
                    this.triggerExitRuleEvent();
                }
                _prevctx = localctx;
                localctx = new Sequence_source_chainContext(this, _parentctx, _parentState);
                this.pushNewRecursionContext(localctx, _startState, SiddhiQLParser.RULE_sequence_source_chain);
                this.state = 670;
                if (!( this.precpred(this._ctx, 2))) {
                    throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 2)");
                }
                this.state = 671;
                this.match(SiddhiQLParser.COMMA);
                this.state = 672; 
                this.sequence_source_chain(3); 
            }
            this.state = 677;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,78,this._ctx);
        }

    } catch( error) {
        if(error instanceof antlr4.error.RecognitionException) {
	        localctx.exception = error;
	        this._errHandler.reportError(this, error);
	        this._errHandler.recover(this, error);
	    } else {
	    	throw error;
	    }
    } finally {
        this.unrollRecursionContexts(_parentctx)
    }
    return localctx;
};

function Sequence_sourceContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_sequence_source;
    return this;
}

Sequence_sourceContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Sequence_sourceContext.prototype.constructor = Sequence_sourceContext;

Sequence_sourceContext.prototype.logical_stateful_source = function() {
    return this.getTypedRuleContext(Logical_stateful_sourceContext,0);
};

Sequence_sourceContext.prototype.sequence_collection_stateful_source = function() {
    return this.getTypedRuleContext(Sequence_collection_stateful_sourceContext,0);
};

Sequence_sourceContext.prototype.standard_stateful_source = function() {
    return this.getTypedRuleContext(Standard_stateful_sourceContext,0);
};

Sequence_sourceContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterSequence_source(this);
	}
};

Sequence_sourceContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitSequence_source(this);
	}
};

Sequence_sourceContext.prototype.accept = function(visitor) {
    if ( visitor instanceof SiddhiQLVisitor ) {
        return visitor.visitSequence_source(this);
    } else {
        return visitor.visitChildren(this);
    }
};




SiddhiQLParser.prototype.sequence_source = function() {

    var localctx = new Sequence_sourceContext(this, this._ctx, this.state);
    this.enterRule(localctx, 78, SiddhiQLParser.RULE_sequence_source);
    try {
        this.state = 681;
        var la_ = this._interp.adaptivePredict(this._input,79,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 678; 
            this.logical_stateful_source();
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 679; 
            this.sequence_collection_stateful_source();
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 680; 
            this.standard_stateful_source();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Sequence_collection_stateful_sourceContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_sequence_collection_stateful_source;
    this.zero_or_more = null; // Token
    this.zero_or_one = null; // Token
    this.one_or_more = null; // Token
    return this;
}

Sequence_collection_stateful_sourceContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Sequence_collection_stateful_sourceContext.prototype.constructor = Sequence_collection_stateful_sourceContext;

Sequence_collection_stateful_sourceContext.prototype.standard_stateful_source = function() {
    return this.getTypedRuleContext(Standard_stateful_sourceContext,0);
};

Sequence_collection_stateful_sourceContext.prototype.collect = function() {
    return this.getTypedRuleContext(CollectContext,0);
};

Sequence_collection_stateful_sourceContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterSequence_collection_stateful_source(this);
	}
};

Sequence_collection_stateful_sourceContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitSequence_collection_stateful_source(this);
	}
};

Sequence_collection_stateful_sourceContext.prototype.accept = function(visitor) {
    if ( visitor instanceof SiddhiQLVisitor ) {
        return visitor.visitSequence_collection_stateful_source(this);
    } else {
        return visitor.visitChildren(this);
    }
};




SiddhiQLParser.prototype.sequence_collection_stateful_source = function() {

    var localctx = new Sequence_collection_stateful_sourceContext(this, this._ctx, this.state);
    this.enterRule(localctx, 80, SiddhiQLParser.RULE_sequence_collection_stateful_source);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 683; 
        this.standard_stateful_source();
        this.state = 691;
        switch(this._input.LA(1)) {
        case SiddhiQLParser.LT:
            this.state = 684;
            this.match(SiddhiQLParser.LT);
            this.state = 685; 
            this.collect();
            this.state = 686;
            this.match(SiddhiQLParser.GT);
            break;
        case SiddhiQLParser.STAR:
            this.state = 688;
            localctx.zero_or_more = this.match(SiddhiQLParser.STAR);
            break;
        case SiddhiQLParser.QUESTION:
            this.state = 689;
            localctx.zero_or_one = this.match(SiddhiQLParser.QUESTION);
            break;
        case SiddhiQLParser.PLUS:
            this.state = 690;
            localctx.one_or_more = this.match(SiddhiQLParser.PLUS);
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Anonymous_streamContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_anonymous_stream;
    return this;
}

Anonymous_streamContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Anonymous_streamContext.prototype.constructor = Anonymous_streamContext;

Anonymous_streamContext.prototype.anonymous_stream = function() {
    return this.getTypedRuleContext(Anonymous_streamContext,0);
};

Anonymous_streamContext.prototype.FROM = function() {
    return this.getToken(SiddhiQLParser.FROM, 0);
};

Anonymous_streamContext.prototype.query_input = function() {
    return this.getTypedRuleContext(Query_inputContext,0);
};

Anonymous_streamContext.prototype.RETURN = function() {
    return this.getToken(SiddhiQLParser.RETURN, 0);
};

Anonymous_streamContext.prototype.query_section = function() {
    return this.getTypedRuleContext(Query_sectionContext,0);
};

Anonymous_streamContext.prototype.output_rate = function() {
    return this.getTypedRuleContext(Output_rateContext,0);
};

Anonymous_streamContext.prototype.output_event_type = function() {
    return this.getTypedRuleContext(Output_event_typeContext,0);
};

Anonymous_streamContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterAnonymous_stream(this);
	}
};

Anonymous_streamContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitAnonymous_stream(this);
	}
};

Anonymous_streamContext.prototype.accept = function(visitor) {
    if ( visitor instanceof SiddhiQLVisitor ) {
        return visitor.visitAnonymous_stream(this);
    } else {
        return visitor.visitChildren(this);
    }
};




SiddhiQLParser.prototype.anonymous_stream = function() {

    var localctx = new Anonymous_streamContext(this, this._ctx, this.state);
    this.enterRule(localctx, 82, SiddhiQLParser.RULE_anonymous_stream);
    var _la = 0; // Token type
    try {
        this.state = 709;
        switch(this._input.LA(1)) {
        case SiddhiQLParser.OPEN_PAR:
            this.enterOuterAlt(localctx, 1);
            this.state = 693;
            this.match(SiddhiQLParser.OPEN_PAR);
            this.state = 694; 
            this.anonymous_stream();
            this.state = 695;
            this.match(SiddhiQLParser.CLOSE_PAR);
            break;
        case SiddhiQLParser.FROM:
            this.enterOuterAlt(localctx, 2);
            this.state = 697;
            this.match(SiddhiQLParser.FROM);
            this.state = 698; 
            this.query_input();
            this.state = 700;
            _la = this._input.LA(1);
            if(_la===SiddhiQLParser.SELECT) {
                this.state = 699; 
                this.query_section();
            }

            this.state = 703;
            _la = this._input.LA(1);
            if(_la===SiddhiQLParser.OUTPUT) {
                this.state = 702; 
                this.output_rate();
            }

            this.state = 705;
            this.match(SiddhiQLParser.RETURN);
            this.state = 707;
            _la = this._input.LA(1);
            if(((((_la - 45)) & ~0x1f) == 0 && ((1 << (_la - 45)) & ((1 << (SiddhiQLParser.EVENTS - 45)) | (1 << (SiddhiQLParser.EXPIRED - 45)) | (1 << (SiddhiQLParser.CURRENT - 45)) | (1 << (SiddhiQLParser.ALL - 45)))) !== 0)) {
                this.state = 706; 
                this.output_event_type();
            }

            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function FilterContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_filter;
    return this;
}

FilterContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
FilterContext.prototype.constructor = FilterContext;

FilterContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

FilterContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterFilter(this);
	}
};

FilterContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitFilter(this);
	}
};

FilterContext.prototype.accept = function(visitor) {
    if ( visitor instanceof SiddhiQLVisitor ) {
        return visitor.visitFilter(this);
    } else {
        return visitor.visitChildren(this);
    }
};




SiddhiQLParser.prototype.filter = function() {

    var localctx = new FilterContext(this, this._ctx, this.state);
    this.enterRule(localctx, 84, SiddhiQLParser.RULE_filter);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 712;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.HASH) {
            this.state = 711;
            this.match(SiddhiQLParser.HASH);
        }

        this.state = 714;
        this.match(SiddhiQLParser.OPEN_SQARE_BRACKETS);
        this.state = 715; 
        this.expression();
        this.state = 716;
        this.match(SiddhiQLParser.CLOASE_SQARE_BRACKETS);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Stream_functionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_stream_function;
    return this;
}

Stream_functionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Stream_functionContext.prototype.constructor = Stream_functionContext;

Stream_functionContext.prototype.function_operation = function() {
    return this.getTypedRuleContext(Function_operationContext,0);
};

Stream_functionContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterStream_function(this);
	}
};

Stream_functionContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitStream_function(this);
	}
};

Stream_functionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof SiddhiQLVisitor ) {
        return visitor.visitStream_function(this);
    } else {
        return visitor.visitChildren(this);
    }
};




SiddhiQLParser.prototype.stream_function = function() {

    var localctx = new Stream_functionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 86, SiddhiQLParser.RULE_stream_function);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 718;
        this.match(SiddhiQLParser.HASH);
        this.state = 719; 
        this.function_operation();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function WindowContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_window;
    return this;
}

WindowContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
WindowContext.prototype.constructor = WindowContext;

WindowContext.prototype.WINDOW = function() {
    return this.getToken(SiddhiQLParser.WINDOW, 0);
};

WindowContext.prototype.function_operation = function() {
    return this.getTypedRuleContext(Function_operationContext,0);
};

WindowContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterWindow(this);
	}
};

WindowContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitWindow(this);
	}
};

WindowContext.prototype.accept = function(visitor) {
    if ( visitor instanceof SiddhiQLVisitor ) {
        return visitor.visitWindow(this);
    } else {
        return visitor.visitChildren(this);
    }
};




SiddhiQLParser.prototype.window = function() {

    var localctx = new WindowContext(this, this._ctx, this.state);
    this.enterRule(localctx, 88, SiddhiQLParser.RULE_window);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 721;
        this.match(SiddhiQLParser.HASH);
        this.state = 722;
        this.match(SiddhiQLParser.WINDOW);
        this.state = 723;
        this.match(SiddhiQLParser.DOT);
        this.state = 724; 
        this.function_operation();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Query_sectionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_query_section;
    return this;
}

Query_sectionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Query_sectionContext.prototype.constructor = Query_sectionContext;

Query_sectionContext.prototype.SELECT = function() {
    return this.getToken(SiddhiQLParser.SELECT, 0);
};

Query_sectionContext.prototype.group_by = function() {
    return this.getTypedRuleContext(Group_byContext,0);
};

Query_sectionContext.prototype.having = function() {
    return this.getTypedRuleContext(HavingContext,0);
};

Query_sectionContext.prototype.output_attribute = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Output_attributeContext);
    } else {
        return this.getTypedRuleContext(Output_attributeContext,i);
    }
};

Query_sectionContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterQuery_section(this);
	}
};

Query_sectionContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitQuery_section(this);
	}
};

Query_sectionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof SiddhiQLVisitor ) {
        return visitor.visitQuery_section(this);
    } else {
        return visitor.visitChildren(this);
    }
};




SiddhiQLParser.prototype.query_section = function() {

    var localctx = new Query_sectionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 90, SiddhiQLParser.RULE_query_section);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 726;
        this.match(SiddhiQLParser.SELECT);
        this.state = 736;
        switch(this._input.LA(1)) {
        case SiddhiQLParser.STAR:
            this.state = 727;
            this.match(SiddhiQLParser.STAR);
            break;
        case SiddhiQLParser.INT_LITERAL:
        case SiddhiQLParser.LONG_LITERAL:
        case SiddhiQLParser.FLOAT_LITERAL:
        case SiddhiQLParser.DOUBLE_LITERAL:
        case SiddhiQLParser.OPEN_PAR:
        case SiddhiQLParser.PLUS:
        case SiddhiQLParser.MINUS:
        case SiddhiQLParser.HASH:
        case SiddhiQLParser.STREAM:
        case SiddhiQLParser.DEFINE:
        case SiddhiQLParser.TABLE:
        case SiddhiQLParser.FROM:
        case SiddhiQLParser.PARTITION:
        case SiddhiQLParser.WINDOW:
        case SiddhiQLParser.SELECT:
        case SiddhiQLParser.GROUP:
        case SiddhiQLParser.BY:
        case SiddhiQLParser.HAVING:
        case SiddhiQLParser.INSERT:
        case SiddhiQLParser.DELETE:
        case SiddhiQLParser.UPDATE:
        case SiddhiQLParser.RETURN:
        case SiddhiQLParser.EVENTS:
        case SiddhiQLParser.INTO:
        case SiddhiQLParser.OUTPUT:
        case SiddhiQLParser.EXPIRED:
        case SiddhiQLParser.CURRENT:
        case SiddhiQLParser.SNAPSHOT:
        case SiddhiQLParser.FOR:
        case SiddhiQLParser.RAW:
        case SiddhiQLParser.OF:
        case SiddhiQLParser.AS:
        case SiddhiQLParser.OR:
        case SiddhiQLParser.AND:
        case SiddhiQLParser.ON:
        case SiddhiQLParser.IS:
        case SiddhiQLParser.NOT:
        case SiddhiQLParser.WITHIN:
        case SiddhiQLParser.WITH:
        case SiddhiQLParser.BEGIN:
        case SiddhiQLParser.END:
        case SiddhiQLParser.NULL:
        case SiddhiQLParser.EVERY:
        case SiddhiQLParser.LAST:
        case SiddhiQLParser.ALL:
        case SiddhiQLParser.FIRST:
        case SiddhiQLParser.JOIN:
        case SiddhiQLParser.INNER:
        case SiddhiQLParser.OUTER:
        case SiddhiQLParser.RIGHT:
        case SiddhiQLParser.LEFT:
        case SiddhiQLParser.FULL:
        case SiddhiQLParser.UNIDIRECTIONAL:
        case SiddhiQLParser.YEARS:
        case SiddhiQLParser.MONTHS:
        case SiddhiQLParser.WEEKS:
        case SiddhiQLParser.DAYS:
        case SiddhiQLParser.HOURS:
        case SiddhiQLParser.MINUTES:
        case SiddhiQLParser.SECONDS:
        case SiddhiQLParser.MILLISECONDS:
        case SiddhiQLParser.FALSE:
        case SiddhiQLParser.TRUE:
        case SiddhiQLParser.STRING:
        case SiddhiQLParser.INT:
        case SiddhiQLParser.LONG:
        case SiddhiQLParser.FLOAT:
        case SiddhiQLParser.DOUBLE:
        case SiddhiQLParser.BOOL:
        case SiddhiQLParser.OBJECT:
        case SiddhiQLParser.ID_QUOTES:
        case SiddhiQLParser.ID:
        case SiddhiQLParser.STRING_LITERAL:
            this.state = 728; 
            this.output_attribute();
            this.state = 733;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            while(_la===SiddhiQLParser.COMMA) {
                this.state = 729;
                this.match(SiddhiQLParser.COMMA);
                this.state = 730; 
                this.output_attribute();
                this.state = 735;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
            }
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
        this.state = 739;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.GROUP) {
            this.state = 738; 
            this.group_by();
        }

        this.state = 742;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.HAVING) {
            this.state = 741; 
            this.having();
        }

    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Group_byContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_group_by;
    return this;
}

Group_byContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Group_byContext.prototype.constructor = Group_byContext;

Group_byContext.prototype.GROUP = function() {
    return this.getToken(SiddhiQLParser.GROUP, 0);
};

Group_byContext.prototype.BY = function() {
    return this.getToken(SiddhiQLParser.BY, 0);
};

Group_byContext.prototype.attribute_reference = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Attribute_referenceContext);
    } else {
        return this.getTypedRuleContext(Attribute_referenceContext,i);
    }
};

Group_byContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterGroup_by(this);
	}
};

Group_byContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitGroup_by(this);
	}
};

Group_byContext.prototype.accept = function(visitor) {
    if ( visitor instanceof SiddhiQLVisitor ) {
        return visitor.visitGroup_by(this);
    } else {
        return visitor.visitChildren(this);
    }
};




SiddhiQLParser.prototype.group_by = function() {

    var localctx = new Group_byContext(this, this._ctx, this.state);
    this.enterRule(localctx, 92, SiddhiQLParser.RULE_group_by);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 744;
        this.match(SiddhiQLParser.GROUP);
        this.state = 745;
        this.match(SiddhiQLParser.BY);
        this.state = 747; 
        this._errHandler.sync(this);
        var _alt = 1;
        do {
        	switch (_alt) {
        	case 1:
        		this.state = 746; 
        		this.attribute_reference();
        		break;
        	default:
        		throw new antlr4.error.NoViableAltException(this);
        	}
        	this.state = 749; 
        	this._errHandler.sync(this);
        	_alt = this._interp.adaptivePredict(this._input,90, this._ctx);
        } while ( _alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER );
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function HavingContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_having;
    return this;
}

HavingContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
HavingContext.prototype.constructor = HavingContext;

HavingContext.prototype.HAVING = function() {
    return this.getToken(SiddhiQLParser.HAVING, 0);
};

HavingContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

HavingContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterHaving(this);
	}
};

HavingContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitHaving(this);
	}
};

HavingContext.prototype.accept = function(visitor) {
    if ( visitor instanceof SiddhiQLVisitor ) {
        return visitor.visitHaving(this);
    } else {
        return visitor.visitChildren(this);
    }
};




SiddhiQLParser.prototype.having = function() {

    var localctx = new HavingContext(this, this._ctx, this.state);
    this.enterRule(localctx, 94, SiddhiQLParser.RULE_having);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 751;
        this.match(SiddhiQLParser.HAVING);
        this.state = 752; 
        this.expression();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Query_outputContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_query_output;
    return this;
}

Query_outputContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Query_outputContext.prototype.constructor = Query_outputContext;

Query_outputContext.prototype.INSERT = function() {
    return this.getToken(SiddhiQLParser.INSERT, 0);
};

Query_outputContext.prototype.INTO = function() {
    return this.getToken(SiddhiQLParser.INTO, 0);
};

Query_outputContext.prototype.target = function() {
    return this.getTypedRuleContext(TargetContext,0);
};

Query_outputContext.prototype.output_event_type = function() {
    return this.getTypedRuleContext(Output_event_typeContext,0);
};

Query_outputContext.prototype.DELETE = function() {
    return this.getToken(SiddhiQLParser.DELETE, 0);
};

Query_outputContext.prototype.ON = function() {
    return this.getToken(SiddhiQLParser.ON, 0);
};

Query_outputContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Query_outputContext.prototype.FOR = function() {
    return this.getToken(SiddhiQLParser.FOR, 0);
};

Query_outputContext.prototype.UPDATE = function() {
    return this.getToken(SiddhiQLParser.UPDATE, 0);
};

Query_outputContext.prototype.RETURN = function() {
    return this.getToken(SiddhiQLParser.RETURN, 0);
};

Query_outputContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterQuery_output(this);
	}
};

Query_outputContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitQuery_output(this);
	}
};

Query_outputContext.prototype.accept = function(visitor) {
    if ( visitor instanceof SiddhiQLVisitor ) {
        return visitor.visitQuery_output(this);
    } else {
        return visitor.visitChildren(this);
    }
};




SiddhiQLParser.prototype.query_output = function() {

    var localctx = new Query_outputContext(this, this._ctx, this.state);
    this.enterRule(localctx, 96, SiddhiQLParser.RULE_query_output);
    var _la = 0; // Token type
    try {
        this.state = 782;
        switch(this._input.LA(1)) {
        case SiddhiQLParser.INSERT:
            this.enterOuterAlt(localctx, 1);
            this.state = 754;
            this.match(SiddhiQLParser.INSERT);
            this.state = 756;
            _la = this._input.LA(1);
            if(((((_la - 45)) & ~0x1f) == 0 && ((1 << (_la - 45)) & ((1 << (SiddhiQLParser.EVENTS - 45)) | (1 << (SiddhiQLParser.EXPIRED - 45)) | (1 << (SiddhiQLParser.CURRENT - 45)) | (1 << (SiddhiQLParser.ALL - 45)))) !== 0)) {
                this.state = 755; 
                this.output_event_type();
            }

            this.state = 758;
            this.match(SiddhiQLParser.INTO);
            this.state = 759; 
            this.target();
            break;
        case SiddhiQLParser.DELETE:
            this.enterOuterAlt(localctx, 2);
            this.state = 760;
            this.match(SiddhiQLParser.DELETE);
            this.state = 761; 
            this.target();
            this.state = 764;
            _la = this._input.LA(1);
            if(_la===SiddhiQLParser.FOR) {
                this.state = 762;
                this.match(SiddhiQLParser.FOR);
                this.state = 763; 
                this.output_event_type();
            }

            this.state = 766;
            this.match(SiddhiQLParser.ON);
            this.state = 767; 
            this.expression();
            break;
        case SiddhiQLParser.UPDATE:
            this.enterOuterAlt(localctx, 3);
            this.state = 769;
            this.match(SiddhiQLParser.UPDATE);
            this.state = 770; 
            this.target();
            this.state = 773;
            _la = this._input.LA(1);
            if(_la===SiddhiQLParser.FOR) {
                this.state = 771;
                this.match(SiddhiQLParser.FOR);
                this.state = 772; 
                this.output_event_type();
            }

            this.state = 775;
            this.match(SiddhiQLParser.ON);
            this.state = 776; 
            this.expression();
            break;
        case SiddhiQLParser.RETURN:
            this.enterOuterAlt(localctx, 4);
            this.state = 778;
            this.match(SiddhiQLParser.RETURN);
            this.state = 780;
            _la = this._input.LA(1);
            if(((((_la - 45)) & ~0x1f) == 0 && ((1 << (_la - 45)) & ((1 << (SiddhiQLParser.EVENTS - 45)) | (1 << (SiddhiQLParser.EXPIRED - 45)) | (1 << (SiddhiQLParser.CURRENT - 45)) | (1 << (SiddhiQLParser.ALL - 45)))) !== 0)) {
                this.state = 779; 
                this.output_event_type();
            }

            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Output_event_typeContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_output_event_type;
    return this;
}

Output_event_typeContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Output_event_typeContext.prototype.constructor = Output_event_typeContext;

Output_event_typeContext.prototype.ALL = function() {
    return this.getToken(SiddhiQLParser.ALL, 0);
};

Output_event_typeContext.prototype.EVENTS = function() {
    return this.getToken(SiddhiQLParser.EVENTS, 0);
};

Output_event_typeContext.prototype.RAW = function() {
    return this.getToken(SiddhiQLParser.RAW, 0);
};

Output_event_typeContext.prototype.EXPIRED = function() {
    return this.getToken(SiddhiQLParser.EXPIRED, 0);
};

Output_event_typeContext.prototype.CURRENT = function() {
    return this.getToken(SiddhiQLParser.CURRENT, 0);
};

Output_event_typeContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterOutput_event_type(this);
	}
};

Output_event_typeContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitOutput_event_type(this);
	}
};

Output_event_typeContext.prototype.accept = function(visitor) {
    if ( visitor instanceof SiddhiQLVisitor ) {
        return visitor.visitOutput_event_type(this);
    } else {
        return visitor.visitChildren(this);
    }
};




SiddhiQLParser.prototype.output_event_type = function() {

    var localctx = new Output_event_typeContext(this, this._ctx, this.state);
    this.enterRule(localctx, 98, SiddhiQLParser.RULE_output_event_type);
    var _la = 0; // Token type
    try {
        this.state = 798;
        var la_ = this._interp.adaptivePredict(this._input,97,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 784;
            this.match(SiddhiQLParser.ALL);
            this.state = 785;
            this.match(SiddhiQLParser.EVENTS);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 786;
            this.match(SiddhiQLParser.ALL);
            this.state = 787;
            this.match(SiddhiQLParser.RAW);
            this.state = 788;
            this.match(SiddhiQLParser.EVENTS);
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 789;
            this.match(SiddhiQLParser.EXPIRED);
            this.state = 790;
            this.match(SiddhiQLParser.EVENTS);
            break;

        case 4:
            this.enterOuterAlt(localctx, 4);
            this.state = 791;
            this.match(SiddhiQLParser.EXPIRED);
            this.state = 792;
            this.match(SiddhiQLParser.RAW);
            this.state = 793;
            this.match(SiddhiQLParser.EVENTS);
            break;

        case 5:
            this.enterOuterAlt(localctx, 5);
            this.state = 795;
            _la = this._input.LA(1);
            if(_la===SiddhiQLParser.CURRENT) {
                this.state = 794;
                this.match(SiddhiQLParser.CURRENT);
            }

            this.state = 797;
            this.match(SiddhiQLParser.EVENTS);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Output_rateContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_output_rate;
    return this;
}

Output_rateContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Output_rateContext.prototype.constructor = Output_rateContext;

Output_rateContext.prototype.OUTPUT = function() {
    return this.getToken(SiddhiQLParser.OUTPUT, 0);
};

Output_rateContext.prototype.EVERY = function() {
    return this.getToken(SiddhiQLParser.EVERY, 0);
};

Output_rateContext.prototype.time_value = function() {
    return this.getTypedRuleContext(Time_valueContext,0);
};

Output_rateContext.prototype.INT_LITERAL = function() {
    return this.getToken(SiddhiQLParser.INT_LITERAL, 0);
};

Output_rateContext.prototype.EVENTS = function() {
    return this.getToken(SiddhiQLParser.EVENTS, 0);
};

Output_rateContext.prototype.output_rate_type = function() {
    return this.getTypedRuleContext(Output_rate_typeContext,0);
};

Output_rateContext.prototype.SNAPSHOT = function() {
    return this.getToken(SiddhiQLParser.SNAPSHOT, 0);
};

Output_rateContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterOutput_rate(this);
	}
};

Output_rateContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitOutput_rate(this);
	}
};

Output_rateContext.prototype.accept = function(visitor) {
    if ( visitor instanceof SiddhiQLVisitor ) {
        return visitor.visitOutput_rate(this);
    } else {
        return visitor.visitChildren(this);
    }
};




SiddhiQLParser.prototype.output_rate = function() {

    var localctx = new Output_rateContext(this, this._ctx, this.state);
    this.enterRule(localctx, 100, SiddhiQLParser.RULE_output_rate);
    var _la = 0; // Token type
    try {
        this.state = 814;
        var la_ = this._interp.adaptivePredict(this._input,100,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 800;
            this.match(SiddhiQLParser.OUTPUT);
            this.state = 802;
            _la = this._input.LA(1);
            if(((((_la - 67)) & ~0x1f) == 0 && ((1 << (_la - 67)) & ((1 << (SiddhiQLParser.LAST - 67)) | (1 << (SiddhiQLParser.ALL - 67)) | (1 << (SiddhiQLParser.FIRST - 67)))) !== 0)) {
                this.state = 801; 
                this.output_rate_type();
            }

            this.state = 804;
            this.match(SiddhiQLParser.EVERY);
            this.state = 808;
            var la_ = this._interp.adaptivePredict(this._input,99,this._ctx);
            switch(la_) {
            case 1:
                this.state = 805; 
                this.time_value();
                break;

            case 2:
                this.state = 806;
                this.match(SiddhiQLParser.INT_LITERAL);
                this.state = 807;
                this.match(SiddhiQLParser.EVENTS);
                break;

            }
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 810;
            this.match(SiddhiQLParser.OUTPUT);
            this.state = 811;
            this.match(SiddhiQLParser.SNAPSHOT);
            this.state = 812;
            this.match(SiddhiQLParser.EVERY);
            this.state = 813; 
            this.time_value();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Output_rate_typeContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_output_rate_type;
    return this;
}

Output_rate_typeContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Output_rate_typeContext.prototype.constructor = Output_rate_typeContext;

Output_rate_typeContext.prototype.ALL = function() {
    return this.getToken(SiddhiQLParser.ALL, 0);
};

Output_rate_typeContext.prototype.LAST = function() {
    return this.getToken(SiddhiQLParser.LAST, 0);
};

Output_rate_typeContext.prototype.FIRST = function() {
    return this.getToken(SiddhiQLParser.FIRST, 0);
};

Output_rate_typeContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterOutput_rate_type(this);
	}
};

Output_rate_typeContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitOutput_rate_type(this);
	}
};

Output_rate_typeContext.prototype.accept = function(visitor) {
    if ( visitor instanceof SiddhiQLVisitor ) {
        return visitor.visitOutput_rate_type(this);
    } else {
        return visitor.visitChildren(this);
    }
};




SiddhiQLParser.prototype.output_rate_type = function() {

    var localctx = new Output_rate_typeContext(this, this._ctx, this.state);
    this.enterRule(localctx, 102, SiddhiQLParser.RULE_output_rate_type);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 816;
        _la = this._input.LA(1);
        if(!(((((_la - 67)) & ~0x1f) == 0 && ((1 << (_la - 67)) & ((1 << (SiddhiQLParser.LAST - 67)) | (1 << (SiddhiQLParser.ALL - 67)) | (1 << (SiddhiQLParser.FIRST - 67)))) !== 0))) {
        this._errHandler.recoverInline(this);
        }
        this.consume();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Within_timeContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_within_time;
    return this;
}

Within_timeContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Within_timeContext.prototype.constructor = Within_timeContext;

Within_timeContext.prototype.WITHIN = function() {
    return this.getToken(SiddhiQLParser.WITHIN, 0);
};

Within_timeContext.prototype.time_value = function() {
    return this.getTypedRuleContext(Time_valueContext,0);
};

Within_timeContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterWithin_time(this);
	}
};

Within_timeContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitWithin_time(this);
	}
};

Within_timeContext.prototype.accept = function(visitor) {
    if ( visitor instanceof SiddhiQLVisitor ) {
        return visitor.visitWithin_time(this);
    } else {
        return visitor.visitChildren(this);
    }
};




SiddhiQLParser.prototype.within_time = function() {

    var localctx = new Within_timeContext(this, this._ctx, this.state);
    this.enterRule(localctx, 104, SiddhiQLParser.RULE_within_time);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 818;
        this.match(SiddhiQLParser.WITHIN);
        this.state = 819; 
        this.time_value();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Output_attributeContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_output_attribute;
    return this;
}

Output_attributeContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Output_attributeContext.prototype.constructor = Output_attributeContext;

Output_attributeContext.prototype.attribute = function() {
    return this.getTypedRuleContext(AttributeContext,0);
};

Output_attributeContext.prototype.AS = function() {
    return this.getToken(SiddhiQLParser.AS, 0);
};

Output_attributeContext.prototype.attribute_name = function() {
    return this.getTypedRuleContext(Attribute_nameContext,0);
};

Output_attributeContext.prototype.attribute_reference = function() {
    return this.getTypedRuleContext(Attribute_referenceContext,0);
};

Output_attributeContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterOutput_attribute(this);
	}
};

Output_attributeContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitOutput_attribute(this);
	}
};

Output_attributeContext.prototype.accept = function(visitor) {
    if ( visitor instanceof SiddhiQLVisitor ) {
        return visitor.visitOutput_attribute(this);
    } else {
        return visitor.visitChildren(this);
    }
};




SiddhiQLParser.prototype.output_attribute = function() {

    var localctx = new Output_attributeContext(this, this._ctx, this.state);
    this.enterRule(localctx, 106, SiddhiQLParser.RULE_output_attribute);
    try {
        this.state = 826;
        var la_ = this._interp.adaptivePredict(this._input,101,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 821; 
            this.attribute();
            this.state = 822;
            this.match(SiddhiQLParser.AS);
            this.state = 823; 
            this.attribute_name();
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 825; 
            this.attribute_reference();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function AttributeContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_attribute;
    return this;
}

AttributeContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
AttributeContext.prototype.constructor = AttributeContext;

AttributeContext.prototype.math_operation = function() {
    return this.getTypedRuleContext(Math_operationContext,0);
};

AttributeContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterAttribute(this);
	}
};

AttributeContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitAttribute(this);
	}
};

AttributeContext.prototype.accept = function(visitor) {
    if ( visitor instanceof SiddhiQLVisitor ) {
        return visitor.visitAttribute(this);
    } else {
        return visitor.visitChildren(this);
    }
};




SiddhiQLParser.prototype.attribute = function() {

    var localctx = new AttributeContext(this, this._ctx, this.state);
    this.enterRule(localctx, 108, SiddhiQLParser.RULE_attribute);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 828; 
        this.math_operation(0);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function ExpressionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_expression;
    return this;
}

ExpressionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ExpressionContext.prototype.constructor = ExpressionContext;

ExpressionContext.prototype.math_operation = function() {
    return this.getTypedRuleContext(Math_operationContext,0);
};

ExpressionContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterExpression(this);
	}
};

ExpressionContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitExpression(this);
	}
};

ExpressionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof SiddhiQLVisitor ) {
        return visitor.visitExpression(this);
    } else {
        return visitor.visitChildren(this);
    }
};




SiddhiQLParser.prototype.expression = function() {

    var localctx = new ExpressionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 110, SiddhiQLParser.RULE_expression);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 830; 
        this.math_operation(0);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Math_operationContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_math_operation;
    return this;
}

Math_operationContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Math_operationContext.prototype.constructor = Math_operationContext;


 
Math_operationContext.prototype.copyFrom = function(ctx) {
    antlr4.ParserRuleContext.prototype.copyFrom.call(this, ctx);
};

function Basic_math_operationContext(parser, ctx) {
	Math_operationContext.call(this, parser);
    Math_operationContext.prototype.copyFrom.call(this, ctx);
    return this;
}

Basic_math_operationContext.prototype = Object.create(Math_operationContext.prototype);
Basic_math_operationContext.prototype.constructor = Basic_math_operationContext;

Basic_math_operationContext.prototype.math_operation = function() {
    return this.getTypedRuleContext(Math_operationContext,0);
};

Basic_math_operationContext.prototype.function_operation = function() {
    return this.getTypedRuleContext(Function_operationContext,0);
};

Basic_math_operationContext.prototype.null_check = function() {
    return this.getTypedRuleContext(Null_checkContext,0);
};

Basic_math_operationContext.prototype.constant_value = function() {
    return this.getTypedRuleContext(Constant_valueContext,0);
};

Basic_math_operationContext.prototype.attribute_reference = function() {
    return this.getTypedRuleContext(Attribute_referenceContext,0);
};
Basic_math_operationContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterBasic_math_operation(this);
	}
};

Basic_math_operationContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitBasic_math_operation(this);
	}
};

Basic_math_operationContext.prototype.accept = function(visitor) {
    if ( visitor instanceof SiddhiQLVisitor ) {
        return visitor.visitBasic_math_operation(this);
    } else {
        return visitor.visitChildren(this);
    }
};


function Equality_math_operationContext(parser, ctx) {
	Math_operationContext.call(this, parser);
    this.eq = null; // Token;
    this.not_eq = null; // Token;
    Math_operationContext.prototype.copyFrom.call(this, ctx);
    return this;
}

Equality_math_operationContext.prototype = Object.create(Math_operationContext.prototype);
Equality_math_operationContext.prototype.constructor = Equality_math_operationContext;

Equality_math_operationContext.prototype.math_operation = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Math_operationContext);
    } else {
        return this.getTypedRuleContext(Math_operationContext,i);
    }
};
Equality_math_operationContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterEquality_math_operation(this);
	}
};

Equality_math_operationContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitEquality_math_operation(this);
	}
};

Equality_math_operationContext.prototype.accept = function(visitor) {
    if ( visitor instanceof SiddhiQLVisitor ) {
        return visitor.visitEquality_math_operation(this);
    } else {
        return visitor.visitChildren(this);
    }
};


function Greaterthan_lessthan_math_operationContext(parser, ctx) {
	Math_operationContext.call(this, parser);
    this.gt_eq = null; // Token;
    this.lt_eq = null; // Token;
    this.gt = null; // Token;
    this.lt = null; // Token;
    Math_operationContext.prototype.copyFrom.call(this, ctx);
    return this;
}

Greaterthan_lessthan_math_operationContext.prototype = Object.create(Math_operationContext.prototype);
Greaterthan_lessthan_math_operationContext.prototype.constructor = Greaterthan_lessthan_math_operationContext;

Greaterthan_lessthan_math_operationContext.prototype.math_operation = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Math_operationContext);
    } else {
        return this.getTypedRuleContext(Math_operationContext,i);
    }
};
Greaterthan_lessthan_math_operationContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterGreaterthan_lessthan_math_operation(this);
	}
};

Greaterthan_lessthan_math_operationContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitGreaterthan_lessthan_math_operation(this);
	}
};

Greaterthan_lessthan_math_operationContext.prototype.accept = function(visitor) {
    if ( visitor instanceof SiddhiQLVisitor ) {
        return visitor.visitGreaterthan_lessthan_math_operation(this);
    } else {
        return visitor.visitChildren(this);
    }
};


function In_math_operationContext(parser, ctx) {
	Math_operationContext.call(this, parser);
    Math_operationContext.prototype.copyFrom.call(this, ctx);
    return this;
}

In_math_operationContext.prototype = Object.create(Math_operationContext.prototype);
In_math_operationContext.prototype.constructor = In_math_operationContext;

In_math_operationContext.prototype.math_operation = function() {
    return this.getTypedRuleContext(Math_operationContext,0);
};

In_math_operationContext.prototype.IN = function() {
    return this.getToken(SiddhiQLParser.IN, 0);
};

In_math_operationContext.prototype.name = function() {
    return this.getTypedRuleContext(NameContext,0);
};
In_math_operationContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterIn_math_operation(this);
	}
};

In_math_operationContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitIn_math_operation(this);
	}
};

In_math_operationContext.prototype.accept = function(visitor) {
    if ( visitor instanceof SiddhiQLVisitor ) {
        return visitor.visitIn_math_operation(this);
    } else {
        return visitor.visitChildren(this);
    }
};


function Multiplication_math_operationContext(parser, ctx) {
	Math_operationContext.call(this, parser);
    this.multiply = null; // Token;
    this.devide = null; // Token;
    this.mod = null; // Token;
    Math_operationContext.prototype.copyFrom.call(this, ctx);
    return this;
}

Multiplication_math_operationContext.prototype = Object.create(Math_operationContext.prototype);
Multiplication_math_operationContext.prototype.constructor = Multiplication_math_operationContext;

Multiplication_math_operationContext.prototype.math_operation = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Math_operationContext);
    } else {
        return this.getTypedRuleContext(Math_operationContext,i);
    }
};
Multiplication_math_operationContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterMultiplication_math_operation(this);
	}
};

Multiplication_math_operationContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitMultiplication_math_operation(this);
	}
};

Multiplication_math_operationContext.prototype.accept = function(visitor) {
    if ( visitor instanceof SiddhiQLVisitor ) {
        return visitor.visitMultiplication_math_operation(this);
    } else {
        return visitor.visitChildren(this);
    }
};


function And_math_operationContext(parser, ctx) {
	Math_operationContext.call(this, parser);
    Math_operationContext.prototype.copyFrom.call(this, ctx);
    return this;
}

And_math_operationContext.prototype = Object.create(Math_operationContext.prototype);
And_math_operationContext.prototype.constructor = And_math_operationContext;

And_math_operationContext.prototype.math_operation = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Math_operationContext);
    } else {
        return this.getTypedRuleContext(Math_operationContext,i);
    }
};

And_math_operationContext.prototype.AND = function() {
    return this.getToken(SiddhiQLParser.AND, 0);
};
And_math_operationContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterAnd_math_operation(this);
	}
};

And_math_operationContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitAnd_math_operation(this);
	}
};

And_math_operationContext.prototype.accept = function(visitor) {
    if ( visitor instanceof SiddhiQLVisitor ) {
        return visitor.visitAnd_math_operation(this);
    } else {
        return visitor.visitChildren(this);
    }
};


function Not_math_operationContext(parser, ctx) {
	Math_operationContext.call(this, parser);
    Math_operationContext.prototype.copyFrom.call(this, ctx);
    return this;
}

Not_math_operationContext.prototype = Object.create(Math_operationContext.prototype);
Not_math_operationContext.prototype.constructor = Not_math_operationContext;

Not_math_operationContext.prototype.NOT = function() {
    return this.getToken(SiddhiQLParser.NOT, 0);
};

Not_math_operationContext.prototype.math_operation = function() {
    return this.getTypedRuleContext(Math_operationContext,0);
};
Not_math_operationContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterNot_math_operation(this);
	}
};

Not_math_operationContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitNot_math_operation(this);
	}
};

Not_math_operationContext.prototype.accept = function(visitor) {
    if ( visitor instanceof SiddhiQLVisitor ) {
        return visitor.visitNot_math_operation(this);
    } else {
        return visitor.visitChildren(this);
    }
};


function Or_math_operationContext(parser, ctx) {
	Math_operationContext.call(this, parser);
    Math_operationContext.prototype.copyFrom.call(this, ctx);
    return this;
}

Or_math_operationContext.prototype = Object.create(Math_operationContext.prototype);
Or_math_operationContext.prototype.constructor = Or_math_operationContext;

Or_math_operationContext.prototype.math_operation = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Math_operationContext);
    } else {
        return this.getTypedRuleContext(Math_operationContext,i);
    }
};

Or_math_operationContext.prototype.OR = function() {
    return this.getToken(SiddhiQLParser.OR, 0);
};
Or_math_operationContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterOr_math_operation(this);
	}
};

Or_math_operationContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitOr_math_operation(this);
	}
};

Or_math_operationContext.prototype.accept = function(visitor) {
    if ( visitor instanceof SiddhiQLVisitor ) {
        return visitor.visitOr_math_operation(this);
    } else {
        return visitor.visitChildren(this);
    }
};


function Addition_math_operationContext(parser, ctx) {
	Math_operationContext.call(this, parser);
    this.add = null; // Token;
    this.substract = null; // Token;
    Math_operationContext.prototype.copyFrom.call(this, ctx);
    return this;
}

Addition_math_operationContext.prototype = Object.create(Math_operationContext.prototype);
Addition_math_operationContext.prototype.constructor = Addition_math_operationContext;

Addition_math_operationContext.prototype.math_operation = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Math_operationContext);
    } else {
        return this.getTypedRuleContext(Math_operationContext,i);
    }
};
Addition_math_operationContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterAddition_math_operation(this);
	}
};

Addition_math_operationContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitAddition_math_operation(this);
	}
};

Addition_math_operationContext.prototype.accept = function(visitor) {
    if ( visitor instanceof SiddhiQLVisitor ) {
        return visitor.visitAddition_math_operation(this);
    } else {
        return visitor.visitChildren(this);
    }
};



SiddhiQLParser.prototype.math_operation = function(_p) {
	if(_p===undefined) {
	    _p = 0;
	}
    var _parentctx = this._ctx;
    var _parentState = this.state;
    var localctx = new Math_operationContext(this, this._ctx, _parentState);
    var _prevctx = localctx;
    var _startState = 112;
    this.enterRecursionRule(localctx, 112, SiddhiQLParser.RULE_math_operation, _p);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 843;
        var la_ = this._interp.adaptivePredict(this._input,102,this._ctx);
        switch(la_) {
        case 1:
            localctx = new Not_math_operationContext(this, localctx);
            this._ctx = localctx;
            _prevctx = localctx;

            this.state = 833;
            this.match(SiddhiQLParser.NOT);
            this.state = 834; 
            this.math_operation(12);
            break;

        case 2:
            localctx = new Basic_math_operationContext(this, localctx);
            this._ctx = localctx;
            _prevctx = localctx;
            this.state = 835;
            this.match(SiddhiQLParser.OPEN_PAR);
            this.state = 836; 
            this.math_operation(0);
            this.state = 837;
            this.match(SiddhiQLParser.CLOSE_PAR);
            break;

        case 3:
            localctx = new Basic_math_operationContext(this, localctx);
            this._ctx = localctx;
            _prevctx = localctx;
            this.state = 839; 
            this.function_operation();
            break;

        case 4:
            localctx = new Basic_math_operationContext(this, localctx);
            this._ctx = localctx;
            _prevctx = localctx;
            this.state = 840; 
            this.null_check();
            break;

        case 5:
            localctx = new Basic_math_operationContext(this, localctx);
            this._ctx = localctx;
            _prevctx = localctx;
            this.state = 841; 
            this.constant_value();
            break;

        case 6:
            localctx = new Basic_math_operationContext(this, localctx);
            this._ctx = localctx;
            _prevctx = localctx;
            this.state = 842; 
            this.attribute_reference();
            break;

        }
        this._ctx.stop = this._input.LT(-1);
        this.state = 883;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,108,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                if(this._parseListeners!==null) {
                    this.triggerExitRuleEvent();
                }
                _prevctx = localctx;
                this.state = 881;
                var la_ = this._interp.adaptivePredict(this._input,107,this._ctx);
                switch(la_) {
                case 1:
                    localctx = new Multiplication_math_operationContext(this, new Math_operationContext(this, _parentctx, _parentState));
                    this.pushNewRecursionContext(localctx, _startState, SiddhiQLParser.RULE_math_operation);
                    this.state = 845;
                    if (!( this.precpred(this._ctx, 11))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 11)");
                    }
                    this.state = 849;
                    switch(this._input.LA(1)) {
                    case SiddhiQLParser.STAR:
                        this.state = 846;
                        localctx.multiply = this.match(SiddhiQLParser.STAR);
                        break;
                    case SiddhiQLParser.DIV:
                        this.state = 847;
                        localctx.devide = this.match(SiddhiQLParser.DIV);
                        break;
                    case SiddhiQLParser.MOD:
                        this.state = 848;
                        localctx.mod = this.match(SiddhiQLParser.MOD);
                        break;
                    default:
                        throw new antlr4.error.NoViableAltException(this);
                    }
                    this.state = 851; 
                    this.math_operation(12);
                    break;

                case 2:
                    localctx = new Addition_math_operationContext(this, new Math_operationContext(this, _parentctx, _parentState));
                    this.pushNewRecursionContext(localctx, _startState, SiddhiQLParser.RULE_math_operation);
                    this.state = 852;
                    if (!( this.precpred(this._ctx, 10))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 10)");
                    }
                    this.state = 855;
                    switch(this._input.LA(1)) {
                    case SiddhiQLParser.PLUS:
                        this.state = 853;
                        localctx.add = this.match(SiddhiQLParser.PLUS);
                        break;
                    case SiddhiQLParser.MINUS:
                        this.state = 854;
                        localctx.substract = this.match(SiddhiQLParser.MINUS);
                        break;
                    default:
                        throw new antlr4.error.NoViableAltException(this);
                    }
                    this.state = 857; 
                    this.math_operation(11);
                    break;

                case 3:
                    localctx = new Greaterthan_lessthan_math_operationContext(this, new Math_operationContext(this, _parentctx, _parentState));
                    this.pushNewRecursionContext(localctx, _startState, SiddhiQLParser.RULE_math_operation);
                    this.state = 858;
                    if (!( this.precpred(this._ctx, 9))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 9)");
                    }
                    this.state = 863;
                    switch(this._input.LA(1)) {
                    case SiddhiQLParser.GT_EQ:
                        this.state = 859;
                        localctx.gt_eq = this.match(SiddhiQLParser.GT_EQ);
                        break;
                    case SiddhiQLParser.LT_EQ:
                        this.state = 860;
                        localctx.lt_eq = this.match(SiddhiQLParser.LT_EQ);
                        break;
                    case SiddhiQLParser.GT:
                        this.state = 861;
                        localctx.gt = this.match(SiddhiQLParser.GT);
                        break;
                    case SiddhiQLParser.LT:
                        this.state = 862;
                        localctx.lt = this.match(SiddhiQLParser.LT);
                        break;
                    default:
                        throw new antlr4.error.NoViableAltException(this);
                    }
                    this.state = 865; 
                    this.math_operation(10);
                    break;

                case 4:
                    localctx = new Equality_math_operationContext(this, new Math_operationContext(this, _parentctx, _parentState));
                    this.pushNewRecursionContext(localctx, _startState, SiddhiQLParser.RULE_math_operation);
                    this.state = 866;
                    if (!( this.precpred(this._ctx, 8))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 8)");
                    }
                    this.state = 869;
                    switch(this._input.LA(1)) {
                    case SiddhiQLParser.EQ:
                        this.state = 867;
                        localctx.eq = this.match(SiddhiQLParser.EQ);
                        break;
                    case SiddhiQLParser.NOT_EQ:
                        this.state = 868;
                        localctx.not_eq = this.match(SiddhiQLParser.NOT_EQ);
                        break;
                    default:
                        throw new antlr4.error.NoViableAltException(this);
                    }
                    this.state = 871; 
                    this.math_operation(9);
                    break;

                case 5:
                    localctx = new And_math_operationContext(this, new Math_operationContext(this, _parentctx, _parentState));
                    this.pushNewRecursionContext(localctx, _startState, SiddhiQLParser.RULE_math_operation);
                    this.state = 872;
                    if (!( this.precpred(this._ctx, 6))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 6)");
                    }
                    this.state = 873;
                    this.match(SiddhiQLParser.AND);
                    this.state = 874; 
                    this.math_operation(7);
                    break;

                case 6:
                    localctx = new Or_math_operationContext(this, new Math_operationContext(this, _parentctx, _parentState));
                    this.pushNewRecursionContext(localctx, _startState, SiddhiQLParser.RULE_math_operation);
                    this.state = 875;
                    if (!( this.precpred(this._ctx, 5))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 5)");
                    }
                    this.state = 876;
                    this.match(SiddhiQLParser.OR);
                    this.state = 877; 
                    this.math_operation(6);
                    break;

                case 7:
                    localctx = new In_math_operationContext(this, new Math_operationContext(this, _parentctx, _parentState));
                    this.pushNewRecursionContext(localctx, _startState, SiddhiQLParser.RULE_math_operation);
                    this.state = 878;
                    if (!( this.precpred(this._ctx, 7))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 7)");
                    }
                    this.state = 879;
                    this.match(SiddhiQLParser.IN);
                    this.state = 880; 
                    this.name();
                    break;

                } 
            }
            this.state = 885;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,108,this._ctx);
        }

    } catch( error) {
        if(error instanceof antlr4.error.RecognitionException) {
	        localctx.exception = error;
	        this._errHandler.reportError(this, error);
	        this._errHandler.recover(this, error);
	    } else {
	    	throw error;
	    }
    } finally {
        this.unrollRecursionContexts(_parentctx)
    }
    return localctx;
};

function Function_operationContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_function_operation;
    return this;
}

Function_operationContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Function_operationContext.prototype.constructor = Function_operationContext;

Function_operationContext.prototype.function_id = function() {
    return this.getTypedRuleContext(Function_idContext,0);
};

Function_operationContext.prototype.function_namespace = function() {
    return this.getTypedRuleContext(Function_namespaceContext,0);
};

Function_operationContext.prototype.attribute_list = function() {
    return this.getTypedRuleContext(Attribute_listContext,0);
};

Function_operationContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterFunction_operation(this);
	}
};

Function_operationContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitFunction_operation(this);
	}
};

Function_operationContext.prototype.accept = function(visitor) {
    if ( visitor instanceof SiddhiQLVisitor ) {
        return visitor.visitFunction_operation(this);
    } else {
        return visitor.visitChildren(this);
    }
};




SiddhiQLParser.prototype.function_operation = function() {

    var localctx = new Function_operationContext(this, this._ctx, this.state);
    this.enterRule(localctx, 114, SiddhiQLParser.RULE_function_operation);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 889;
        var la_ = this._interp.adaptivePredict(this._input,109,this._ctx);
        if(la_===1) {
            this.state = 886; 
            this.function_namespace();
            this.state = 887;
            this.match(SiddhiQLParser.COL);

        }
        this.state = 891; 
        this.function_id();
        this.state = 892;
        this.match(SiddhiQLParser.OPEN_PAR);
        this.state = 894;
        _la = this._input.LA(1);
        if(((((_la - 1)) & ~0x1f) == 0 && ((1 << (_la - 1)) & ((1 << (SiddhiQLParser.INT_LITERAL - 1)) | (1 << (SiddhiQLParser.LONG_LITERAL - 1)) | (1 << (SiddhiQLParser.FLOAT_LITERAL - 1)) | (1 << (SiddhiQLParser.DOUBLE_LITERAL - 1)) | (1 << (SiddhiQLParser.OPEN_PAR - 1)) | (1 << (SiddhiQLParser.PLUS - 1)) | (1 << (SiddhiQLParser.MINUS - 1)) | (1 << (SiddhiQLParser.HASH - 1)) | (1 << (SiddhiQLParser.STREAM - 1)) | (1 << (SiddhiQLParser.DEFINE - 1)) | (1 << (SiddhiQLParser.TABLE - 1)))) !== 0) || ((((_la - 34)) & ~0x1f) == 0 && ((1 << (_la - 34)) & ((1 << (SiddhiQLParser.FROM - 34)) | (1 << (SiddhiQLParser.PARTITION - 34)) | (1 << (SiddhiQLParser.WINDOW - 34)) | (1 << (SiddhiQLParser.SELECT - 34)) | (1 << (SiddhiQLParser.GROUP - 34)) | (1 << (SiddhiQLParser.BY - 34)) | (1 << (SiddhiQLParser.HAVING - 34)) | (1 << (SiddhiQLParser.INSERT - 34)) | (1 << (SiddhiQLParser.DELETE - 34)) | (1 << (SiddhiQLParser.UPDATE - 34)) | (1 << (SiddhiQLParser.RETURN - 34)) | (1 << (SiddhiQLParser.EVENTS - 34)) | (1 << (SiddhiQLParser.INTO - 34)) | (1 << (SiddhiQLParser.OUTPUT - 34)) | (1 << (SiddhiQLParser.EXPIRED - 34)) | (1 << (SiddhiQLParser.CURRENT - 34)) | (1 << (SiddhiQLParser.SNAPSHOT - 34)) | (1 << (SiddhiQLParser.FOR - 34)) | (1 << (SiddhiQLParser.RAW - 34)) | (1 << (SiddhiQLParser.OF - 34)) | (1 << (SiddhiQLParser.AS - 34)) | (1 << (SiddhiQLParser.OR - 34)) | (1 << (SiddhiQLParser.AND - 34)) | (1 << (SiddhiQLParser.ON - 34)) | (1 << (SiddhiQLParser.IS - 34)) | (1 << (SiddhiQLParser.NOT - 34)) | (1 << (SiddhiQLParser.WITHIN - 34)) | (1 << (SiddhiQLParser.WITH - 34)) | (1 << (SiddhiQLParser.BEGIN - 34)) | (1 << (SiddhiQLParser.END - 34)) | (1 << (SiddhiQLParser.NULL - 34)))) !== 0) || ((((_la - 66)) & ~0x1f) == 0 && ((1 << (_la - 66)) & ((1 << (SiddhiQLParser.EVERY - 66)) | (1 << (SiddhiQLParser.LAST - 66)) | (1 << (SiddhiQLParser.ALL - 66)) | (1 << (SiddhiQLParser.FIRST - 66)) | (1 << (SiddhiQLParser.JOIN - 66)) | (1 << (SiddhiQLParser.INNER - 66)) | (1 << (SiddhiQLParser.OUTER - 66)) | (1 << (SiddhiQLParser.RIGHT - 66)) | (1 << (SiddhiQLParser.LEFT - 66)) | (1 << (SiddhiQLParser.FULL - 66)) | (1 << (SiddhiQLParser.UNIDIRECTIONAL - 66)) | (1 << (SiddhiQLParser.YEARS - 66)) | (1 << (SiddhiQLParser.MONTHS - 66)) | (1 << (SiddhiQLParser.WEEKS - 66)) | (1 << (SiddhiQLParser.DAYS - 66)) | (1 << (SiddhiQLParser.HOURS - 66)) | (1 << (SiddhiQLParser.MINUTES - 66)) | (1 << (SiddhiQLParser.SECONDS - 66)) | (1 << (SiddhiQLParser.MILLISECONDS - 66)) | (1 << (SiddhiQLParser.FALSE - 66)) | (1 << (SiddhiQLParser.TRUE - 66)) | (1 << (SiddhiQLParser.STRING - 66)) | (1 << (SiddhiQLParser.INT - 66)) | (1 << (SiddhiQLParser.LONG - 66)) | (1 << (SiddhiQLParser.FLOAT - 66)) | (1 << (SiddhiQLParser.DOUBLE - 66)) | (1 << (SiddhiQLParser.BOOL - 66)) | (1 << (SiddhiQLParser.OBJECT - 66)) | (1 << (SiddhiQLParser.ID_QUOTES - 66)) | (1 << (SiddhiQLParser.ID - 66)) | (1 << (SiddhiQLParser.STRING_LITERAL - 66)))) !== 0)) {
            this.state = 893; 
            this.attribute_list();
        }

        this.state = 896;
        this.match(SiddhiQLParser.CLOSE_PAR);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Attribute_listContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_attribute_list;
    return this;
}

Attribute_listContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Attribute_listContext.prototype.constructor = Attribute_listContext;

Attribute_listContext.prototype.attribute = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(AttributeContext);
    } else {
        return this.getTypedRuleContext(AttributeContext,i);
    }
};

Attribute_listContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterAttribute_list(this);
	}
};

Attribute_listContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitAttribute_list(this);
	}
};

Attribute_listContext.prototype.accept = function(visitor) {
    if ( visitor instanceof SiddhiQLVisitor ) {
        return visitor.visitAttribute_list(this);
    } else {
        return visitor.visitChildren(this);
    }
};




SiddhiQLParser.prototype.attribute_list = function() {

    var localctx = new Attribute_listContext(this, this._ctx, this.state);
    this.enterRule(localctx, 116, SiddhiQLParser.RULE_attribute_list);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 898; 
        this.attribute();
        this.state = 903;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===SiddhiQLParser.COMMA) {
            this.state = 899;
            this.match(SiddhiQLParser.COMMA);
            this.state = 900; 
            this.attribute();
            this.state = 905;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Null_checkContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_null_check;
    return this;
}

Null_checkContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Null_checkContext.prototype.constructor = Null_checkContext;

Null_checkContext.prototype.IS = function() {
    return this.getToken(SiddhiQLParser.IS, 0);
};

Null_checkContext.prototype.NULL = function() {
    return this.getToken(SiddhiQLParser.NULL, 0);
};

Null_checkContext.prototype.stream_reference = function() {
    return this.getTypedRuleContext(Stream_referenceContext,0);
};

Null_checkContext.prototype.attribute_reference = function() {
    return this.getTypedRuleContext(Attribute_referenceContext,0);
};

Null_checkContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterNull_check(this);
	}
};

Null_checkContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitNull_check(this);
	}
};

Null_checkContext.prototype.accept = function(visitor) {
    if ( visitor instanceof SiddhiQLVisitor ) {
        return visitor.visitNull_check(this);
    } else {
        return visitor.visitChildren(this);
    }
};




SiddhiQLParser.prototype.null_check = function() {

    var localctx = new Null_checkContext(this, this._ctx, this.state);
    this.enterRule(localctx, 118, SiddhiQLParser.RULE_null_check);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 908;
        var la_ = this._interp.adaptivePredict(this._input,112,this._ctx);
        switch(la_) {
        case 1:
            this.state = 906; 
            this.stream_reference();
            break;

        case 2:
            this.state = 907; 
            this.attribute_reference();
            break;

        }
        this.state = 910;
        this.match(SiddhiQLParser.IS);
        this.state = 911;
        this.match(SiddhiQLParser.NULL);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Stream_referenceContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_stream_reference;
    this.hash = null; // Token
    return this;
}

Stream_referenceContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Stream_referenceContext.prototype.constructor = Stream_referenceContext;

Stream_referenceContext.prototype.name = function() {
    return this.getTypedRuleContext(NameContext,0);
};

Stream_referenceContext.prototype.attribute_index = function() {
    return this.getTypedRuleContext(Attribute_indexContext,0);
};

Stream_referenceContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterStream_reference(this);
	}
};

Stream_referenceContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitStream_reference(this);
	}
};

Stream_referenceContext.prototype.accept = function(visitor) {
    if ( visitor instanceof SiddhiQLVisitor ) {
        return visitor.visitStream_reference(this);
    } else {
        return visitor.visitChildren(this);
    }
};




SiddhiQLParser.prototype.stream_reference = function() {

    var localctx = new Stream_referenceContext(this, this._ctx, this.state);
    this.enterRule(localctx, 120, SiddhiQLParser.RULE_stream_reference);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 914;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.HASH) {
            this.state = 913;
            localctx.hash = this.match(SiddhiQLParser.HASH);
        }

        this.state = 916; 
        this.name();
        this.state = 921;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.OPEN_SQARE_BRACKETS) {
            this.state = 917;
            this.match(SiddhiQLParser.OPEN_SQARE_BRACKETS);
            this.state = 918; 
            this.attribute_index();
            this.state = 919;
            this.match(SiddhiQLParser.CLOASE_SQARE_BRACKETS);
        }

    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Attribute_referenceContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_attribute_reference;
    this.hash1 = null; // Token
    this.name1 = null; // NameContext
    this.attribute_index1 = null; // Attribute_indexContext
    this.hash2 = null; // Token
    this.name2 = null; // NameContext
    this.attribute_index2 = null; // Attribute_indexContext
    return this;
}

Attribute_referenceContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Attribute_referenceContext.prototype.constructor = Attribute_referenceContext;

Attribute_referenceContext.prototype.attribute_name = function() {
    return this.getTypedRuleContext(Attribute_nameContext,0);
};

Attribute_referenceContext.prototype.name = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(NameContext);
    } else {
        return this.getTypedRuleContext(NameContext,i);
    }
};

Attribute_referenceContext.prototype.attribute_index = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Attribute_indexContext);
    } else {
        return this.getTypedRuleContext(Attribute_indexContext,i);
    }
};

Attribute_referenceContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterAttribute_reference(this);
	}
};

Attribute_referenceContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitAttribute_reference(this);
	}
};

Attribute_referenceContext.prototype.accept = function(visitor) {
    if ( visitor instanceof SiddhiQLVisitor ) {
        return visitor.visitAttribute_reference(this);
    } else {
        return visitor.visitChildren(this);
    }
};




SiddhiQLParser.prototype.attribute_reference = function() {

    var localctx = new Attribute_referenceContext(this, this._ctx, this.state);
    this.enterRule(localctx, 122, SiddhiQLParser.RULE_attribute_reference);
    var _la = 0; // Token type
    try {
        this.state = 947;
        var la_ = this._interp.adaptivePredict(this._input,119,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 924;
            _la = this._input.LA(1);
            if(_la===SiddhiQLParser.HASH) {
                this.state = 923;
                localctx.hash1 = this.match(SiddhiQLParser.HASH);
            }

            this.state = 926; 
            localctx.name1 = this.name();
            this.state = 931;
            _la = this._input.LA(1);
            if(_la===SiddhiQLParser.OPEN_SQARE_BRACKETS) {
                this.state = 927;
                this.match(SiddhiQLParser.OPEN_SQARE_BRACKETS);
                this.state = 928; 
                localctx.attribute_index1 = this.attribute_index();
                this.state = 929;
                this.match(SiddhiQLParser.CLOASE_SQARE_BRACKETS);
            }

            this.state = 941;
            _la = this._input.LA(1);
            if(_la===SiddhiQLParser.HASH) {
                this.state = 933;
                localctx.hash2 = this.match(SiddhiQLParser.HASH);
                this.state = 934; 
                localctx.name2 = this.name();
                this.state = 939;
                _la = this._input.LA(1);
                if(_la===SiddhiQLParser.OPEN_SQARE_BRACKETS) {
                    this.state = 935;
                    this.match(SiddhiQLParser.OPEN_SQARE_BRACKETS);
                    this.state = 936; 
                    localctx.attribute_index2 = this.attribute_index();
                    this.state = 937;
                    this.match(SiddhiQLParser.CLOASE_SQARE_BRACKETS);
                }

            }

            this.state = 943;
            this.match(SiddhiQLParser.DOT);
            this.state = 944; 
            this.attribute_name();
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 946; 
            this.attribute_name();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Attribute_indexContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_attribute_index;
    return this;
}

Attribute_indexContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Attribute_indexContext.prototype.constructor = Attribute_indexContext;

Attribute_indexContext.prototype.INT_LITERAL = function() {
    return this.getToken(SiddhiQLParser.INT_LITERAL, 0);
};

Attribute_indexContext.prototype.LAST = function() {
    return this.getToken(SiddhiQLParser.LAST, 0);
};

Attribute_indexContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterAttribute_index(this);
	}
};

Attribute_indexContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitAttribute_index(this);
	}
};

Attribute_indexContext.prototype.accept = function(visitor) {
    if ( visitor instanceof SiddhiQLVisitor ) {
        return visitor.visitAttribute_index(this);
    } else {
        return visitor.visitChildren(this);
    }
};




SiddhiQLParser.prototype.attribute_index = function() {

    var localctx = new Attribute_indexContext(this, this._ctx, this.state);
    this.enterRule(localctx, 124, SiddhiQLParser.RULE_attribute_index);
    var _la = 0; // Token type
    try {
        this.state = 955;
        switch(this._input.LA(1)) {
        case SiddhiQLParser.INT_LITERAL:
            this.enterOuterAlt(localctx, 1);
            this.state = 949;
            this.match(SiddhiQLParser.INT_LITERAL);
            break;
        case SiddhiQLParser.LAST:
            this.enterOuterAlt(localctx, 2);
            this.state = 950;
            this.match(SiddhiQLParser.LAST);
            this.state = 953;
            _la = this._input.LA(1);
            if(_la===SiddhiQLParser.MINUS) {
                this.state = 951;
                this.match(SiddhiQLParser.MINUS);
                this.state = 952;
                this.match(SiddhiQLParser.INT_LITERAL);
            }

            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Function_idContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_function_id;
    return this;
}

Function_idContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Function_idContext.prototype.constructor = Function_idContext;

Function_idContext.prototype.name = function() {
    return this.getTypedRuleContext(NameContext,0);
};

Function_idContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterFunction_id(this);
	}
};

Function_idContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitFunction_id(this);
	}
};

Function_idContext.prototype.accept = function(visitor) {
    if ( visitor instanceof SiddhiQLVisitor ) {
        return visitor.visitFunction_id(this);
    } else {
        return visitor.visitChildren(this);
    }
};




SiddhiQLParser.prototype.function_id = function() {

    var localctx = new Function_idContext(this, this._ctx, this.state);
    this.enterRule(localctx, 126, SiddhiQLParser.RULE_function_id);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 957; 
        this.name();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Function_namespaceContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_function_namespace;
    return this;
}

Function_namespaceContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Function_namespaceContext.prototype.constructor = Function_namespaceContext;

Function_namespaceContext.prototype.name = function() {
    return this.getTypedRuleContext(NameContext,0);
};

Function_namespaceContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterFunction_namespace(this);
	}
};

Function_namespaceContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitFunction_namespace(this);
	}
};

Function_namespaceContext.prototype.accept = function(visitor) {
    if ( visitor instanceof SiddhiQLVisitor ) {
        return visitor.visitFunction_namespace(this);
    } else {
        return visitor.visitChildren(this);
    }
};




SiddhiQLParser.prototype.function_namespace = function() {

    var localctx = new Function_namespaceContext(this, this._ctx, this.state);
    this.enterRule(localctx, 128, SiddhiQLParser.RULE_function_namespace);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 959; 
        this.name();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Stream_idContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_stream_id;
    return this;
}

Stream_idContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Stream_idContext.prototype.constructor = Stream_idContext;

Stream_idContext.prototype.name = function() {
    return this.getTypedRuleContext(NameContext,0);
};

Stream_idContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterStream_id(this);
	}
};

Stream_idContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitStream_id(this);
	}
};

Stream_idContext.prototype.accept = function(visitor) {
    if ( visitor instanceof SiddhiQLVisitor ) {
        return visitor.visitStream_id(this);
    } else {
        return visitor.visitChildren(this);
    }
};




SiddhiQLParser.prototype.stream_id = function() {

    var localctx = new Stream_idContext(this, this._ctx, this.state);
    this.enterRule(localctx, 130, SiddhiQLParser.RULE_stream_id);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 961; 
        this.name();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Stream_aliasContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_stream_alias;
    return this;
}

Stream_aliasContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Stream_aliasContext.prototype.constructor = Stream_aliasContext;

Stream_aliasContext.prototype.name = function() {
    return this.getTypedRuleContext(NameContext,0);
};

Stream_aliasContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterStream_alias(this);
	}
};

Stream_aliasContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitStream_alias(this);
	}
};

Stream_aliasContext.prototype.accept = function(visitor) {
    if ( visitor instanceof SiddhiQLVisitor ) {
        return visitor.visitStream_alias(this);
    } else {
        return visitor.visitChildren(this);
    }
};




SiddhiQLParser.prototype.stream_alias = function() {

    var localctx = new Stream_aliasContext(this, this._ctx, this.state);
    this.enterRule(localctx, 132, SiddhiQLParser.RULE_stream_alias);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 963; 
        this.name();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Property_nameContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_property_name;
    return this;
}

Property_nameContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Property_nameContext.prototype.constructor = Property_nameContext;

Property_nameContext.prototype.name = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(NameContext);
    } else {
        return this.getTypedRuleContext(NameContext,i);
    }
};

Property_nameContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterProperty_name(this);
	}
};

Property_nameContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitProperty_name(this);
	}
};

Property_nameContext.prototype.accept = function(visitor) {
    if ( visitor instanceof SiddhiQLVisitor ) {
        return visitor.visitProperty_name(this);
    } else {
        return visitor.visitChildren(this);
    }
};




SiddhiQLParser.prototype.property_name = function() {

    var localctx = new Property_nameContext(this, this._ctx, this.state);
    this.enterRule(localctx, 134, SiddhiQLParser.RULE_property_name);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 965; 
        this.name();
        this.state = 970;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===SiddhiQLParser.DOT) {
            this.state = 966;
            this.match(SiddhiQLParser.DOT);
            this.state = 967; 
            this.name();
            this.state = 972;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Attribute_nameContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_attribute_name;
    return this;
}

Attribute_nameContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Attribute_nameContext.prototype.constructor = Attribute_nameContext;

Attribute_nameContext.prototype.name = function() {
    return this.getTypedRuleContext(NameContext,0);
};

Attribute_nameContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterAttribute_name(this);
	}
};

Attribute_nameContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitAttribute_name(this);
	}
};

Attribute_nameContext.prototype.accept = function(visitor) {
    if ( visitor instanceof SiddhiQLVisitor ) {
        return visitor.visitAttribute_name(this);
    } else {
        return visitor.visitChildren(this);
    }
};




SiddhiQLParser.prototype.attribute_name = function() {

    var localctx = new Attribute_nameContext(this, this._ctx, this.state);
    this.enterRule(localctx, 136, SiddhiQLParser.RULE_attribute_name);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 973; 
        this.name();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Property_valueContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_property_value;
    return this;
}

Property_valueContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Property_valueContext.prototype.constructor = Property_valueContext;

Property_valueContext.prototype.string_value = function() {
    return this.getTypedRuleContext(String_valueContext,0);
};

Property_valueContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterProperty_value(this);
	}
};

Property_valueContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitProperty_value(this);
	}
};

Property_valueContext.prototype.accept = function(visitor) {
    if ( visitor instanceof SiddhiQLVisitor ) {
        return visitor.visitProperty_value(this);
    } else {
        return visitor.visitChildren(this);
    }
};




SiddhiQLParser.prototype.property_value = function() {

    var localctx = new Property_valueContext(this, this._ctx, this.state);
    this.enterRule(localctx, 138, SiddhiQLParser.RULE_property_value);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 975; 
        this.string_value();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function SourceContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_source;
    this.inner = null; // Token
    return this;
}

SourceContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
SourceContext.prototype.constructor = SourceContext;

SourceContext.prototype.stream_id = function() {
    return this.getTypedRuleContext(Stream_idContext,0);
};

SourceContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterSource(this);
	}
};

SourceContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitSource(this);
	}
};

SourceContext.prototype.accept = function(visitor) {
    if ( visitor instanceof SiddhiQLVisitor ) {
        return visitor.visitSource(this);
    } else {
        return visitor.visitChildren(this);
    }
};




SiddhiQLParser.prototype.source = function() {

    var localctx = new SourceContext(this, this._ctx, this.state);
    this.enterRule(localctx, 140, SiddhiQLParser.RULE_source);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 978;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.HASH) {
            this.state = 977;
            localctx.inner = this.match(SiddhiQLParser.HASH);
        }

        this.state = 980; 
        this.stream_id();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function TargetContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_target;
    return this;
}

TargetContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
TargetContext.prototype.constructor = TargetContext;

TargetContext.prototype.source = function() {
    return this.getTypedRuleContext(SourceContext,0);
};

TargetContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterTarget(this);
	}
};

TargetContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitTarget(this);
	}
};

TargetContext.prototype.accept = function(visitor) {
    if ( visitor instanceof SiddhiQLVisitor ) {
        return visitor.visitTarget(this);
    } else {
        return visitor.visitChildren(this);
    }
};




SiddhiQLParser.prototype.target = function() {

    var localctx = new TargetContext(this, this._ctx, this.state);
    this.enterRule(localctx, 142, SiddhiQLParser.RULE_target);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 982; 
        this.source();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function EventContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_event;
    return this;
}

EventContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
EventContext.prototype.constructor = EventContext;

EventContext.prototype.name = function() {
    return this.getTypedRuleContext(NameContext,0);
};

EventContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterEvent(this);
	}
};

EventContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitEvent(this);
	}
};

EventContext.prototype.accept = function(visitor) {
    if ( visitor instanceof SiddhiQLVisitor ) {
        return visitor.visitEvent(this);
    } else {
        return visitor.visitChildren(this);
    }
};




SiddhiQLParser.prototype.event = function() {

    var localctx = new EventContext(this, this._ctx, this.state);
    this.enterRule(localctx, 144, SiddhiQLParser.RULE_event);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 984; 
        this.name();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function NameContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_name;
    return this;
}

NameContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
NameContext.prototype.constructor = NameContext;

NameContext.prototype.id = function() {
    return this.getTypedRuleContext(IdContext,0);
};

NameContext.prototype.keyword = function() {
    return this.getTypedRuleContext(KeywordContext,0);
};

NameContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterName(this);
	}
};

NameContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitName(this);
	}
};

NameContext.prototype.accept = function(visitor) {
    if ( visitor instanceof SiddhiQLVisitor ) {
        return visitor.visitName(this);
    } else {
        return visitor.visitChildren(this);
    }
};




SiddhiQLParser.prototype.name = function() {

    var localctx = new NameContext(this, this._ctx, this.state);
    this.enterRule(localctx, 146, SiddhiQLParser.RULE_name);
    try {
        this.state = 988;
        switch(this._input.LA(1)) {
        case SiddhiQLParser.ID_QUOTES:
        case SiddhiQLParser.ID:
            this.enterOuterAlt(localctx, 1);
            this.state = 986; 
            this.id();
            break;
        case SiddhiQLParser.STREAM:
        case SiddhiQLParser.DEFINE:
        case SiddhiQLParser.TABLE:
        case SiddhiQLParser.FROM:
        case SiddhiQLParser.PARTITION:
        case SiddhiQLParser.WINDOW:
        case SiddhiQLParser.SELECT:
        case SiddhiQLParser.GROUP:
        case SiddhiQLParser.BY:
        case SiddhiQLParser.HAVING:
        case SiddhiQLParser.INSERT:
        case SiddhiQLParser.DELETE:
        case SiddhiQLParser.UPDATE:
        case SiddhiQLParser.RETURN:
        case SiddhiQLParser.EVENTS:
        case SiddhiQLParser.INTO:
        case SiddhiQLParser.OUTPUT:
        case SiddhiQLParser.EXPIRED:
        case SiddhiQLParser.CURRENT:
        case SiddhiQLParser.SNAPSHOT:
        case SiddhiQLParser.FOR:
        case SiddhiQLParser.RAW:
        case SiddhiQLParser.OF:
        case SiddhiQLParser.AS:
        case SiddhiQLParser.OR:
        case SiddhiQLParser.AND:
        case SiddhiQLParser.ON:
        case SiddhiQLParser.IS:
        case SiddhiQLParser.NOT:
        case SiddhiQLParser.WITHIN:
        case SiddhiQLParser.WITH:
        case SiddhiQLParser.BEGIN:
        case SiddhiQLParser.END:
        case SiddhiQLParser.NULL:
        case SiddhiQLParser.EVERY:
        case SiddhiQLParser.LAST:
        case SiddhiQLParser.ALL:
        case SiddhiQLParser.FIRST:
        case SiddhiQLParser.JOIN:
        case SiddhiQLParser.INNER:
        case SiddhiQLParser.OUTER:
        case SiddhiQLParser.RIGHT:
        case SiddhiQLParser.LEFT:
        case SiddhiQLParser.FULL:
        case SiddhiQLParser.UNIDIRECTIONAL:
        case SiddhiQLParser.YEARS:
        case SiddhiQLParser.MONTHS:
        case SiddhiQLParser.WEEKS:
        case SiddhiQLParser.DAYS:
        case SiddhiQLParser.HOURS:
        case SiddhiQLParser.MINUTES:
        case SiddhiQLParser.SECONDS:
        case SiddhiQLParser.MILLISECONDS:
        case SiddhiQLParser.FALSE:
        case SiddhiQLParser.TRUE:
        case SiddhiQLParser.STRING:
        case SiddhiQLParser.INT:
        case SiddhiQLParser.LONG:
        case SiddhiQLParser.FLOAT:
        case SiddhiQLParser.DOUBLE:
        case SiddhiQLParser.BOOL:
        case SiddhiQLParser.OBJECT:
            this.enterOuterAlt(localctx, 2);
            this.state = 987; 
            this.keyword();
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function CollectContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_collect;
    this.start = null; // Token
    this.end = null; // Token
    return this;
}

CollectContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
CollectContext.prototype.constructor = CollectContext;

CollectContext.prototype.INT_LITERAL = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(SiddhiQLParser.INT_LITERAL);
    } else {
        return this.getToken(SiddhiQLParser.INT_LITERAL, i);
    }
};


CollectContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterCollect(this);
	}
};

CollectContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitCollect(this);
	}
};

CollectContext.prototype.accept = function(visitor) {
    if ( visitor instanceof SiddhiQLVisitor ) {
        return visitor.visitCollect(this);
    } else {
        return visitor.visitChildren(this);
    }
};




SiddhiQLParser.prototype.collect = function() {

    var localctx = new CollectContext(this, this._ctx, this.state);
    this.enterRule(localctx, 148, SiddhiQLParser.RULE_collect);
    try {
        this.state = 998;
        var la_ = this._interp.adaptivePredict(this._input,125,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 990;
            localctx.start = this.match(SiddhiQLParser.INT_LITERAL);
            this.state = 991;
            this.match(SiddhiQLParser.COL);
            this.state = 992;
            localctx.end = this.match(SiddhiQLParser.INT_LITERAL);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 993;
            localctx.start = this.match(SiddhiQLParser.INT_LITERAL);
            this.state = 994;
            this.match(SiddhiQLParser.COL);
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 995;
            this.match(SiddhiQLParser.COL);
            this.state = 996;
            localctx.end = this.match(SiddhiQLParser.INT_LITERAL);
            break;

        case 4:
            this.enterOuterAlt(localctx, 4);
            this.state = 997;
            this.match(SiddhiQLParser.INT_LITERAL);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Attribute_typeContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_attribute_type;
    return this;
}

Attribute_typeContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Attribute_typeContext.prototype.constructor = Attribute_typeContext;

Attribute_typeContext.prototype.STRING = function() {
    return this.getToken(SiddhiQLParser.STRING, 0);
};

Attribute_typeContext.prototype.INT = function() {
    return this.getToken(SiddhiQLParser.INT, 0);
};

Attribute_typeContext.prototype.LONG = function() {
    return this.getToken(SiddhiQLParser.LONG, 0);
};

Attribute_typeContext.prototype.FLOAT = function() {
    return this.getToken(SiddhiQLParser.FLOAT, 0);
};

Attribute_typeContext.prototype.DOUBLE = function() {
    return this.getToken(SiddhiQLParser.DOUBLE, 0);
};

Attribute_typeContext.prototype.BOOL = function() {
    return this.getToken(SiddhiQLParser.BOOL, 0);
};

Attribute_typeContext.prototype.OBJECT = function() {
    return this.getToken(SiddhiQLParser.OBJECT, 0);
};

Attribute_typeContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterAttribute_type(this);
	}
};

Attribute_typeContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitAttribute_type(this);
	}
};

Attribute_typeContext.prototype.accept = function(visitor) {
    if ( visitor instanceof SiddhiQLVisitor ) {
        return visitor.visitAttribute_type(this);
    } else {
        return visitor.visitChildren(this);
    }
};




SiddhiQLParser.prototype.attribute_type = function() {

    var localctx = new Attribute_typeContext(this, this._ctx, this.state);
    this.enterRule(localctx, 150, SiddhiQLParser.RULE_attribute_type);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1000;
        _la = this._input.LA(1);
        if(!(((((_la - 87)) & ~0x1f) == 0 && ((1 << (_la - 87)) & ((1 << (SiddhiQLParser.STRING - 87)) | (1 << (SiddhiQLParser.INT - 87)) | (1 << (SiddhiQLParser.LONG - 87)) | (1 << (SiddhiQLParser.FLOAT - 87)) | (1 << (SiddhiQLParser.DOUBLE - 87)) | (1 << (SiddhiQLParser.BOOL - 87)) | (1 << (SiddhiQLParser.OBJECT - 87)))) !== 0))) {
        this._errHandler.recoverInline(this);
        }
        this.consume();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function JoinContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_join;
    return this;
}

JoinContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
JoinContext.prototype.constructor = JoinContext;

JoinContext.prototype.LEFT = function() {
    return this.getToken(SiddhiQLParser.LEFT, 0);
};

JoinContext.prototype.OUTER = function() {
    return this.getToken(SiddhiQLParser.OUTER, 0);
};

JoinContext.prototype.JOIN = function() {
    return this.getToken(SiddhiQLParser.JOIN, 0);
};

JoinContext.prototype.RIGHT = function() {
    return this.getToken(SiddhiQLParser.RIGHT, 0);
};

JoinContext.prototype.FULL = function() {
    return this.getToken(SiddhiQLParser.FULL, 0);
};

JoinContext.prototype.INNER = function() {
    return this.getToken(SiddhiQLParser.INNER, 0);
};

JoinContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterJoin(this);
	}
};

JoinContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitJoin(this);
	}
};

JoinContext.prototype.accept = function(visitor) {
    if ( visitor instanceof SiddhiQLVisitor ) {
        return visitor.visitJoin(this);
    } else {
        return visitor.visitChildren(this);
    }
};




SiddhiQLParser.prototype.join = function() {

    var localctx = new JoinContext(this, this._ctx, this.state);
    this.enterRule(localctx, 152, SiddhiQLParser.RULE_join);
    var _la = 0; // Token type
    try {
        this.state = 1017;
        switch(this._input.LA(1)) {
        case SiddhiQLParser.LEFT:
            this.enterOuterAlt(localctx, 1);
            this.state = 1002;
            this.match(SiddhiQLParser.LEFT);
            this.state = 1003;
            this.match(SiddhiQLParser.OUTER);
            this.state = 1004;
            this.match(SiddhiQLParser.JOIN);
            break;
        case SiddhiQLParser.RIGHT:
            this.enterOuterAlt(localctx, 2);
            this.state = 1005;
            this.match(SiddhiQLParser.RIGHT);
            this.state = 1006;
            this.match(SiddhiQLParser.OUTER);
            this.state = 1007;
            this.match(SiddhiQLParser.JOIN);
            break;
        case SiddhiQLParser.FULL:
            this.enterOuterAlt(localctx, 3);
            this.state = 1008;
            this.match(SiddhiQLParser.FULL);
            this.state = 1009;
            this.match(SiddhiQLParser.OUTER);
            this.state = 1010;
            this.match(SiddhiQLParser.JOIN);
            break;
        case SiddhiQLParser.OUTER:
            this.enterOuterAlt(localctx, 4);
            this.state = 1011;
            this.match(SiddhiQLParser.OUTER);
            this.state = 1012;
            this.match(SiddhiQLParser.JOIN);
            break;
        case SiddhiQLParser.JOIN:
        case SiddhiQLParser.INNER:
            this.enterOuterAlt(localctx, 5);
            this.state = 1014;
            _la = this._input.LA(1);
            if(_la===SiddhiQLParser.INNER) {
                this.state = 1013;
                this.match(SiddhiQLParser.INNER);
            }

            this.state = 1016;
            this.match(SiddhiQLParser.JOIN);
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Constant_valueContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_constant_value;
    return this;
}

Constant_valueContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Constant_valueContext.prototype.constructor = Constant_valueContext;

Constant_valueContext.prototype.bool_value = function() {
    return this.getTypedRuleContext(Bool_valueContext,0);
};

Constant_valueContext.prototype.signed_double_value = function() {
    return this.getTypedRuleContext(Signed_double_valueContext,0);
};

Constant_valueContext.prototype.signed_float_value = function() {
    return this.getTypedRuleContext(Signed_float_valueContext,0);
};

Constant_valueContext.prototype.signed_long_value = function() {
    return this.getTypedRuleContext(Signed_long_valueContext,0);
};

Constant_valueContext.prototype.signed_int_value = function() {
    return this.getTypedRuleContext(Signed_int_valueContext,0);
};

Constant_valueContext.prototype.time_value = function() {
    return this.getTypedRuleContext(Time_valueContext,0);
};

Constant_valueContext.prototype.string_value = function() {
    return this.getTypedRuleContext(String_valueContext,0);
};

Constant_valueContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterConstant_value(this);
	}
};

Constant_valueContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitConstant_value(this);
	}
};

Constant_valueContext.prototype.accept = function(visitor) {
    if ( visitor instanceof SiddhiQLVisitor ) {
        return visitor.visitConstant_value(this);
    } else {
        return visitor.visitChildren(this);
    }
};




SiddhiQLParser.prototype.constant_value = function() {

    var localctx = new Constant_valueContext(this, this._ctx, this.state);
    this.enterRule(localctx, 154, SiddhiQLParser.RULE_constant_value);
    try {
        this.state = 1026;
        var la_ = this._interp.adaptivePredict(this._input,128,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 1019; 
            this.bool_value();
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 1020; 
            this.signed_double_value();
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 1021; 
            this.signed_float_value();
            break;

        case 4:
            this.enterOuterAlt(localctx, 4);
            this.state = 1022; 
            this.signed_long_value();
            break;

        case 5:
            this.enterOuterAlt(localctx, 5);
            this.state = 1023; 
            this.signed_int_value();
            break;

        case 6:
            this.enterOuterAlt(localctx, 6);
            this.state = 1024; 
            this.time_value();
            break;

        case 7:
            this.enterOuterAlt(localctx, 7);
            this.state = 1025; 
            this.string_value();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function IdContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_id;
    return this;
}

IdContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
IdContext.prototype.constructor = IdContext;

IdContext.prototype.ID_QUOTES = function() {
    return this.getToken(SiddhiQLParser.ID_QUOTES, 0);
};

IdContext.prototype.ID = function() {
    return this.getToken(SiddhiQLParser.ID, 0);
};

IdContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterId(this);
	}
};

IdContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitId(this);
	}
};

IdContext.prototype.accept = function(visitor) {
    if ( visitor instanceof SiddhiQLVisitor ) {
        return visitor.visitId(this);
    } else {
        return visitor.visitChildren(this);
    }
};




SiddhiQLParser.prototype.id = function() {

    var localctx = new IdContext(this, this._ctx, this.state);
    this.enterRule(localctx, 156, SiddhiQLParser.RULE_id);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1028;
        _la = this._input.LA(1);
        if(!(_la===SiddhiQLParser.ID_QUOTES || _la===SiddhiQLParser.ID)) {
        this._errHandler.recoverInline(this);
        }
        this.consume();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function KeywordContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_keyword;
    return this;
}

KeywordContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
KeywordContext.prototype.constructor = KeywordContext;

KeywordContext.prototype.STREAM = function() {
    return this.getToken(SiddhiQLParser.STREAM, 0);
};

KeywordContext.prototype.DEFINE = function() {
    return this.getToken(SiddhiQLParser.DEFINE, 0);
};

KeywordContext.prototype.TABLE = function() {
    return this.getToken(SiddhiQLParser.TABLE, 0);
};

KeywordContext.prototype.FROM = function() {
    return this.getToken(SiddhiQLParser.FROM, 0);
};

KeywordContext.prototype.PARTITION = function() {
    return this.getToken(SiddhiQLParser.PARTITION, 0);
};

KeywordContext.prototype.WINDOW = function() {
    return this.getToken(SiddhiQLParser.WINDOW, 0);
};

KeywordContext.prototype.SELECT = function() {
    return this.getToken(SiddhiQLParser.SELECT, 0);
};

KeywordContext.prototype.GROUP = function() {
    return this.getToken(SiddhiQLParser.GROUP, 0);
};

KeywordContext.prototype.BY = function() {
    return this.getToken(SiddhiQLParser.BY, 0);
};

KeywordContext.prototype.HAVING = function() {
    return this.getToken(SiddhiQLParser.HAVING, 0);
};

KeywordContext.prototype.INSERT = function() {
    return this.getToken(SiddhiQLParser.INSERT, 0);
};

KeywordContext.prototype.DELETE = function() {
    return this.getToken(SiddhiQLParser.DELETE, 0);
};

KeywordContext.prototype.UPDATE = function() {
    return this.getToken(SiddhiQLParser.UPDATE, 0);
};

KeywordContext.prototype.RETURN = function() {
    return this.getToken(SiddhiQLParser.RETURN, 0);
};

KeywordContext.prototype.EVENTS = function() {
    return this.getToken(SiddhiQLParser.EVENTS, 0);
};

KeywordContext.prototype.INTO = function() {
    return this.getToken(SiddhiQLParser.INTO, 0);
};

KeywordContext.prototype.OUTPUT = function() {
    return this.getToken(SiddhiQLParser.OUTPUT, 0);
};

KeywordContext.prototype.EXPIRED = function() {
    return this.getToken(SiddhiQLParser.EXPIRED, 0);
};

KeywordContext.prototype.CURRENT = function() {
    return this.getToken(SiddhiQLParser.CURRENT, 0);
};

KeywordContext.prototype.SNAPSHOT = function() {
    return this.getToken(SiddhiQLParser.SNAPSHOT, 0);
};

KeywordContext.prototype.FOR = function() {
    return this.getToken(SiddhiQLParser.FOR, 0);
};

KeywordContext.prototype.RAW = function() {
    return this.getToken(SiddhiQLParser.RAW, 0);
};

KeywordContext.prototype.OF = function() {
    return this.getToken(SiddhiQLParser.OF, 0);
};

KeywordContext.prototype.AS = function() {
    return this.getToken(SiddhiQLParser.AS, 0);
};

KeywordContext.prototype.OR = function() {
    return this.getToken(SiddhiQLParser.OR, 0);
};

KeywordContext.prototype.AND = function() {
    return this.getToken(SiddhiQLParser.AND, 0);
};

KeywordContext.prototype.ON = function() {
    return this.getToken(SiddhiQLParser.ON, 0);
};

KeywordContext.prototype.IS = function() {
    return this.getToken(SiddhiQLParser.IS, 0);
};

KeywordContext.prototype.NOT = function() {
    return this.getToken(SiddhiQLParser.NOT, 0);
};

KeywordContext.prototype.WITHIN = function() {
    return this.getToken(SiddhiQLParser.WITHIN, 0);
};

KeywordContext.prototype.WITH = function() {
    return this.getToken(SiddhiQLParser.WITH, 0);
};

KeywordContext.prototype.BEGIN = function() {
    return this.getToken(SiddhiQLParser.BEGIN, 0);
};

KeywordContext.prototype.END = function() {
    return this.getToken(SiddhiQLParser.END, 0);
};

KeywordContext.prototype.NULL = function() {
    return this.getToken(SiddhiQLParser.NULL, 0);
};

KeywordContext.prototype.EVERY = function() {
    return this.getToken(SiddhiQLParser.EVERY, 0);
};

KeywordContext.prototype.LAST = function() {
    return this.getToken(SiddhiQLParser.LAST, 0);
};

KeywordContext.prototype.ALL = function() {
    return this.getToken(SiddhiQLParser.ALL, 0);
};

KeywordContext.prototype.FIRST = function() {
    return this.getToken(SiddhiQLParser.FIRST, 0);
};

KeywordContext.prototype.JOIN = function() {
    return this.getToken(SiddhiQLParser.JOIN, 0);
};

KeywordContext.prototype.INNER = function() {
    return this.getToken(SiddhiQLParser.INNER, 0);
};

KeywordContext.prototype.OUTER = function() {
    return this.getToken(SiddhiQLParser.OUTER, 0);
};

KeywordContext.prototype.RIGHT = function() {
    return this.getToken(SiddhiQLParser.RIGHT, 0);
};

KeywordContext.prototype.LEFT = function() {
    return this.getToken(SiddhiQLParser.LEFT, 0);
};

KeywordContext.prototype.FULL = function() {
    return this.getToken(SiddhiQLParser.FULL, 0);
};

KeywordContext.prototype.UNIDIRECTIONAL = function() {
    return this.getToken(SiddhiQLParser.UNIDIRECTIONAL, 0);
};

KeywordContext.prototype.YEARS = function() {
    return this.getToken(SiddhiQLParser.YEARS, 0);
};

KeywordContext.prototype.MONTHS = function() {
    return this.getToken(SiddhiQLParser.MONTHS, 0);
};

KeywordContext.prototype.WEEKS = function() {
    return this.getToken(SiddhiQLParser.WEEKS, 0);
};

KeywordContext.prototype.DAYS = function() {
    return this.getToken(SiddhiQLParser.DAYS, 0);
};

KeywordContext.prototype.HOURS = function() {
    return this.getToken(SiddhiQLParser.HOURS, 0);
};

KeywordContext.prototype.MINUTES = function() {
    return this.getToken(SiddhiQLParser.MINUTES, 0);
};

KeywordContext.prototype.SECONDS = function() {
    return this.getToken(SiddhiQLParser.SECONDS, 0);
};

KeywordContext.prototype.MILLISECONDS = function() {
    return this.getToken(SiddhiQLParser.MILLISECONDS, 0);
};

KeywordContext.prototype.FALSE = function() {
    return this.getToken(SiddhiQLParser.FALSE, 0);
};

KeywordContext.prototype.TRUE = function() {
    return this.getToken(SiddhiQLParser.TRUE, 0);
};

KeywordContext.prototype.STRING = function() {
    return this.getToken(SiddhiQLParser.STRING, 0);
};

KeywordContext.prototype.INT = function() {
    return this.getToken(SiddhiQLParser.INT, 0);
};

KeywordContext.prototype.LONG = function() {
    return this.getToken(SiddhiQLParser.LONG, 0);
};

KeywordContext.prototype.FLOAT = function() {
    return this.getToken(SiddhiQLParser.FLOAT, 0);
};

KeywordContext.prototype.DOUBLE = function() {
    return this.getToken(SiddhiQLParser.DOUBLE, 0);
};

KeywordContext.prototype.BOOL = function() {
    return this.getToken(SiddhiQLParser.BOOL, 0);
};

KeywordContext.prototype.OBJECT = function() {
    return this.getToken(SiddhiQLParser.OBJECT, 0);
};

KeywordContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterKeyword(this);
	}
};

KeywordContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitKeyword(this);
	}
};

KeywordContext.prototype.accept = function(visitor) {
    if ( visitor instanceof SiddhiQLVisitor ) {
        return visitor.visitKeyword(this);
    } else {
        return visitor.visitChildren(this);
    }
};




SiddhiQLParser.prototype.keyword = function() {

    var localctx = new KeywordContext(this, this._ctx, this.state);
    this.enterRule(localctx, 158, SiddhiQLParser.RULE_keyword);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1030;
        _la = this._input.LA(1);
        if(!(_la===SiddhiQLParser.STREAM || _la===SiddhiQLParser.DEFINE || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (SiddhiQLParser.TABLE - 32)) | (1 << (SiddhiQLParser.FROM - 32)) | (1 << (SiddhiQLParser.PARTITION - 32)) | (1 << (SiddhiQLParser.WINDOW - 32)) | (1 << (SiddhiQLParser.SELECT - 32)) | (1 << (SiddhiQLParser.GROUP - 32)) | (1 << (SiddhiQLParser.BY - 32)) | (1 << (SiddhiQLParser.HAVING - 32)) | (1 << (SiddhiQLParser.INSERT - 32)) | (1 << (SiddhiQLParser.DELETE - 32)) | (1 << (SiddhiQLParser.UPDATE - 32)) | (1 << (SiddhiQLParser.RETURN - 32)) | (1 << (SiddhiQLParser.EVENTS - 32)) | (1 << (SiddhiQLParser.INTO - 32)) | (1 << (SiddhiQLParser.OUTPUT - 32)) | (1 << (SiddhiQLParser.EXPIRED - 32)) | (1 << (SiddhiQLParser.CURRENT - 32)) | (1 << (SiddhiQLParser.SNAPSHOT - 32)) | (1 << (SiddhiQLParser.FOR - 32)) | (1 << (SiddhiQLParser.RAW - 32)) | (1 << (SiddhiQLParser.OF - 32)) | (1 << (SiddhiQLParser.AS - 32)) | (1 << (SiddhiQLParser.OR - 32)) | (1 << (SiddhiQLParser.AND - 32)) | (1 << (SiddhiQLParser.ON - 32)) | (1 << (SiddhiQLParser.IS - 32)) | (1 << (SiddhiQLParser.NOT - 32)) | (1 << (SiddhiQLParser.WITHIN - 32)) | (1 << (SiddhiQLParser.WITH - 32)) | (1 << (SiddhiQLParser.BEGIN - 32)))) !== 0) || ((((_la - 64)) & ~0x1f) == 0 && ((1 << (_la - 64)) & ((1 << (SiddhiQLParser.END - 64)) | (1 << (SiddhiQLParser.NULL - 64)) | (1 << (SiddhiQLParser.EVERY - 64)) | (1 << (SiddhiQLParser.LAST - 64)) | (1 << (SiddhiQLParser.ALL - 64)) | (1 << (SiddhiQLParser.FIRST - 64)) | (1 << (SiddhiQLParser.JOIN - 64)) | (1 << (SiddhiQLParser.INNER - 64)) | (1 << (SiddhiQLParser.OUTER - 64)) | (1 << (SiddhiQLParser.RIGHT - 64)) | (1 << (SiddhiQLParser.LEFT - 64)) | (1 << (SiddhiQLParser.FULL - 64)) | (1 << (SiddhiQLParser.UNIDIRECTIONAL - 64)) | (1 << (SiddhiQLParser.YEARS - 64)) | (1 << (SiddhiQLParser.MONTHS - 64)) | (1 << (SiddhiQLParser.WEEKS - 64)) | (1 << (SiddhiQLParser.DAYS - 64)) | (1 << (SiddhiQLParser.HOURS - 64)) | (1 << (SiddhiQLParser.MINUTES - 64)) | (1 << (SiddhiQLParser.SECONDS - 64)) | (1 << (SiddhiQLParser.MILLISECONDS - 64)) | (1 << (SiddhiQLParser.FALSE - 64)) | (1 << (SiddhiQLParser.TRUE - 64)) | (1 << (SiddhiQLParser.STRING - 64)) | (1 << (SiddhiQLParser.INT - 64)) | (1 << (SiddhiQLParser.LONG - 64)) | (1 << (SiddhiQLParser.FLOAT - 64)) | (1 << (SiddhiQLParser.DOUBLE - 64)) | (1 << (SiddhiQLParser.BOOL - 64)) | (1 << (SiddhiQLParser.OBJECT - 64)))) !== 0))) {
        this._errHandler.recoverInline(this);
        }
        this.consume();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Time_valueContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_time_value;
    return this;
}

Time_valueContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Time_valueContext.prototype.constructor = Time_valueContext;

Time_valueContext.prototype.year_value = function() {
    return this.getTypedRuleContext(Year_valueContext,0);
};

Time_valueContext.prototype.month_value = function() {
    return this.getTypedRuleContext(Month_valueContext,0);
};

Time_valueContext.prototype.week_value = function() {
    return this.getTypedRuleContext(Week_valueContext,0);
};

Time_valueContext.prototype.day_value = function() {
    return this.getTypedRuleContext(Day_valueContext,0);
};

Time_valueContext.prototype.hour_value = function() {
    return this.getTypedRuleContext(Hour_valueContext,0);
};

Time_valueContext.prototype.minute_value = function() {
    return this.getTypedRuleContext(Minute_valueContext,0);
};

Time_valueContext.prototype.second_value = function() {
    return this.getTypedRuleContext(Second_valueContext,0);
};

Time_valueContext.prototype.millisecond_value = function() {
    return this.getTypedRuleContext(Millisecond_valueContext,0);
};

Time_valueContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterTime_value(this);
	}
};

Time_valueContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitTime_value(this);
	}
};

Time_valueContext.prototype.accept = function(visitor) {
    if ( visitor instanceof SiddhiQLVisitor ) {
        return visitor.visitTime_value(this);
    } else {
        return visitor.visitChildren(this);
    }
};




SiddhiQLParser.prototype.time_value = function() {

    var localctx = new Time_valueContext(this, this._ctx, this.state);
    this.enterRule(localctx, 160, SiddhiQLParser.RULE_time_value);
    try {
        this.state = 1124;
        var la_ = this._interp.adaptivePredict(this._input,157,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 1032; 
            this.year_value();
            this.state = 1034;
            var la_ = this._interp.adaptivePredict(this._input,129,this._ctx);
            if(la_===1) {
                this.state = 1033; 
                this.month_value();

            }
            this.state = 1037;
            var la_ = this._interp.adaptivePredict(this._input,130,this._ctx);
            if(la_===1) {
                this.state = 1036; 
                this.week_value();

            }
            this.state = 1040;
            var la_ = this._interp.adaptivePredict(this._input,131,this._ctx);
            if(la_===1) {
                this.state = 1039; 
                this.day_value();

            }
            this.state = 1043;
            var la_ = this._interp.adaptivePredict(this._input,132,this._ctx);
            if(la_===1) {
                this.state = 1042; 
                this.hour_value();

            }
            this.state = 1046;
            var la_ = this._interp.adaptivePredict(this._input,133,this._ctx);
            if(la_===1) {
                this.state = 1045; 
                this.minute_value();

            }
            this.state = 1049;
            var la_ = this._interp.adaptivePredict(this._input,134,this._ctx);
            if(la_===1) {
                this.state = 1048; 
                this.second_value();

            }
            this.state = 1052;
            var la_ = this._interp.adaptivePredict(this._input,135,this._ctx);
            if(la_===1) {
                this.state = 1051; 
                this.millisecond_value();

            }
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 1054; 
            this.month_value();
            this.state = 1056;
            var la_ = this._interp.adaptivePredict(this._input,136,this._ctx);
            if(la_===1) {
                this.state = 1055; 
                this.week_value();

            }
            this.state = 1059;
            var la_ = this._interp.adaptivePredict(this._input,137,this._ctx);
            if(la_===1) {
                this.state = 1058; 
                this.day_value();

            }
            this.state = 1062;
            var la_ = this._interp.adaptivePredict(this._input,138,this._ctx);
            if(la_===1) {
                this.state = 1061; 
                this.hour_value();

            }
            this.state = 1065;
            var la_ = this._interp.adaptivePredict(this._input,139,this._ctx);
            if(la_===1) {
                this.state = 1064; 
                this.minute_value();

            }
            this.state = 1068;
            var la_ = this._interp.adaptivePredict(this._input,140,this._ctx);
            if(la_===1) {
                this.state = 1067; 
                this.second_value();

            }
            this.state = 1071;
            var la_ = this._interp.adaptivePredict(this._input,141,this._ctx);
            if(la_===1) {
                this.state = 1070; 
                this.millisecond_value();

            }
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 1073; 
            this.week_value();
            this.state = 1075;
            var la_ = this._interp.adaptivePredict(this._input,142,this._ctx);
            if(la_===1) {
                this.state = 1074; 
                this.day_value();

            }
            this.state = 1078;
            var la_ = this._interp.adaptivePredict(this._input,143,this._ctx);
            if(la_===1) {
                this.state = 1077; 
                this.hour_value();

            }
            this.state = 1081;
            var la_ = this._interp.adaptivePredict(this._input,144,this._ctx);
            if(la_===1) {
                this.state = 1080; 
                this.minute_value();

            }
            this.state = 1084;
            var la_ = this._interp.adaptivePredict(this._input,145,this._ctx);
            if(la_===1) {
                this.state = 1083; 
                this.second_value();

            }
            this.state = 1087;
            var la_ = this._interp.adaptivePredict(this._input,146,this._ctx);
            if(la_===1) {
                this.state = 1086; 
                this.millisecond_value();

            }
            break;

        case 4:
            this.enterOuterAlt(localctx, 4);
            this.state = 1089; 
            this.day_value();
            this.state = 1091;
            var la_ = this._interp.adaptivePredict(this._input,147,this._ctx);
            if(la_===1) {
                this.state = 1090; 
                this.hour_value();

            }
            this.state = 1094;
            var la_ = this._interp.adaptivePredict(this._input,148,this._ctx);
            if(la_===1) {
                this.state = 1093; 
                this.minute_value();

            }
            this.state = 1097;
            var la_ = this._interp.adaptivePredict(this._input,149,this._ctx);
            if(la_===1) {
                this.state = 1096; 
                this.second_value();

            }
            this.state = 1100;
            var la_ = this._interp.adaptivePredict(this._input,150,this._ctx);
            if(la_===1) {
                this.state = 1099; 
                this.millisecond_value();

            }
            break;

        case 5:
            this.enterOuterAlt(localctx, 5);
            this.state = 1102; 
            this.hour_value();
            this.state = 1104;
            var la_ = this._interp.adaptivePredict(this._input,151,this._ctx);
            if(la_===1) {
                this.state = 1103; 
                this.minute_value();

            }
            this.state = 1107;
            var la_ = this._interp.adaptivePredict(this._input,152,this._ctx);
            if(la_===1) {
                this.state = 1106; 
                this.second_value();

            }
            this.state = 1110;
            var la_ = this._interp.adaptivePredict(this._input,153,this._ctx);
            if(la_===1) {
                this.state = 1109; 
                this.millisecond_value();

            }
            break;

        case 6:
            this.enterOuterAlt(localctx, 6);
            this.state = 1112; 
            this.minute_value();
            this.state = 1114;
            var la_ = this._interp.adaptivePredict(this._input,154,this._ctx);
            if(la_===1) {
                this.state = 1113; 
                this.second_value();

            }
            this.state = 1117;
            var la_ = this._interp.adaptivePredict(this._input,155,this._ctx);
            if(la_===1) {
                this.state = 1116; 
                this.millisecond_value();

            }
            break;

        case 7:
            this.enterOuterAlt(localctx, 7);
            this.state = 1119; 
            this.second_value();
            this.state = 1121;
            var la_ = this._interp.adaptivePredict(this._input,156,this._ctx);
            if(la_===1) {
                this.state = 1120; 
                this.millisecond_value();

            }
            break;

        case 8:
            this.enterOuterAlt(localctx, 8);
            this.state = 1123; 
            this.millisecond_value();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Year_valueContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_year_value;
    return this;
}

Year_valueContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Year_valueContext.prototype.constructor = Year_valueContext;

Year_valueContext.prototype.INT_LITERAL = function() {
    return this.getToken(SiddhiQLParser.INT_LITERAL, 0);
};

Year_valueContext.prototype.YEARS = function() {
    return this.getToken(SiddhiQLParser.YEARS, 0);
};

Year_valueContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterYear_value(this);
	}
};

Year_valueContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitYear_value(this);
	}
};

Year_valueContext.prototype.accept = function(visitor) {
    if ( visitor instanceof SiddhiQLVisitor ) {
        return visitor.visitYear_value(this);
    } else {
        return visitor.visitChildren(this);
    }
};




SiddhiQLParser.prototype.year_value = function() {

    var localctx = new Year_valueContext(this, this._ctx, this.state);
    this.enterRule(localctx, 162, SiddhiQLParser.RULE_year_value);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1126;
        this.match(SiddhiQLParser.INT_LITERAL);
        this.state = 1127;
        this.match(SiddhiQLParser.YEARS);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Month_valueContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_month_value;
    return this;
}

Month_valueContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Month_valueContext.prototype.constructor = Month_valueContext;

Month_valueContext.prototype.INT_LITERAL = function() {
    return this.getToken(SiddhiQLParser.INT_LITERAL, 0);
};

Month_valueContext.prototype.MONTHS = function() {
    return this.getToken(SiddhiQLParser.MONTHS, 0);
};

Month_valueContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterMonth_value(this);
	}
};

Month_valueContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitMonth_value(this);
	}
};

Month_valueContext.prototype.accept = function(visitor) {
    if ( visitor instanceof SiddhiQLVisitor ) {
        return visitor.visitMonth_value(this);
    } else {
        return visitor.visitChildren(this);
    }
};




SiddhiQLParser.prototype.month_value = function() {

    var localctx = new Month_valueContext(this, this._ctx, this.state);
    this.enterRule(localctx, 164, SiddhiQLParser.RULE_month_value);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1129;
        this.match(SiddhiQLParser.INT_LITERAL);
        this.state = 1130;
        this.match(SiddhiQLParser.MONTHS);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Week_valueContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_week_value;
    return this;
}

Week_valueContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Week_valueContext.prototype.constructor = Week_valueContext;

Week_valueContext.prototype.INT_LITERAL = function() {
    return this.getToken(SiddhiQLParser.INT_LITERAL, 0);
};

Week_valueContext.prototype.WEEKS = function() {
    return this.getToken(SiddhiQLParser.WEEKS, 0);
};

Week_valueContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterWeek_value(this);
	}
};

Week_valueContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitWeek_value(this);
	}
};

Week_valueContext.prototype.accept = function(visitor) {
    if ( visitor instanceof SiddhiQLVisitor ) {
        return visitor.visitWeek_value(this);
    } else {
        return visitor.visitChildren(this);
    }
};




SiddhiQLParser.prototype.week_value = function() {

    var localctx = new Week_valueContext(this, this._ctx, this.state);
    this.enterRule(localctx, 166, SiddhiQLParser.RULE_week_value);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1132;
        this.match(SiddhiQLParser.INT_LITERAL);
        this.state = 1133;
        this.match(SiddhiQLParser.WEEKS);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Day_valueContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_day_value;
    return this;
}

Day_valueContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Day_valueContext.prototype.constructor = Day_valueContext;

Day_valueContext.prototype.INT_LITERAL = function() {
    return this.getToken(SiddhiQLParser.INT_LITERAL, 0);
};

Day_valueContext.prototype.DAYS = function() {
    return this.getToken(SiddhiQLParser.DAYS, 0);
};

Day_valueContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterDay_value(this);
	}
};

Day_valueContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitDay_value(this);
	}
};

Day_valueContext.prototype.accept = function(visitor) {
    if ( visitor instanceof SiddhiQLVisitor ) {
        return visitor.visitDay_value(this);
    } else {
        return visitor.visitChildren(this);
    }
};




SiddhiQLParser.prototype.day_value = function() {

    var localctx = new Day_valueContext(this, this._ctx, this.state);
    this.enterRule(localctx, 168, SiddhiQLParser.RULE_day_value);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1135;
        this.match(SiddhiQLParser.INT_LITERAL);
        this.state = 1136;
        this.match(SiddhiQLParser.DAYS);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Hour_valueContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_hour_value;
    return this;
}

Hour_valueContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Hour_valueContext.prototype.constructor = Hour_valueContext;

Hour_valueContext.prototype.INT_LITERAL = function() {
    return this.getToken(SiddhiQLParser.INT_LITERAL, 0);
};

Hour_valueContext.prototype.HOURS = function() {
    return this.getToken(SiddhiQLParser.HOURS, 0);
};

Hour_valueContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterHour_value(this);
	}
};

Hour_valueContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitHour_value(this);
	}
};

Hour_valueContext.prototype.accept = function(visitor) {
    if ( visitor instanceof SiddhiQLVisitor ) {
        return visitor.visitHour_value(this);
    } else {
        return visitor.visitChildren(this);
    }
};




SiddhiQLParser.prototype.hour_value = function() {

    var localctx = new Hour_valueContext(this, this._ctx, this.state);
    this.enterRule(localctx, 170, SiddhiQLParser.RULE_hour_value);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1138;
        this.match(SiddhiQLParser.INT_LITERAL);
        this.state = 1139;
        this.match(SiddhiQLParser.HOURS);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Minute_valueContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_minute_value;
    return this;
}

Minute_valueContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Minute_valueContext.prototype.constructor = Minute_valueContext;

Minute_valueContext.prototype.INT_LITERAL = function() {
    return this.getToken(SiddhiQLParser.INT_LITERAL, 0);
};

Minute_valueContext.prototype.MINUTES = function() {
    return this.getToken(SiddhiQLParser.MINUTES, 0);
};

Minute_valueContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterMinute_value(this);
	}
};

Minute_valueContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitMinute_value(this);
	}
};

Minute_valueContext.prototype.accept = function(visitor) {
    if ( visitor instanceof SiddhiQLVisitor ) {
        return visitor.visitMinute_value(this);
    } else {
        return visitor.visitChildren(this);
    }
};




SiddhiQLParser.prototype.minute_value = function() {

    var localctx = new Minute_valueContext(this, this._ctx, this.state);
    this.enterRule(localctx, 172, SiddhiQLParser.RULE_minute_value);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1141;
        this.match(SiddhiQLParser.INT_LITERAL);
        this.state = 1142;
        this.match(SiddhiQLParser.MINUTES);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Second_valueContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_second_value;
    return this;
}

Second_valueContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Second_valueContext.prototype.constructor = Second_valueContext;

Second_valueContext.prototype.INT_LITERAL = function() {
    return this.getToken(SiddhiQLParser.INT_LITERAL, 0);
};

Second_valueContext.prototype.SECONDS = function() {
    return this.getToken(SiddhiQLParser.SECONDS, 0);
};

Second_valueContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterSecond_value(this);
	}
};

Second_valueContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitSecond_value(this);
	}
};

Second_valueContext.prototype.accept = function(visitor) {
    if ( visitor instanceof SiddhiQLVisitor ) {
        return visitor.visitSecond_value(this);
    } else {
        return visitor.visitChildren(this);
    }
};




SiddhiQLParser.prototype.second_value = function() {

    var localctx = new Second_valueContext(this, this._ctx, this.state);
    this.enterRule(localctx, 174, SiddhiQLParser.RULE_second_value);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1144;
        this.match(SiddhiQLParser.INT_LITERAL);
        this.state = 1145;
        this.match(SiddhiQLParser.SECONDS);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Millisecond_valueContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_millisecond_value;
    return this;
}

Millisecond_valueContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Millisecond_valueContext.prototype.constructor = Millisecond_valueContext;

Millisecond_valueContext.prototype.INT_LITERAL = function() {
    return this.getToken(SiddhiQLParser.INT_LITERAL, 0);
};

Millisecond_valueContext.prototype.MILLISECONDS = function() {
    return this.getToken(SiddhiQLParser.MILLISECONDS, 0);
};

Millisecond_valueContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterMillisecond_value(this);
	}
};

Millisecond_valueContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitMillisecond_value(this);
	}
};

Millisecond_valueContext.prototype.accept = function(visitor) {
    if ( visitor instanceof SiddhiQLVisitor ) {
        return visitor.visitMillisecond_value(this);
    } else {
        return visitor.visitChildren(this);
    }
};




SiddhiQLParser.prototype.millisecond_value = function() {

    var localctx = new Millisecond_valueContext(this, this._ctx, this.state);
    this.enterRule(localctx, 176, SiddhiQLParser.RULE_millisecond_value);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1147;
        this.match(SiddhiQLParser.INT_LITERAL);
        this.state = 1148;
        this.match(SiddhiQLParser.MILLISECONDS);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Signed_double_valueContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_signed_double_value;
    return this;
}

Signed_double_valueContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Signed_double_valueContext.prototype.constructor = Signed_double_valueContext;

Signed_double_valueContext.prototype.DOUBLE_LITERAL = function() {
    return this.getToken(SiddhiQLParser.DOUBLE_LITERAL, 0);
};

Signed_double_valueContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterSigned_double_value(this);
	}
};

Signed_double_valueContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitSigned_double_value(this);
	}
};

Signed_double_valueContext.prototype.accept = function(visitor) {
    if ( visitor instanceof SiddhiQLVisitor ) {
        return visitor.visitSigned_double_value(this);
    } else {
        return visitor.visitChildren(this);
    }
};




SiddhiQLParser.prototype.signed_double_value = function() {

    var localctx = new Signed_double_valueContext(this, this._ctx, this.state);
    this.enterRule(localctx, 178, SiddhiQLParser.RULE_signed_double_value);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1151;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.PLUS || _la===SiddhiQLParser.MINUS) {
            this.state = 1150;
            _la = this._input.LA(1);
            if(!(_la===SiddhiQLParser.PLUS || _la===SiddhiQLParser.MINUS)) {
            this._errHandler.recoverInline(this);
            }
            this.consume();
        }

        this.state = 1153;
        this.match(SiddhiQLParser.DOUBLE_LITERAL);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Signed_long_valueContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_signed_long_value;
    return this;
}

Signed_long_valueContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Signed_long_valueContext.prototype.constructor = Signed_long_valueContext;

Signed_long_valueContext.prototype.LONG_LITERAL = function() {
    return this.getToken(SiddhiQLParser.LONG_LITERAL, 0);
};

Signed_long_valueContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterSigned_long_value(this);
	}
};

Signed_long_valueContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitSigned_long_value(this);
	}
};

Signed_long_valueContext.prototype.accept = function(visitor) {
    if ( visitor instanceof SiddhiQLVisitor ) {
        return visitor.visitSigned_long_value(this);
    } else {
        return visitor.visitChildren(this);
    }
};




SiddhiQLParser.prototype.signed_long_value = function() {

    var localctx = new Signed_long_valueContext(this, this._ctx, this.state);
    this.enterRule(localctx, 180, SiddhiQLParser.RULE_signed_long_value);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1156;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.PLUS || _la===SiddhiQLParser.MINUS) {
            this.state = 1155;
            _la = this._input.LA(1);
            if(!(_la===SiddhiQLParser.PLUS || _la===SiddhiQLParser.MINUS)) {
            this._errHandler.recoverInline(this);
            }
            this.consume();
        }

        this.state = 1158;
        this.match(SiddhiQLParser.LONG_LITERAL);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Signed_float_valueContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_signed_float_value;
    return this;
}

Signed_float_valueContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Signed_float_valueContext.prototype.constructor = Signed_float_valueContext;

Signed_float_valueContext.prototype.FLOAT_LITERAL = function() {
    return this.getToken(SiddhiQLParser.FLOAT_LITERAL, 0);
};

Signed_float_valueContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterSigned_float_value(this);
	}
};

Signed_float_valueContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitSigned_float_value(this);
	}
};

Signed_float_valueContext.prototype.accept = function(visitor) {
    if ( visitor instanceof SiddhiQLVisitor ) {
        return visitor.visitSigned_float_value(this);
    } else {
        return visitor.visitChildren(this);
    }
};




SiddhiQLParser.prototype.signed_float_value = function() {

    var localctx = new Signed_float_valueContext(this, this._ctx, this.state);
    this.enterRule(localctx, 182, SiddhiQLParser.RULE_signed_float_value);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1161;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.PLUS || _la===SiddhiQLParser.MINUS) {
            this.state = 1160;
            _la = this._input.LA(1);
            if(!(_la===SiddhiQLParser.PLUS || _la===SiddhiQLParser.MINUS)) {
            this._errHandler.recoverInline(this);
            }
            this.consume();
        }

        this.state = 1163;
        this.match(SiddhiQLParser.FLOAT_LITERAL);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Signed_int_valueContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_signed_int_value;
    return this;
}

Signed_int_valueContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Signed_int_valueContext.prototype.constructor = Signed_int_valueContext;

Signed_int_valueContext.prototype.INT_LITERAL = function() {
    return this.getToken(SiddhiQLParser.INT_LITERAL, 0);
};

Signed_int_valueContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterSigned_int_value(this);
	}
};

Signed_int_valueContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitSigned_int_value(this);
	}
};

Signed_int_valueContext.prototype.accept = function(visitor) {
    if ( visitor instanceof SiddhiQLVisitor ) {
        return visitor.visitSigned_int_value(this);
    } else {
        return visitor.visitChildren(this);
    }
};




SiddhiQLParser.prototype.signed_int_value = function() {

    var localctx = new Signed_int_valueContext(this, this._ctx, this.state);
    this.enterRule(localctx, 184, SiddhiQLParser.RULE_signed_int_value);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1166;
        _la = this._input.LA(1);
        if(_la===SiddhiQLParser.PLUS || _la===SiddhiQLParser.MINUS) {
            this.state = 1165;
            _la = this._input.LA(1);
            if(!(_la===SiddhiQLParser.PLUS || _la===SiddhiQLParser.MINUS)) {
            this._errHandler.recoverInline(this);
            }
            this.consume();
        }

        this.state = 1168;
        this.match(SiddhiQLParser.INT_LITERAL);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Bool_valueContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_bool_value;
    return this;
}

Bool_valueContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Bool_valueContext.prototype.constructor = Bool_valueContext;

Bool_valueContext.prototype.TRUE = function() {
    return this.getToken(SiddhiQLParser.TRUE, 0);
};

Bool_valueContext.prototype.FALSE = function() {
    return this.getToken(SiddhiQLParser.FALSE, 0);
};

Bool_valueContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterBool_value(this);
	}
};

Bool_valueContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitBool_value(this);
	}
};

Bool_valueContext.prototype.accept = function(visitor) {
    if ( visitor instanceof SiddhiQLVisitor ) {
        return visitor.visitBool_value(this);
    } else {
        return visitor.visitChildren(this);
    }
};




SiddhiQLParser.prototype.bool_value = function() {

    var localctx = new Bool_valueContext(this, this._ctx, this.state);
    this.enterRule(localctx, 186, SiddhiQLParser.RULE_bool_value);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1170;
        _la = this._input.LA(1);
        if(!(_la===SiddhiQLParser.FALSE || _la===SiddhiQLParser.TRUE)) {
        this._errHandler.recoverInline(this);
        }
        this.consume();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function String_valueContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = SiddhiQLParser.RULE_string_value;
    return this;
}

String_valueContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
String_valueContext.prototype.constructor = String_valueContext;

String_valueContext.prototype.STRING_LITERAL = function() {
    return this.getToken(SiddhiQLParser.STRING_LITERAL, 0);
};

String_valueContext.prototype.enterRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.enterString_value(this);
	}
};

String_valueContext.prototype.exitRule = function(listener) {
    if(listener instanceof SiddhiQLListener ) {
        listener.exitString_value(this);
	}
};

String_valueContext.prototype.accept = function(visitor) {
    if ( visitor instanceof SiddhiQLVisitor ) {
        return visitor.visitString_value(this);
    } else {
        return visitor.visitChildren(this);
    }
};




SiddhiQLParser.prototype.string_value = function() {

    var localctx = new String_valueContext(this, this._ctx, this.state);
    this.enterRule(localctx, 188, SiddhiQLParser.RULE_string_value);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1172;
        this.match(SiddhiQLParser.STRING_LITERAL);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


SiddhiQLParser.prototype.sempred = function(localctx, ruleIndex, predIndex) {
	switch(ruleIndex) {
	case 28:
			return this.every_pattern_source_chain_sempred(localctx, predIndex);
	case 29:
			return this.pattern_source_chain_sempred(localctx, predIndex);
	case 38:
			return this.sequence_source_chain_sempred(localctx, predIndex);
	case 56:
			return this.math_operation_sempred(localctx, predIndex);
    default:
        throw "No predicate with index:" + ruleIndex;
   }
};

SiddhiQLParser.prototype.every_pattern_source_chain_sempred = function(localctx, predIndex) {
	switch(predIndex) {
		case 0:
			return this.precpred(this._ctx, 3);
		default:
			throw "No predicate with index:" + predIndex;
	}
};

SiddhiQLParser.prototype.pattern_source_chain_sempred = function(localctx, predIndex) {
	switch(predIndex) {
		case 1:
			return this.precpred(this._ctx, 2);
		default:
			throw "No predicate with index:" + predIndex;
	}
};

SiddhiQLParser.prototype.sequence_source_chain_sempred = function(localctx, predIndex) {
	switch(predIndex) {
		case 2:
			return this.precpred(this._ctx, 2);
		default:
			throw "No predicate with index:" + predIndex;
	}
};

SiddhiQLParser.prototype.math_operation_sempred = function(localctx, predIndex) {
	switch(predIndex) {
		case 3:
			return this.precpred(this._ctx, 11);
		case 4:
			return this.precpred(this._ctx, 10);
		case 5:
			return this.precpred(this._ctx, 9);
		case 6:
			return this.precpred(this._ctx, 8);
		case 7:
			return this.precpred(this._ctx, 6);
		case 8:
			return this.precpred(this._ctx, 5);
		case 9:
			return this.precpred(this._ctx, 7);
		default:
			throw "No predicate with index:" + predIndex;
	}
};


exports.SiddhiQLParser = SiddhiQLParser;
